// Code generated by protoc-gen-go. DO NOT EDIT.
// source: huawei-bfd.proto

package huawei_bfd

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Bfd struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bfd) Reset()         { *m = Bfd{} }
func (m *Bfd) String() string { return proto.CompactTextString(m) }
func (*Bfd) ProtoMessage()    {}
func (*Bfd) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{0}
}

func (m *Bfd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bfd.Unmarshal(m, b)
}
func (m *Bfd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bfd.Marshal(b, m, deterministic)
}
func (m *Bfd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bfd.Merge(m, src)
}
func (m *Bfd) XXX_Size() int {
	return xxx_messageInfo_Bfd.Size(m)
}
func (m *Bfd) XXX_DiscardUnknown() {
	xxx_messageInfo_Bfd.DiscardUnknown(m)
}

var xxx_messageInfo_Bfd proto.InternalMessageInfo

type HwBfdPWSessDown struct {
	BindType             string   `protobuf:"bytes,1,opt,name=BindType,proto3" json:"BindType,omitempty"`
	Diagnosis            uint32   `protobuf:"varint,2,opt,name=Diagnosis,proto3" json:"Diagnosis,omitempty"`
	LocalDiscriminator   uint32   `protobuf:"varint,3,opt,name=LocalDiscriminator,proto3" json:"LocalDiscriminator,omitempty"`
	PwId                 uint32   `protobuf:"varint,4,opt,name=PwId,proto3" json:"PwId,omitempty"`
	PwSecondary          uint32   `protobuf:"varint,5,opt,name=PwSecondary,proto3" json:"PwSecondary,omitempty"`
	SessIndex            uint32   `protobuf:"varint,6,opt,name=SessIndex,proto3" json:"SessIndex,omitempty"`
	SessionName          string   `protobuf:"bytes,7,opt,name=SessionName,proto3" json:"SessionName,omitempty"`
	VsiName              string   `protobuf:"bytes,8,opt,name=VsiName,proto3" json:"VsiName,omitempty"`
	VsiPeerAddress       string   `protobuf:"bytes,9,opt,name=VsiPeerAddress,proto3" json:"VsiPeerAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdPWSessDown) Reset()         { *m = HwBfdPWSessDown{} }
func (m *HwBfdPWSessDown) String() string { return proto.CompactTextString(m) }
func (*HwBfdPWSessDown) ProtoMessage()    {}
func (*HwBfdPWSessDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{1}
}

func (m *HwBfdPWSessDown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdPWSessDown.Unmarshal(m, b)
}
func (m *HwBfdPWSessDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdPWSessDown.Marshal(b, m, deterministic)
}
func (m *HwBfdPWSessDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdPWSessDown.Merge(m, src)
}
func (m *HwBfdPWSessDown) XXX_Size() int {
	return xxx_messageInfo_HwBfdPWSessDown.Size(m)
}
func (m *HwBfdPWSessDown) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdPWSessDown.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdPWSessDown proto.InternalMessageInfo

func (m *HwBfdPWSessDown) GetBindType() string {
	if m != nil {
		return m.BindType
	}
	return ""
}

func (m *HwBfdPWSessDown) GetDiagnosis() uint32 {
	if m != nil {
		return m.Diagnosis
	}
	return 0
}

func (m *HwBfdPWSessDown) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *HwBfdPWSessDown) GetPwId() uint32 {
	if m != nil {
		return m.PwId
	}
	return 0
}

func (m *HwBfdPWSessDown) GetPwSecondary() uint32 {
	if m != nil {
		return m.PwSecondary
	}
	return 0
}

func (m *HwBfdPWSessDown) GetSessIndex() uint32 {
	if m != nil {
		return m.SessIndex
	}
	return 0
}

func (m *HwBfdPWSessDown) GetSessionName() string {
	if m != nil {
		return m.SessionName
	}
	return ""
}

func (m *HwBfdPWSessDown) GetVsiName() string {
	if m != nil {
		return m.VsiName
	}
	return ""
}

func (m *HwBfdPWSessDown) GetVsiPeerAddress() string {
	if m != nil {
		return m.VsiPeerAddress
	}
	return ""
}

type HwBfdPWSessUp struct {
	BindType             string   `protobuf:"bytes,1,opt,name=BindType,proto3" json:"BindType,omitempty"`
	Diagnosis            uint32   `protobuf:"varint,2,opt,name=Diagnosis,proto3" json:"Diagnosis,omitempty"`
	LocalDiscriminator   uint32   `protobuf:"varint,3,opt,name=LocalDiscriminator,proto3" json:"LocalDiscriminator,omitempty"`
	PwId                 uint32   `protobuf:"varint,4,opt,name=PwId,proto3" json:"PwId,omitempty"`
	PwSecondary          uint32   `protobuf:"varint,5,opt,name=PwSecondary,proto3" json:"PwSecondary,omitempty"`
	SessIndex            uint32   `protobuf:"varint,6,opt,name=SessIndex,proto3" json:"SessIndex,omitempty"`
	SessionName          string   `protobuf:"bytes,7,opt,name=SessionName,proto3" json:"SessionName,omitempty"`
	VsiName              string   `protobuf:"bytes,8,opt,name=VsiName,proto3" json:"VsiName,omitempty"`
	VsiPeerAddress       string   `protobuf:"bytes,9,opt,name=VsiPeerAddress,proto3" json:"VsiPeerAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdPWSessUp) Reset()         { *m = HwBfdPWSessUp{} }
func (m *HwBfdPWSessUp) String() string { return proto.CompactTextString(m) }
func (*HwBfdPWSessUp) ProtoMessage()    {}
func (*HwBfdPWSessUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{2}
}

func (m *HwBfdPWSessUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdPWSessUp.Unmarshal(m, b)
}
func (m *HwBfdPWSessUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdPWSessUp.Marshal(b, m, deterministic)
}
func (m *HwBfdPWSessUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdPWSessUp.Merge(m, src)
}
func (m *HwBfdPWSessUp) XXX_Size() int {
	return xxx_messageInfo_HwBfdPWSessUp.Size(m)
}
func (m *HwBfdPWSessUp) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdPWSessUp.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdPWSessUp proto.InternalMessageInfo

func (m *HwBfdPWSessUp) GetBindType() string {
	if m != nil {
		return m.BindType
	}
	return ""
}

func (m *HwBfdPWSessUp) GetDiagnosis() uint32 {
	if m != nil {
		return m.Diagnosis
	}
	return 0
}

func (m *HwBfdPWSessUp) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *HwBfdPWSessUp) GetPwId() uint32 {
	if m != nil {
		return m.PwId
	}
	return 0
}

func (m *HwBfdPWSessUp) GetPwSecondary() uint32 {
	if m != nil {
		return m.PwSecondary
	}
	return 0
}

func (m *HwBfdPWSessUp) GetSessIndex() uint32 {
	if m != nil {
		return m.SessIndex
	}
	return 0
}

func (m *HwBfdPWSessUp) GetSessionName() string {
	if m != nil {
		return m.SessionName
	}
	return ""
}

func (m *HwBfdPWSessUp) GetVsiName() string {
	if m != nil {
		return m.VsiName
	}
	return ""
}

func (m *HwBfdPWSessUp) GetVsiPeerAddress() string {
	if m != nil {
		return m.VsiPeerAddress
	}
	return ""
}

type HwBfdSessApOperFailed struct {
	Apid                 uint32   `protobuf:"varint,1,opt,name=apid,proto3" json:"apid,omitempty"`
	Ipaddress            string   `protobuf:"bytes,2,opt,name=ipaddress,proto3" json:"ipaddress,omitempty"`
	Operation            string   `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	Reason               string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Username             string   `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdSessApOperFailed) Reset()         { *m = HwBfdSessApOperFailed{} }
func (m *HwBfdSessApOperFailed) String() string { return proto.CompactTextString(m) }
func (*HwBfdSessApOperFailed) ProtoMessage()    {}
func (*HwBfdSessApOperFailed) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{3}
}

func (m *HwBfdSessApOperFailed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdSessApOperFailed.Unmarshal(m, b)
}
func (m *HwBfdSessApOperFailed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdSessApOperFailed.Marshal(b, m, deterministic)
}
func (m *HwBfdSessApOperFailed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdSessApOperFailed.Merge(m, src)
}
func (m *HwBfdSessApOperFailed) XXX_Size() int {
	return xxx_messageInfo_HwBfdSessApOperFailed.Size(m)
}
func (m *HwBfdSessApOperFailed) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdSessApOperFailed.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdSessApOperFailed proto.InternalMessageInfo

func (m *HwBfdSessApOperFailed) GetApid() uint32 {
	if m != nil {
		return m.Apid
	}
	return 0
}

func (m *HwBfdSessApOperFailed) GetIpaddress() string {
	if m != nil {
		return m.Ipaddress
	}
	return ""
}

func (m *HwBfdSessApOperFailed) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *HwBfdSessApOperFailed) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *HwBfdSessApOperFailed) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type HwBfdSessCfgRemoteFail struct {
	ConfigurationName        string   `protobuf:"bytes,1,opt,name=ConfigurationName,proto3" json:"ConfigurationName,omitempty"`
	Index                    uint32   `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	LocalDiscriminator       uint32   `protobuf:"varint,3,opt,name=LocalDiscriminator,proto3" json:"LocalDiscriminator,omitempty"`
	BfdSessCfgRemoteFailType string   `protobuf:"bytes,4,opt,name=bfdSessCfgRemoteFailType,proto3" json:"bfdSessCfgRemoteFailType,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *HwBfdSessCfgRemoteFail) Reset()         { *m = HwBfdSessCfgRemoteFail{} }
func (m *HwBfdSessCfgRemoteFail) String() string { return proto.CompactTextString(m) }
func (*HwBfdSessCfgRemoteFail) ProtoMessage()    {}
func (*HwBfdSessCfgRemoteFail) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{4}
}

func (m *HwBfdSessCfgRemoteFail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdSessCfgRemoteFail.Unmarshal(m, b)
}
func (m *HwBfdSessCfgRemoteFail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdSessCfgRemoteFail.Marshal(b, m, deterministic)
}
func (m *HwBfdSessCfgRemoteFail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdSessCfgRemoteFail.Merge(m, src)
}
func (m *HwBfdSessCfgRemoteFail) XXX_Size() int {
	return xxx_messageInfo_HwBfdSessCfgRemoteFail.Size(m)
}
func (m *HwBfdSessCfgRemoteFail) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdSessCfgRemoteFail.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdSessCfgRemoteFail proto.InternalMessageInfo

func (m *HwBfdSessCfgRemoteFail) GetConfigurationName() string {
	if m != nil {
		return m.ConfigurationName
	}
	return ""
}

func (m *HwBfdSessCfgRemoteFail) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *HwBfdSessCfgRemoteFail) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *HwBfdSessCfgRemoteFail) GetBfdSessCfgRemoteFailType() string {
	if m != nil {
		return m.BfdSessCfgRemoteFailType
	}
	return ""
}

type HwBfdSessDown struct {
	BindIfIndex          uint32   `protobuf:"varint,1,opt,name=BindIfIndex,proto3" json:"BindIfIndex,omitempty"`
	BindIfName           string   `protobuf:"bytes,2,opt,name=BindIfName,proto3" json:"BindIfName,omitempty"`
	BindType             uint32   `protobuf:"varint,3,opt,name=BindType,proto3" json:"BindType,omitempty"`
	BindVpnName          string   `protobuf:"bytes,4,opt,name=BindVpnName,proto3" json:"BindVpnName,omitempty"`
	BindVrfIndex         uint32   `protobuf:"varint,5,opt,name=BindVrfIndex,proto3" json:"BindVrfIndex,omitempty"`
	ConfigurationName    string   `protobuf:"bytes,6,opt,name=ConfigurationName,proto3" json:"ConfigurationName,omitempty"`
	DefaultIp            uint32   `protobuf:"varint,7,opt,name=DefaultIp,proto3" json:"DefaultIp,omitempty"`
	Diagnosis            uint32   `protobuf:"varint,8,opt,name=Diagnosis,proto3" json:"Diagnosis,omitempty"`
	DiscrAuto            uint32   `protobuf:"varint,9,opt,name=DiscrAuto,proto3" json:"DiscrAuto,omitempty"`
	Index                uint32   `protobuf:"varint,10,opt,name=Index,proto3" json:"Index,omitempty"`
	Ipv6NextHop          string   `protobuf:"bytes,11,opt,name=Ipv6NextHop,proto3" json:"Ipv6NextHop,omitempty"`
	NextHop              string   `protobuf:"bytes,12,opt,name=NextHop,proto3" json:"NextHop,omitempty"`
	PeerIp               string   `protobuf:"bytes,13,opt,name=PeerIp,proto3" json:"PeerIp,omitempty"`
	PeerIpv6             string   `protobuf:"bytes,14,opt,name=PeerIpv6,proto3" json:"PeerIpv6,omitempty"`
	PwSecondary          uint32   `protobuf:"varint,15,opt,name=PwSecondary,proto3" json:"PwSecondary,omitempty"`
	SessionType          uint32   `protobuf:"varint,16,opt,name=SessionType,proto3" json:"SessionType,omitempty"`
	StaticLspName        string   `protobuf:"bytes,17,opt,name=StaticLspName,proto3" json:"StaticLspName,omitempty"`
	VcId                 uint32   `protobuf:"varint,18,opt,name=VcId,proto3" json:"VcId,omitempty"`
	VsiName              string   `protobuf:"bytes,19,opt,name=VsiName,proto3" json:"VsiName,omitempty"`
	VsiPeerAddress       string   `protobuf:"bytes,20,opt,name=VsiPeerAddress,proto3" json:"VsiPeerAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdSessDown) Reset()         { *m = HwBfdSessDown{} }
func (m *HwBfdSessDown) String() string { return proto.CompactTextString(m) }
func (*HwBfdSessDown) ProtoMessage()    {}
func (*HwBfdSessDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{5}
}

func (m *HwBfdSessDown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdSessDown.Unmarshal(m, b)
}
func (m *HwBfdSessDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdSessDown.Marshal(b, m, deterministic)
}
func (m *HwBfdSessDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdSessDown.Merge(m, src)
}
func (m *HwBfdSessDown) XXX_Size() int {
	return xxx_messageInfo_HwBfdSessDown.Size(m)
}
func (m *HwBfdSessDown) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdSessDown.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdSessDown proto.InternalMessageInfo

func (m *HwBfdSessDown) GetBindIfIndex() uint32 {
	if m != nil {
		return m.BindIfIndex
	}
	return 0
}

func (m *HwBfdSessDown) GetBindIfName() string {
	if m != nil {
		return m.BindIfName
	}
	return ""
}

func (m *HwBfdSessDown) GetBindType() uint32 {
	if m != nil {
		return m.BindType
	}
	return 0
}

func (m *HwBfdSessDown) GetBindVpnName() string {
	if m != nil {
		return m.BindVpnName
	}
	return ""
}

func (m *HwBfdSessDown) GetBindVrfIndex() uint32 {
	if m != nil {
		return m.BindVrfIndex
	}
	return 0
}

func (m *HwBfdSessDown) GetConfigurationName() string {
	if m != nil {
		return m.ConfigurationName
	}
	return ""
}

func (m *HwBfdSessDown) GetDefaultIp() uint32 {
	if m != nil {
		return m.DefaultIp
	}
	return 0
}

func (m *HwBfdSessDown) GetDiagnosis() uint32 {
	if m != nil {
		return m.Diagnosis
	}
	return 0
}

func (m *HwBfdSessDown) GetDiscrAuto() uint32 {
	if m != nil {
		return m.DiscrAuto
	}
	return 0
}

func (m *HwBfdSessDown) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *HwBfdSessDown) GetIpv6NextHop() string {
	if m != nil {
		return m.Ipv6NextHop
	}
	return ""
}

func (m *HwBfdSessDown) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

func (m *HwBfdSessDown) GetPeerIp() string {
	if m != nil {
		return m.PeerIp
	}
	return ""
}

func (m *HwBfdSessDown) GetPeerIpv6() string {
	if m != nil {
		return m.PeerIpv6
	}
	return ""
}

func (m *HwBfdSessDown) GetPwSecondary() uint32 {
	if m != nil {
		return m.PwSecondary
	}
	return 0
}

func (m *HwBfdSessDown) GetSessionType() uint32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *HwBfdSessDown) GetStaticLspName() string {
	if m != nil {
		return m.StaticLspName
	}
	return ""
}

func (m *HwBfdSessDown) GetVcId() uint32 {
	if m != nil {
		return m.VcId
	}
	return 0
}

func (m *HwBfdSessDown) GetVsiName() string {
	if m != nil {
		return m.VsiName
	}
	return ""
}

func (m *HwBfdSessDown) GetVsiPeerAddress() string {
	if m != nil {
		return m.VsiPeerAddress
	}
	return ""
}

type HwBfdSessDownTrap struct {
	BindType             string   `protobuf:"bytes,1,opt,name=BindType,proto3" json:"BindType,omitempty"`
	LocalDiscriminator   uint32   `protobuf:"varint,2,opt,name=LocalDiscriminator,proto3" json:"LocalDiscriminator,omitempty"`
	NextHopIPAddress     string   `protobuf:"bytes,3,opt,name=NextHopIPAddress,proto3" json:"NextHopIPAddress,omitempty"`
	PeerIPAddress        string   `protobuf:"bytes,4,opt,name=PeerIPAddress,proto3" json:"PeerIPAddress,omitempty"`
	SessionIndex         uint32   `protobuf:"varint,5,opt,name=SessionIndex,proto3" json:"SessionIndex,omitempty"`
	SourceIPAddress      string   `protobuf:"bytes,6,opt,name=SourceIPAddress,proto3" json:"SourceIPAddress,omitempty"`
	VRFIndex             uint32   `protobuf:"varint,7,opt,name=VRFIndex,proto3" json:"VRFIndex,omitempty"`
	VlanID               int32    `protobuf:"varint,8,opt,name=VlanID,proto3" json:"VlanID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdSessDownTrap) Reset()         { *m = HwBfdSessDownTrap{} }
func (m *HwBfdSessDownTrap) String() string { return proto.CompactTextString(m) }
func (*HwBfdSessDownTrap) ProtoMessage()    {}
func (*HwBfdSessDownTrap) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{6}
}

func (m *HwBfdSessDownTrap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdSessDownTrap.Unmarshal(m, b)
}
func (m *HwBfdSessDownTrap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdSessDownTrap.Marshal(b, m, deterministic)
}
func (m *HwBfdSessDownTrap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdSessDownTrap.Merge(m, src)
}
func (m *HwBfdSessDownTrap) XXX_Size() int {
	return xxx_messageInfo_HwBfdSessDownTrap.Size(m)
}
func (m *HwBfdSessDownTrap) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdSessDownTrap.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdSessDownTrap proto.InternalMessageInfo

func (m *HwBfdSessDownTrap) GetBindType() string {
	if m != nil {
		return m.BindType
	}
	return ""
}

func (m *HwBfdSessDownTrap) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *HwBfdSessDownTrap) GetNextHopIPAddress() string {
	if m != nil {
		return m.NextHopIPAddress
	}
	return ""
}

func (m *HwBfdSessDownTrap) GetPeerIPAddress() string {
	if m != nil {
		return m.PeerIPAddress
	}
	return ""
}

func (m *HwBfdSessDownTrap) GetSessionIndex() uint32 {
	if m != nil {
		return m.SessionIndex
	}
	return 0
}

func (m *HwBfdSessDownTrap) GetSourceIPAddress() string {
	if m != nil {
		return m.SourceIPAddress
	}
	return ""
}

func (m *HwBfdSessDownTrap) GetVRFIndex() uint32 {
	if m != nil {
		return m.VRFIndex
	}
	return 0
}

func (m *HwBfdSessDownTrap) GetVlanID() int32 {
	if m != nil {
		return m.VlanID
	}
	return 0
}

type HwBfdSessReachLimit struct {
	TotalSessionLimit    uint32   `protobuf:"varint,1,opt,name=TotalSessionLimit,proto3" json:"TotalSessionLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdSessReachLimit) Reset()         { *m = HwBfdSessReachLimit{} }
func (m *HwBfdSessReachLimit) String() string { return proto.CompactTextString(m) }
func (*HwBfdSessReachLimit) ProtoMessage()    {}
func (*HwBfdSessReachLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{7}
}

func (m *HwBfdSessReachLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdSessReachLimit.Unmarshal(m, b)
}
func (m *HwBfdSessReachLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdSessReachLimit.Marshal(b, m, deterministic)
}
func (m *HwBfdSessReachLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdSessReachLimit.Merge(m, src)
}
func (m *HwBfdSessReachLimit) XXX_Size() int {
	return xxx_messageInfo_HwBfdSessReachLimit.Size(m)
}
func (m *HwBfdSessReachLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdSessReachLimit.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdSessReachLimit proto.InternalMessageInfo

func (m *HwBfdSessReachLimit) GetTotalSessionLimit() uint32 {
	if m != nil {
		return m.TotalSessionLimit
	}
	return 0
}

type HwBfdSessReachLimitBindIf struct {
	ConfigurationName    string   `protobuf:"bytes,1,opt,name=ConfigurationName,proto3" json:"ConfigurationName,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=InterfaceName,proto3" json:"InterfaceName,omitempty"`
	SessionLimitPerBoard uint32   `protobuf:"varint,3,opt,name=SessionLimitPerBoard,proto3" json:"SessionLimitPerBoard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdSessReachLimitBindIf) Reset()         { *m = HwBfdSessReachLimitBindIf{} }
func (m *HwBfdSessReachLimitBindIf) String() string { return proto.CompactTextString(m) }
func (*HwBfdSessReachLimitBindIf) ProtoMessage()    {}
func (*HwBfdSessReachLimitBindIf) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{8}
}

func (m *HwBfdSessReachLimitBindIf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdSessReachLimitBindIf.Unmarshal(m, b)
}
func (m *HwBfdSessReachLimitBindIf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdSessReachLimitBindIf.Marshal(b, m, deterministic)
}
func (m *HwBfdSessReachLimitBindIf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdSessReachLimitBindIf.Merge(m, src)
}
func (m *HwBfdSessReachLimitBindIf) XXX_Size() int {
	return xxx_messageInfo_HwBfdSessReachLimitBindIf.Size(m)
}
func (m *HwBfdSessReachLimitBindIf) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdSessReachLimitBindIf.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdSessReachLimitBindIf proto.InternalMessageInfo

func (m *HwBfdSessReachLimitBindIf) GetConfigurationName() string {
	if m != nil {
		return m.ConfigurationName
	}
	return ""
}

func (m *HwBfdSessReachLimitBindIf) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *HwBfdSessReachLimitBindIf) GetSessionLimitPerBoard() uint32 {
	if m != nil {
		return m.SessionLimitPerBoard
	}
	return 0
}

type HwBfdSessUp struct {
	BindIfIndex          uint32   `protobuf:"varint,1,opt,name=BindIfIndex,proto3" json:"BindIfIndex,omitempty"`
	BindIfName           string   `protobuf:"bytes,2,opt,name=BindIfName,proto3" json:"BindIfName,omitempty"`
	BindType             uint32   `protobuf:"varint,3,opt,name=BindType,proto3" json:"BindType,omitempty"`
	BindVpnName          string   `protobuf:"bytes,4,opt,name=BindVpnName,proto3" json:"BindVpnName,omitempty"`
	BindVrfIndex         uint32   `protobuf:"varint,5,opt,name=BindVrfIndex,proto3" json:"BindVrfIndex,omitempty"`
	ConfigurationName    string   `protobuf:"bytes,6,opt,name=ConfigurationName,proto3" json:"ConfigurationName,omitempty"`
	DefaultIp            uint32   `protobuf:"varint,7,opt,name=DefaultIp,proto3" json:"DefaultIp,omitempty"`
	Diagnosis            uint32   `protobuf:"varint,8,opt,name=Diagnosis,proto3" json:"Diagnosis,omitempty"`
	DiscrAuto            uint32   `protobuf:"varint,9,opt,name=DiscrAuto,proto3" json:"DiscrAuto,omitempty"`
	Index                uint32   `protobuf:"varint,10,opt,name=Index,proto3" json:"Index,omitempty"`
	Ipv6NextHop          string   `protobuf:"bytes,11,opt,name=Ipv6NextHop,proto3" json:"Ipv6NextHop,omitempty"`
	NextHop              string   `protobuf:"bytes,12,opt,name=NextHop,proto3" json:"NextHop,omitempty"`
	PeerIp               string   `protobuf:"bytes,13,opt,name=PeerIp,proto3" json:"PeerIp,omitempty"`
	PeerIpv6             string   `protobuf:"bytes,14,opt,name=PeerIpv6,proto3" json:"PeerIpv6,omitempty"`
	PwSecondary          uint32   `protobuf:"varint,15,opt,name=PwSecondary,proto3" json:"PwSecondary,omitempty"`
	SessionType          uint32   `protobuf:"varint,16,opt,name=SessionType,proto3" json:"SessionType,omitempty"`
	StaticLspName        string   `protobuf:"bytes,17,opt,name=StaticLspName,proto3" json:"StaticLspName,omitempty"`
	VcId                 uint32   `protobuf:"varint,18,opt,name=VcId,proto3" json:"VcId,omitempty"`
	VsiName              string   `protobuf:"bytes,19,opt,name=VsiName,proto3" json:"VsiName,omitempty"`
	VsiPeerAddress       string   `protobuf:"bytes,20,opt,name=VsiPeerAddress,proto3" json:"VsiPeerAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdSessUp) Reset()         { *m = HwBfdSessUp{} }
func (m *HwBfdSessUp) String() string { return proto.CompactTextString(m) }
func (*HwBfdSessUp) ProtoMessage()    {}
func (*HwBfdSessUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{9}
}

func (m *HwBfdSessUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdSessUp.Unmarshal(m, b)
}
func (m *HwBfdSessUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdSessUp.Marshal(b, m, deterministic)
}
func (m *HwBfdSessUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdSessUp.Merge(m, src)
}
func (m *HwBfdSessUp) XXX_Size() int {
	return xxx_messageInfo_HwBfdSessUp.Size(m)
}
func (m *HwBfdSessUp) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdSessUp.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdSessUp proto.InternalMessageInfo

func (m *HwBfdSessUp) GetBindIfIndex() uint32 {
	if m != nil {
		return m.BindIfIndex
	}
	return 0
}

func (m *HwBfdSessUp) GetBindIfName() string {
	if m != nil {
		return m.BindIfName
	}
	return ""
}

func (m *HwBfdSessUp) GetBindType() uint32 {
	if m != nil {
		return m.BindType
	}
	return 0
}

func (m *HwBfdSessUp) GetBindVpnName() string {
	if m != nil {
		return m.BindVpnName
	}
	return ""
}

func (m *HwBfdSessUp) GetBindVrfIndex() uint32 {
	if m != nil {
		return m.BindVrfIndex
	}
	return 0
}

func (m *HwBfdSessUp) GetConfigurationName() string {
	if m != nil {
		return m.ConfigurationName
	}
	return ""
}

func (m *HwBfdSessUp) GetDefaultIp() uint32 {
	if m != nil {
		return m.DefaultIp
	}
	return 0
}

func (m *HwBfdSessUp) GetDiagnosis() uint32 {
	if m != nil {
		return m.Diagnosis
	}
	return 0
}

func (m *HwBfdSessUp) GetDiscrAuto() uint32 {
	if m != nil {
		return m.DiscrAuto
	}
	return 0
}

func (m *HwBfdSessUp) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *HwBfdSessUp) GetIpv6NextHop() string {
	if m != nil {
		return m.Ipv6NextHop
	}
	return ""
}

func (m *HwBfdSessUp) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

func (m *HwBfdSessUp) GetPeerIp() string {
	if m != nil {
		return m.PeerIp
	}
	return ""
}

func (m *HwBfdSessUp) GetPeerIpv6() string {
	if m != nil {
		return m.PeerIpv6
	}
	return ""
}

func (m *HwBfdSessUp) GetPwSecondary() uint32 {
	if m != nil {
		return m.PwSecondary
	}
	return 0
}

func (m *HwBfdSessUp) GetSessionType() uint32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *HwBfdSessUp) GetStaticLspName() string {
	if m != nil {
		return m.StaticLspName
	}
	return ""
}

func (m *HwBfdSessUp) GetVcId() uint32 {
	if m != nil {
		return m.VcId
	}
	return 0
}

func (m *HwBfdSessUp) GetVsiName() string {
	if m != nil {
		return m.VsiName
	}
	return ""
}

func (m *HwBfdSessUp) GetVsiPeerAddress() string {
	if m != nil {
		return m.VsiPeerAddress
	}
	return ""
}

type HwBfdSessUpTrap struct {
	BindType             string   `protobuf:"bytes,1,opt,name=BindType,proto3" json:"BindType,omitempty"`
	LocalDiscriminator   uint32   `protobuf:"varint,2,opt,name=LocalDiscriminator,proto3" json:"LocalDiscriminator,omitempty"`
	NextHopIPAddress     string   `protobuf:"bytes,3,opt,name=NextHopIPAddress,proto3" json:"NextHopIPAddress,omitempty"`
	PeerIPAddress        string   `protobuf:"bytes,4,opt,name=PeerIPAddress,proto3" json:"PeerIPAddress,omitempty"`
	SessionIndex         uint32   `protobuf:"varint,5,opt,name=SessionIndex,proto3" json:"SessionIndex,omitempty"`
	SourceIPAddress      string   `protobuf:"bytes,6,opt,name=SourceIPAddress,proto3" json:"SourceIPAddress,omitempty"`
	VRFIndex             uint32   `protobuf:"varint,7,opt,name=VRFIndex,proto3" json:"VRFIndex,omitempty"`
	VlanID               int32    `protobuf:"varint,8,opt,name=VlanID,proto3" json:"VlanID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdSessUpTrap) Reset()         { *m = HwBfdSessUpTrap{} }
func (m *HwBfdSessUpTrap) String() string { return proto.CompactTextString(m) }
func (*HwBfdSessUpTrap) ProtoMessage()    {}
func (*HwBfdSessUpTrap) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{10}
}

func (m *HwBfdSessUpTrap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdSessUpTrap.Unmarshal(m, b)
}
func (m *HwBfdSessUpTrap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdSessUpTrap.Marshal(b, m, deterministic)
}
func (m *HwBfdSessUpTrap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdSessUpTrap.Merge(m, src)
}
func (m *HwBfdSessUpTrap) XXX_Size() int {
	return xxx_messageInfo_HwBfdSessUpTrap.Size(m)
}
func (m *HwBfdSessUpTrap) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdSessUpTrap.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdSessUpTrap proto.InternalMessageInfo

func (m *HwBfdSessUpTrap) GetBindType() string {
	if m != nil {
		return m.BindType
	}
	return ""
}

func (m *HwBfdSessUpTrap) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *HwBfdSessUpTrap) GetNextHopIPAddress() string {
	if m != nil {
		return m.NextHopIPAddress
	}
	return ""
}

func (m *HwBfdSessUpTrap) GetPeerIPAddress() string {
	if m != nil {
		return m.PeerIPAddress
	}
	return ""
}

func (m *HwBfdSessUpTrap) GetSessionIndex() uint32 {
	if m != nil {
		return m.SessionIndex
	}
	return 0
}

func (m *HwBfdSessUpTrap) GetSourceIPAddress() string {
	if m != nil {
		return m.SourceIPAddress
	}
	return ""
}

func (m *HwBfdSessUpTrap) GetVRFIndex() uint32 {
	if m != nil {
		return m.VRFIndex
	}
	return 0
}

func (m *HwBfdSessUpTrap) GetVlanID() int32 {
	if m != nil {
		return m.VlanID
	}
	return 0
}

type HwBfdv6MultiHopSessDownTrap struct {
	PeerIPv6Address      string   `protobuf:"bytes,1,opt,name=PeerIPv6Address,proto3" json:"PeerIPv6Address,omitempty"`
	SessionIndex         uint32   `protobuf:"varint,2,opt,name=SessionIndex,proto3" json:"SessionIndex,omitempty"`
	SourceIPv6Address    string   `protobuf:"bytes,3,opt,name=SourceIPv6Address,proto3" json:"SourceIPv6Address,omitempty"`
	VRFIndex             uint32   `protobuf:"varint,4,opt,name=VRFIndex,proto3" json:"VRFIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdv6MultiHopSessDownTrap) Reset()         { *m = HwBfdv6MultiHopSessDownTrap{} }
func (m *HwBfdv6MultiHopSessDownTrap) String() string { return proto.CompactTextString(m) }
func (*HwBfdv6MultiHopSessDownTrap) ProtoMessage()    {}
func (*HwBfdv6MultiHopSessDownTrap) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{11}
}

func (m *HwBfdv6MultiHopSessDownTrap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdv6MultiHopSessDownTrap.Unmarshal(m, b)
}
func (m *HwBfdv6MultiHopSessDownTrap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdv6MultiHopSessDownTrap.Marshal(b, m, deterministic)
}
func (m *HwBfdv6MultiHopSessDownTrap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdv6MultiHopSessDownTrap.Merge(m, src)
}
func (m *HwBfdv6MultiHopSessDownTrap) XXX_Size() int {
	return xxx_messageInfo_HwBfdv6MultiHopSessDownTrap.Size(m)
}
func (m *HwBfdv6MultiHopSessDownTrap) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdv6MultiHopSessDownTrap.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdv6MultiHopSessDownTrap proto.InternalMessageInfo

func (m *HwBfdv6MultiHopSessDownTrap) GetPeerIPv6Address() string {
	if m != nil {
		return m.PeerIPv6Address
	}
	return ""
}

func (m *HwBfdv6MultiHopSessDownTrap) GetSessionIndex() uint32 {
	if m != nil {
		return m.SessionIndex
	}
	return 0
}

func (m *HwBfdv6MultiHopSessDownTrap) GetSourceIPv6Address() string {
	if m != nil {
		return m.SourceIPv6Address
	}
	return ""
}

func (m *HwBfdv6MultiHopSessDownTrap) GetVRFIndex() uint32 {
	if m != nil {
		return m.VRFIndex
	}
	return 0
}

type HwBfdv6MultiHopSessUpTrap struct {
	PeerIPv6Address      string   `protobuf:"bytes,1,opt,name=PeerIPv6Address,proto3" json:"PeerIPv6Address,omitempty"`
	SessionIndex         uint32   `protobuf:"varint,2,opt,name=SessionIndex,proto3" json:"SessionIndex,omitempty"`
	SourceIPv6Address    string   `protobuf:"bytes,3,opt,name=SourceIPv6Address,proto3" json:"SourceIPv6Address,omitempty"`
	VRFIndex             uint32   `protobuf:"varint,4,opt,name=VRFIndex,proto3" json:"VRFIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdv6MultiHopSessUpTrap) Reset()         { *m = HwBfdv6MultiHopSessUpTrap{} }
func (m *HwBfdv6MultiHopSessUpTrap) String() string { return proto.CompactTextString(m) }
func (*HwBfdv6MultiHopSessUpTrap) ProtoMessage()    {}
func (*HwBfdv6MultiHopSessUpTrap) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{12}
}

func (m *HwBfdv6MultiHopSessUpTrap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdv6MultiHopSessUpTrap.Unmarshal(m, b)
}
func (m *HwBfdv6MultiHopSessUpTrap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdv6MultiHopSessUpTrap.Marshal(b, m, deterministic)
}
func (m *HwBfdv6MultiHopSessUpTrap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdv6MultiHopSessUpTrap.Merge(m, src)
}
func (m *HwBfdv6MultiHopSessUpTrap) XXX_Size() int {
	return xxx_messageInfo_HwBfdv6MultiHopSessUpTrap.Size(m)
}
func (m *HwBfdv6MultiHopSessUpTrap) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdv6MultiHopSessUpTrap.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdv6MultiHopSessUpTrap proto.InternalMessageInfo

func (m *HwBfdv6MultiHopSessUpTrap) GetPeerIPv6Address() string {
	if m != nil {
		return m.PeerIPv6Address
	}
	return ""
}

func (m *HwBfdv6MultiHopSessUpTrap) GetSessionIndex() uint32 {
	if m != nil {
		return m.SessionIndex
	}
	return 0
}

func (m *HwBfdv6MultiHopSessUpTrap) GetSourceIPv6Address() string {
	if m != nil {
		return m.SourceIPv6Address
	}
	return ""
}

func (m *HwBfdv6MultiHopSessUpTrap) GetVRFIndex() uint32 {
	if m != nil {
		return m.VRFIndex
	}
	return 0
}

type HwBfdv6SingleHopSessDownTrap struct {
	PeerIPv6Address      string   `protobuf:"bytes,1,opt,name=PeerIPv6Address,proto3" json:"PeerIPv6Address,omitempty"`
	SessionIndex         uint32   `protobuf:"varint,2,opt,name=SessionIndex,proto3" json:"SessionIndex,omitempty"`
	SourceIPv6Address    string   `protobuf:"bytes,3,opt,name=SourceIPv6Address,proto3" json:"SourceIPv6Address,omitempty"`
	VlanID               int32    `protobuf:"varint,4,opt,name=VlanID,proto3" json:"VlanID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdv6SingleHopSessDownTrap) Reset()         { *m = HwBfdv6SingleHopSessDownTrap{} }
func (m *HwBfdv6SingleHopSessDownTrap) String() string { return proto.CompactTextString(m) }
func (*HwBfdv6SingleHopSessDownTrap) ProtoMessage()    {}
func (*HwBfdv6SingleHopSessDownTrap) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{13}
}

func (m *HwBfdv6SingleHopSessDownTrap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdv6SingleHopSessDownTrap.Unmarshal(m, b)
}
func (m *HwBfdv6SingleHopSessDownTrap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdv6SingleHopSessDownTrap.Marshal(b, m, deterministic)
}
func (m *HwBfdv6SingleHopSessDownTrap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdv6SingleHopSessDownTrap.Merge(m, src)
}
func (m *HwBfdv6SingleHopSessDownTrap) XXX_Size() int {
	return xxx_messageInfo_HwBfdv6SingleHopSessDownTrap.Size(m)
}
func (m *HwBfdv6SingleHopSessDownTrap) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdv6SingleHopSessDownTrap.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdv6SingleHopSessDownTrap proto.InternalMessageInfo

func (m *HwBfdv6SingleHopSessDownTrap) GetPeerIPv6Address() string {
	if m != nil {
		return m.PeerIPv6Address
	}
	return ""
}

func (m *HwBfdv6SingleHopSessDownTrap) GetSessionIndex() uint32 {
	if m != nil {
		return m.SessionIndex
	}
	return 0
}

func (m *HwBfdv6SingleHopSessDownTrap) GetSourceIPv6Address() string {
	if m != nil {
		return m.SourceIPv6Address
	}
	return ""
}

func (m *HwBfdv6SingleHopSessDownTrap) GetVlanID() int32 {
	if m != nil {
		return m.VlanID
	}
	return 0
}

type HwBfdv6SingleHopSessUpTrap struct {
	PeerIPv6Address      string   `protobuf:"bytes,1,opt,name=PeerIPv6Address,proto3" json:"PeerIPv6Address,omitempty"`
	SessionIndex         uint32   `protobuf:"varint,2,opt,name=SessionIndex,proto3" json:"SessionIndex,omitempty"`
	SourceIPv6Address    string   `protobuf:"bytes,3,opt,name=SourceIPv6Address,proto3" json:"SourceIPv6Address,omitempty"`
	VlanID               int32    `protobuf:"varint,4,opt,name=VlanID,proto3" json:"VlanID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwBfdv6SingleHopSessUpTrap) Reset()         { *m = HwBfdv6SingleHopSessUpTrap{} }
func (m *HwBfdv6SingleHopSessUpTrap) String() string { return proto.CompactTextString(m) }
func (*HwBfdv6SingleHopSessUpTrap) ProtoMessage()    {}
func (*HwBfdv6SingleHopSessUpTrap) Descriptor() ([]byte, []int) {
	return fileDescriptor_87876adfb64f1123, []int{14}
}

func (m *HwBfdv6SingleHopSessUpTrap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwBfdv6SingleHopSessUpTrap.Unmarshal(m, b)
}
func (m *HwBfdv6SingleHopSessUpTrap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwBfdv6SingleHopSessUpTrap.Marshal(b, m, deterministic)
}
func (m *HwBfdv6SingleHopSessUpTrap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwBfdv6SingleHopSessUpTrap.Merge(m, src)
}
func (m *HwBfdv6SingleHopSessUpTrap) XXX_Size() int {
	return xxx_messageInfo_HwBfdv6SingleHopSessUpTrap.Size(m)
}
func (m *HwBfdv6SingleHopSessUpTrap) XXX_DiscardUnknown() {
	xxx_messageInfo_HwBfdv6SingleHopSessUpTrap.DiscardUnknown(m)
}

var xxx_messageInfo_HwBfdv6SingleHopSessUpTrap proto.InternalMessageInfo

func (m *HwBfdv6SingleHopSessUpTrap) GetPeerIPv6Address() string {
	if m != nil {
		return m.PeerIPv6Address
	}
	return ""
}

func (m *HwBfdv6SingleHopSessUpTrap) GetSessionIndex() uint32 {
	if m != nil {
		return m.SessionIndex
	}
	return 0
}

func (m *HwBfdv6SingleHopSessUpTrap) GetSourceIPv6Address() string {
	if m != nil {
		return m.SourceIPv6Address
	}
	return ""
}

func (m *HwBfdv6SingleHopSessUpTrap) GetVlanID() int32 {
	if m != nil {
		return m.VlanID
	}
	return 0
}

func init() {
	proto.RegisterType((*Bfd)(nil), "huawei_bfd.Bfd")
	proto.RegisterType((*HwBfdPWSessDown)(nil), "huawei_bfd.HwBfdPWSessDown")
	proto.RegisterType((*HwBfdPWSessUp)(nil), "huawei_bfd.HwBfdPWSessUp")
	proto.RegisterType((*HwBfdSessApOperFailed)(nil), "huawei_bfd.HwBfdSessApOperFailed")
	proto.RegisterType((*HwBfdSessCfgRemoteFail)(nil), "huawei_bfd.HwBfdSessCfgRemoteFail")
	proto.RegisterType((*HwBfdSessDown)(nil), "huawei_bfd.HwBfdSessDown")
	proto.RegisterType((*HwBfdSessDownTrap)(nil), "huawei_bfd.HwBfdSessDownTrap")
	proto.RegisterType((*HwBfdSessReachLimit)(nil), "huawei_bfd.HwBfdSessReachLimit")
	proto.RegisterType((*HwBfdSessReachLimitBindIf)(nil), "huawei_bfd.HwBfdSessReachLimitBindIf")
	proto.RegisterType((*HwBfdSessUp)(nil), "huawei_bfd.HwBfdSessUp")
	proto.RegisterType((*HwBfdSessUpTrap)(nil), "huawei_bfd.HwBfdSessUpTrap")
	proto.RegisterType((*HwBfdv6MultiHopSessDownTrap)(nil), "huawei_bfd.HwBfdv6MultiHopSessDownTrap")
	proto.RegisterType((*HwBfdv6MultiHopSessUpTrap)(nil), "huawei_bfd.HwBfdv6MultiHopSessUpTrap")
	proto.RegisterType((*HwBfdv6SingleHopSessDownTrap)(nil), "huawei_bfd.HwBfdv6SingleHopSessDownTrap")
	proto.RegisterType((*HwBfdv6SingleHopSessUpTrap)(nil), "huawei_bfd.HwBfdv6SingleHopSessUpTrap")
}

func init() { proto.RegisterFile("huawei-bfd.proto", fileDescriptor_87876adfb64f1123) }

var fileDescriptor_87876adfb64f1123 = []byte{
	// 885 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x4d, 0x6f, 0xdb, 0x46,
	0x10, 0x05, 0x15, 0x49, 0xb1, 0x46, 0x51, 0x6c, 0x6f, 0x5c, 0x83, 0x4d, 0x83, 0x42, 0x20, 0x82,
	0xc2, 0x28, 0xd2, 0x1c, 0x5a, 0x40, 0x87, 0xde, 0x2c, 0x0b, 0x81, 0x09, 0xb8, 0xa9, 0x40, 0x39,
	0xea, 0xb1, 0x58, 0x91, 0x4b, 0x65, 0x01, 0x89, 0xbb, 0x58, 0x52, 0x52, 0x72, 0xec, 0xef, 0xe8,
	0xb1, 0x7f, 0xa0, 0xa9, 0xd1, 0xff, 0xd0, 0x7f, 0xd5, 0x62, 0x77, 0xf8, 0x29, 0x51, 0x4d, 0x73,
	0x29, 0x7c, 0xd0, 0x8d, 0xf3, 0x66, 0xb3, 0x7a, 0xf3, 0xf6, 0xbd, 0x41, 0x0c, 0x27, 0x6f, 0x57,
	0x74, 0xc3, 0xf8, 0x37, 0xb3, 0x30, 0x78, 0x29, 0x95, 0x48, 0x04, 0x01, 0x44, 0x7e, 0x9e, 0x85,
	0x81, 0xd3, 0x82, 0x07, 0xc3, 0x30, 0x70, 0xee, 0x1a, 0x70, 0x7c, 0xbd, 0x19, 0x86, 0xc1, 0xf8,
	0xa7, 0x09, 0x8b, 0xe3, 0x91, 0xd8, 0x44, 0xe4, 0x29, 0x1c, 0x0d, 0x79, 0x14, 0xdc, 0xbe, 0x97,
	0xcc, 0xb6, 0xfa, 0xd6, 0x45, 0xc7, 0xcb, 0x6b, 0xf2, 0x0c, 0x3a, 0x23, 0x4e, 0xe7, 0x91, 0x88,
	0x79, 0x6c, 0x37, 0xfa, 0xd6, 0x45, 0xcf, 0x2b, 0x00, 0xf2, 0x12, 0xc8, 0x8d, 0xf0, 0xe9, 0x62,
	0xc4, 0x63, 0x5f, 0xf1, 0x25, 0x8f, 0x68, 0x22, 0x94, 0xfd, 0xc0, 0x1c, 0xab, 0xe9, 0x10, 0x02,
	0xcd, 0xf1, 0xc6, 0x0d, 0xec, 0xa6, 0x39, 0x61, 0xbe, 0x49, 0x1f, 0xba, 0xe3, 0xcd, 0x84, 0xf9,
	0x22, 0x0a, 0xa8, 0x7a, 0x6f, 0xb7, 0x4c, 0xab, 0x0c, 0x69, 0x0e, 0x9a, 0xab, 0x1b, 0x05, 0xec,
	0x9d, 0xdd, 0x46, 0x0e, 0x39, 0xa0, 0xff, 0xbd, 0x2e, 0xb8, 0x88, 0x5e, 0xd3, 0x25, 0xb3, 0x1f,
	0x9a, 0x01, 0xca, 0x10, 0xb1, 0xe1, 0xe1, 0x34, 0xe6, 0xa6, 0x7b, 0x64, 0xba, 0x59, 0x49, 0xbe,
	0x82, 0xc7, 0xd3, 0x98, 0x8f, 0x19, 0x53, 0x97, 0x41, 0xa0, 0x58, 0x1c, 0xdb, 0x1d, 0x73, 0x60,
	0x0b, 0x75, 0x3e, 0x34, 0xa0, 0x57, 0x52, 0xed, 0x8d, 0x3c, 0x68, 0xf6, 0x51, 0xcd, 0x7e, 0xb5,
	0xe0, 0x33, 0xa3, 0x99, 0xbe, 0xf6, 0x52, 0xfe, 0x28, 0x99, 0x7a, 0x45, 0xf9, 0x82, 0x05, 0x7a,
	0x22, 0x2a, 0x79, 0x60, 0x74, 0xeb, 0x79, 0xe6, 0x5b, 0xf3, 0xe5, 0x92, 0xa6, 0x17, 0x36, 0xcc,
	0x85, 0x05, 0xa0, 0xbb, 0x42, 0x32, 0x45, 0x13, 0x2e, 0x22, 0x23, 0x55, 0xc7, 0x2b, 0x00, 0x72,
	0x0e, 0x6d, 0xc5, 0x68, 0x2c, 0x22, 0xa3, 0x51, 0xc7, 0x4b, 0x2b, 0xfd, 0x46, 0xab, 0x98, 0xa9,
	0x48, 0x0f, 0xd1, 0xc2, 0x37, 0xca, 0x6a, 0xe7, 0x2f, 0x0b, 0xce, 0x73, 0x76, 0x57, 0xe1, 0xdc,
	0x63, 0x4b, 0x91, 0x30, 0x4d, 0x90, 0xbc, 0x80, 0xd3, 0x2b, 0x11, 0x85, 0x7c, 0xbe, 0xc2, 0xfb,
	0x8d, 0x08, 0xf8, 0xc6, 0xbb, 0x0d, 0x72, 0x06, 0x2d, 0x14, 0x19, 0x1f, 0x1a, 0x8b, 0x4f, 0x7e,
	0xe4, 0xef, 0xc1, 0x9e, 0xd5, 0x70, 0x31, 0xf6, 0xc2, 0xa1, 0xf6, 0xf6, 0x9d, 0x5f, 0x5a, 0xa9,
	0x39, 0xf3, 0x40, 0xf7, 0xa1, 0xab, 0xcd, 0xe8, 0x86, 0xc8, 0x0c, 0x75, 0x2e, 0x43, 0xe4, 0x4b,
	0x00, 0x2c, 0xcd, 0x70, 0xa8, 0x77, 0x09, 0xa9, 0xd8, 0x1b, 0x59, 0x17, 0xf6, 0x4e, 0x6f, 0x9f,
	0x4a, 0x54, 0x06, 0xe9, 0x95, 0x21, 0xe2, 0xc0, 0x23, 0x53, 0xaa, 0x94, 0x00, 0xfa, 0xb3, 0x82,
	0xd5, 0xab, 0xdc, 0xde, 0xa7, 0xb2, 0x8e, 0x14, 0x0b, 0xe9, 0x6a, 0x91, 0xb8, 0xd2, 0xd8, 0x55,
	0x47, 0x2a, 0x03, 0xaa, 0x81, 0x3b, 0xda, 0x0e, 0x9c, 0xe9, 0xc6, 0xbe, 0xba, 0x5c, 0x25, 0xc2,
	0x78, 0xd5, 0x74, 0x53, 0xa0, 0x78, 0x3f, 0x28, 0xbf, 0x5f, 0x1f, 0xba, 0xae, 0x5c, 0x0f, 0x5e,
	0xb3, 0x77, 0xc9, 0xb5, 0x90, 0x76, 0x17, 0x67, 0x2c, 0x41, 0x3a, 0x20, 0x59, 0xf7, 0x11, 0x06,
	0x24, 0xeb, 0x9c, 0x43, 0x5b, 0xe7, 0xc0, 0x95, 0x76, 0x0f, 0xed, 0x88, 0x95, 0xd6, 0x14, 0xbf,
	0xd6, 0x03, 0xfb, 0x31, 0xda, 0x31, 0xab, 0xb7, 0x03, 0x7d, 0xbc, 0x1b, 0xe8, 0x22, 0xb2, 0xe6,
	0x51, 0x4e, 0xf0, 0x44, 0x09, 0x22, 0xcf, 0xa1, 0x37, 0x49, 0x68, 0xc2, 0xfd, 0x9b, 0x58, 0x1a,
	0x35, 0x4f, 0xcd, 0x8f, 0x54, 0x41, 0x1d, 0xbe, 0xa9, 0xef, 0x06, 0x36, 0xc1, 0xf0, 0xe9, 0xef,
	0x72, 0xd8, 0x9f, 0x7c, 0x2c, 0xec, 0x67, 0xb5, 0x61, 0xbf, 0x6b, 0xc0, 0x69, 0xc5, 0x83, 0xb7,
	0x8a, 0xfe, 0xfb, 0x92, 0xac, 0x4f, 0x48, 0x63, 0x6f, 0x42, 0xbe, 0x86, 0x93, 0x54, 0x60, 0x77,
	0x9c, 0x71, 0xc1, 0x4d, 0xb0, 0x83, 0x6b, 0x25, 0x8c, 0xb2, 0xf9, 0x41, 0xf4, 0x68, 0x15, 0xd4,
	0x2e, 0x4d, 0xe5, 0xab, 0xb8, 0xb4, 0x8c, 0x91, 0x0b, 0x38, 0x9e, 0x88, 0x95, 0xf2, 0x59, 0x71,
	0x17, 0x7a, 0x74, 0x1b, 0xd6, 0xb3, 0x4e, 0xbd, 0x57, 0x78, 0x13, 0x1a, 0x34, 0xaf, 0xb5, 0x23,
	0xa6, 0x0b, 0x1a, 0xb9, 0x23, 0x63, 0xce, 0x96, 0x97, 0x56, 0xce, 0x15, 0x3c, 0xc9, 0x45, 0xf3,
	0x18, 0xf5, 0xdf, 0xde, 0xf0, 0x25, 0x4f, 0x74, 0x34, 0x6e, 0x45, 0x42, 0x17, 0x29, 0x13, 0x03,
	0xa6, 0x21, 0xde, 0x6d, 0x38, 0xbf, 0x59, 0xf0, 0x79, 0xcd, 0x2d, 0x18, 0xe6, 0x4f, 0x5c, 0x66,
	0xcf, 0xa1, 0xe7, 0x46, 0x09, 0x53, 0x21, 0xf5, 0x59, 0x69, 0x33, 0x54, 0x41, 0xf2, 0x2d, 0x9c,
	0x95, 0x19, 0x8c, 0x99, 0x1a, 0x0a, 0xaa, 0x82, 0x74, 0x51, 0xd4, 0xf6, 0x9c, 0xbf, 0x9b, 0xd0,
	0xcd, 0x59, 0xbe, 0x91, 0x87, 0x15, 0x75, 0x58, 0x51, 0xff, 0xf3, 0x8a, 0xfa, 0x90, 0xfd, 0xcf,
	0x17, 0x1d, 0x78, 0x58, 0x50, 0xff, 0x61, 0x41, 0xfd, 0x69, 0xc1, 0x17, 0x46, 0xb3, 0xf5, 0xe0,
	0x87, 0xd5, 0x22, 0xe1, 0xd7, 0x42, 0x56, 0x16, 0xfc, 0x05, 0x1c, 0x23, 0xe5, 0xf5, 0x20, 0xfb,
	0x75, 0x94, 0x71, 0x1b, 0xde, 0x99, 0xa5, 0x51, 0x33, 0xcb, 0x0b, 0x38, 0xcd, 0x48, 0x17, 0xf7,
	0xa1, 0x84, 0xbb, 0x8d, 0xca, 0x3c, 0xcd, 0xea, 0x3c, 0xce, 0x5d, 0xb6, 0x13, 0xab, 0xbc, 0xd3,
	0x57, 0xbf, 0xaf, 0xac, 0xff, 0xb0, 0xe0, 0x59, 0xca, 0x7a, 0xc2, 0xa3, 0xf9, 0x82, 0xdd, 0x27,
	0xb9, 0x0b, 0x8b, 0x34, 0x2b, 0x16, 0xf9, 0xdd, 0x82, 0xa7, 0x75, 0xa4, 0xef, 0x81, 0xd6, 0x7b,
	0x28, 0xcf, 0xda, 0xe6, 0xaf, 0xe3, 0xef, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x3f, 0xf6,
	0xe4, 0x31, 0x0f, 0x00, 0x00,
}
