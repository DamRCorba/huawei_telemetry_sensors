// Code generated by protoc-gen-go. DO NOT EDIT.
// source: huawei-bgp.proto

package huawei_bgp

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BACKWARD struct {
	AddrFamilyAfi        uint32   `protobuf:"varint,1,opt,name=AddrFamilyAfi,proto3" json:"AddrFamilyAfi,omitempty"`
	AddrFamilySafi       uint32   `protobuf:"varint,2,opt,name=AddrFamilySafi,proto3" json:"AddrFamilySafi,omitempty"`
	InstanceId           string   `protobuf:"bytes,3,opt,name=InstanceId,proto3" json:"InstanceId,omitempty"`
	LocalIfIndex         uint32   `protobuf:"varint,4,opt,name=LocalIfIndex,proto3" json:"LocalIfIndex,omitempty"`
	LocalIfName          string   `protobuf:"bytes,5,opt,name=LocalIfName,proto3" json:"LocalIfName,omitempty"`
	PeerAddrType         uint32   `protobuf:"varint,6,opt,name=PeerAddrType,proto3" json:"PeerAddrType,omitempty"`
	PeerIpv4Addr         string   `protobuf:"bytes,7,opt,name=PeerIpv4Addr,proto3" json:"PeerIpv4Addr,omitempty"`
	PeerIpv4Ipv6Addr     string   `protobuf:"bytes,8,opt,name=PeerIpv4Ipv6Addr,proto3" json:"PeerIpv4Ipv6Addr,omitempty"`
	PeerLastError        string   `protobuf:"bytes,9,opt,name=PeerLastError,proto3" json:"PeerLastError,omitempty"`
	PeerState            uint32   `protobuf:"varint,10,opt,name=PeerState,proto3" json:"PeerState,omitempty"`
	Reason               string   `protobuf:"bytes,11,opt,name=Reason,proto3" json:"Reason,omitempty"`
	IfIndex              uint32   `protobuf:"varint,12,opt,name=ifIndex,proto3" json:"ifIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BACKWARD) Reset()         { *m = BACKWARD{} }
func (m *BACKWARD) String() string { return proto.CompactTextString(m) }
func (*BACKWARD) ProtoMessage()    {}
func (*BACKWARD) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fe0888338559dd1, []int{0}
}

func (m *BACKWARD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BACKWARD.Unmarshal(m, b)
}
func (m *BACKWARD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BACKWARD.Marshal(b, m, deterministic)
}
func (m *BACKWARD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BACKWARD.Merge(m, src)
}
func (m *BACKWARD) XXX_Size() int {
	return xxx_messageInfo_BACKWARD.Size(m)
}
func (m *BACKWARD) XXX_DiscardUnknown() {
	xxx_messageInfo_BACKWARD.DiscardUnknown(m)
}

var xxx_messageInfo_BACKWARD proto.InternalMessageInfo

func (m *BACKWARD) GetAddrFamilyAfi() uint32 {
	if m != nil {
		return m.AddrFamilyAfi
	}
	return 0
}

func (m *BACKWARD) GetAddrFamilySafi() uint32 {
	if m != nil {
		return m.AddrFamilySafi
	}
	return 0
}

func (m *BACKWARD) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *BACKWARD) GetLocalIfIndex() uint32 {
	if m != nil {
		return m.LocalIfIndex
	}
	return 0
}

func (m *BACKWARD) GetLocalIfName() string {
	if m != nil {
		return m.LocalIfName
	}
	return ""
}

func (m *BACKWARD) GetPeerAddrType() uint32 {
	if m != nil {
		return m.PeerAddrType
	}
	return 0
}

func (m *BACKWARD) GetPeerIpv4Addr() string {
	if m != nil {
		return m.PeerIpv4Addr
	}
	return ""
}

func (m *BACKWARD) GetPeerIpv4Ipv6Addr() string {
	if m != nil {
		return m.PeerIpv4Ipv6Addr
	}
	return ""
}

func (m *BACKWARD) GetPeerLastError() string {
	if m != nil {
		return m.PeerLastError
	}
	return ""
}

func (m *BACKWARD) GetPeerState() uint32 {
	if m != nil {
		return m.PeerState
	}
	return 0
}

func (m *BACKWARD) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *BACKWARD) GetIfIndex() uint32 {
	if m != nil {
		return m.IfIndex
	}
	return 0
}

type ESTABLISHED struct {
	AddrFamilyAfi        uint32   `protobuf:"varint,1,opt,name=AddrFamilyAfi,proto3" json:"AddrFamilyAfi,omitempty"`
	AddrFamilySafi       uint32   `protobuf:"varint,2,opt,name=AddrFamilySafi,proto3" json:"AddrFamilySafi,omitempty"`
	InstanceId           string   `protobuf:"bytes,3,opt,name=InstanceId,proto3" json:"InstanceId,omitempty"`
	LocalIfIndex         uint32   `protobuf:"varint,4,opt,name=LocalIfIndex,proto3" json:"LocalIfIndex,omitempty"`
	LocalIfName          string   `protobuf:"bytes,5,opt,name=LocalIfName,proto3" json:"LocalIfName,omitempty"`
	PeerAddrType         uint32   `protobuf:"varint,6,opt,name=PeerAddrType,proto3" json:"PeerAddrType,omitempty"`
	PeerIpv4Addr         string   `protobuf:"bytes,7,opt,name=PeerIpv4Addr,proto3" json:"PeerIpv4Addr,omitempty"`
	PeerIpv4Ipv6Addr     string   `protobuf:"bytes,8,opt,name=PeerIpv4Ipv6Addr,proto3" json:"PeerIpv4Ipv6Addr,omitempty"`
	PeerLastError        string   `protobuf:"bytes,9,opt,name=PeerLastError,proto3" json:"PeerLastError,omitempty"`
	PeerState            uint32   `protobuf:"varint,10,opt,name=PeerState,proto3" json:"PeerState,omitempty"`
	Reason               string   `protobuf:"bytes,11,opt,name=Reason,proto3" json:"Reason,omitempty"`
	IfIndex              uint32   `protobuf:"varint,12,opt,name=ifIndex,proto3" json:"ifIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ESTABLISHED) Reset()         { *m = ESTABLISHED{} }
func (m *ESTABLISHED) String() string { return proto.CompactTextString(m) }
func (*ESTABLISHED) ProtoMessage()    {}
func (*ESTABLISHED) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fe0888338559dd1, []int{1}
}

func (m *ESTABLISHED) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ESTABLISHED.Unmarshal(m, b)
}
func (m *ESTABLISHED) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ESTABLISHED.Marshal(b, m, deterministic)
}
func (m *ESTABLISHED) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ESTABLISHED.Merge(m, src)
}
func (m *ESTABLISHED) XXX_Size() int {
	return xxx_messageInfo_ESTABLISHED.Size(m)
}
func (m *ESTABLISHED) XXX_DiscardUnknown() {
	xxx_messageInfo_ESTABLISHED.DiscardUnknown(m)
}

var xxx_messageInfo_ESTABLISHED proto.InternalMessageInfo

func (m *ESTABLISHED) GetAddrFamilyAfi() uint32 {
	if m != nil {
		return m.AddrFamilyAfi
	}
	return 0
}

func (m *ESTABLISHED) GetAddrFamilySafi() uint32 {
	if m != nil {
		return m.AddrFamilySafi
	}
	return 0
}

func (m *ESTABLISHED) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ESTABLISHED) GetLocalIfIndex() uint32 {
	if m != nil {
		return m.LocalIfIndex
	}
	return 0
}

func (m *ESTABLISHED) GetLocalIfName() string {
	if m != nil {
		return m.LocalIfName
	}
	return ""
}

func (m *ESTABLISHED) GetPeerAddrType() uint32 {
	if m != nil {
		return m.PeerAddrType
	}
	return 0
}

func (m *ESTABLISHED) GetPeerIpv4Addr() string {
	if m != nil {
		return m.PeerIpv4Addr
	}
	return ""
}

func (m *ESTABLISHED) GetPeerIpv4Ipv6Addr() string {
	if m != nil {
		return m.PeerIpv4Ipv6Addr
	}
	return ""
}

func (m *ESTABLISHED) GetPeerLastError() string {
	if m != nil {
		return m.PeerLastError
	}
	return ""
}

func (m *ESTABLISHED) GetPeerState() uint32 {
	if m != nil {
		return m.PeerState
	}
	return 0
}

func (m *ESTABLISHED) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *ESTABLISHED) GetIfIndex() uint32 {
	if m != nil {
		return m.IfIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*BACKWARD)(nil), "huawei_bgp.BACKWARD")
	proto.RegisterType((*ESTABLISHED)(nil), "huawei_bgp.ESTABLISHED")
}

func init() { proto.RegisterFile("huawei-bgp.proto", fileDescriptor_1fe0888338559dd1) }

var fileDescriptor_1fe0888338559dd1 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xd3, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x06, 0x60, 0x7a, 0x73, 0x4d, 0x9b, 0x93, 0x56, 0xca, 0x2c, 0x64, 0x16, 0x22, 0x21, 0x88,
	0x14, 0x41, 0x37, 0x8a, 0xfb, 0x54, 0x23, 0x0e, 0x06, 0x91, 0xa4, 0xe0, 0x52, 0x26, 0xcd, 0xa4,
	0x06, 0xda, 0x64, 0x98, 0xc4, 0x6a, 0xdf, 0x48, 0xf0, 0x25, 0x65, 0x4e, 0x13, 0x9a, 0xe8, 0x0b,
	0xb8, 0x70, 0x79, 0x3e, 0xfe, 0xf9, 0x13, 0xe6, 0x30, 0x30, 0x7e, 0x79, 0xe5, 0x6f, 0x22, 0x3b,
	0x8b, 0x17, 0xf2, 0x5c, 0xaa, 0xa2, 0x2a, 0x08, 0x6c, 0xe5, 0x39, 0x5e, 0x48, 0xf7, 0xc3, 0x80,
	0xc1, 0xd4, 0xbb, 0xbe, 0x7f, 0xf2, 0xc2, 0x1b, 0x72, 0x0c, 0x23, 0x2f, 0x49, 0xd4, 0x2d, 0x5f,
	0x65, 0xcb, 0x8d, 0x97, 0x66, 0xb4, 0xe7, 0xf4, 0x26, 0xa3, 0xb0, 0x8b, 0xe4, 0x04, 0xf6, 0x77,
	0x10, 0xf1, 0x34, 0xa3, 0xff, 0x30, 0xf6, 0x4d, 0xc9, 0x11, 0x00, 0xcb, 0xcb, 0x8a, 0xe7, 0x73,
	0xc1, 0x12, 0x6a, 0x38, 0xbd, 0x89, 0x15, 0xb6, 0x84, 0xb8, 0x30, 0x0c, 0x8a, 0x39, 0x5f, 0xb2,
	0x94, 0xe5, 0x89, 0x78, 0xa7, 0xff, 0xb1, 0xa5, 0x63, 0xc4, 0x01, 0xbb, 0x9e, 0x1f, 0xf8, 0x4a,
	0xd0, 0x3d, 0x2c, 0x69, 0x93, 0x6e, 0x79, 0x14, 0x42, 0xe9, 0x6f, 0xcf, 0x36, 0x52, 0x50, 0x73,
	0xdb, 0xd2, 0xb6, 0x26, 0xc3, 0xe4, 0xfa, 0x52, 0x1b, 0xed, 0x63, 0x4d, 0xc7, 0xc8, 0x29, 0x8c,
	0x9b, 0x99, 0xc9, 0xf5, 0x15, 0xe6, 0x06, 0x98, 0xfb, 0xe1, 0xfa, 0x9e, 0xb4, 0x05, 0xbc, 0xac,
	0x7c, 0xa5, 0x0a, 0x45, 0x2d, 0x0c, 0x76, 0x91, 0x1c, 0x82, 0xa5, 0x21, 0xaa, 0x78, 0x25, 0x28,
	0xe0, 0x6f, 0xed, 0x80, 0x1c, 0x80, 0x19, 0x0a, 0x5e, 0x16, 0x39, 0xb5, 0xf1, 0x70, 0x3d, 0x11,
	0x0a, 0xfd, 0xac, 0xbe, 0x90, 0x21, 0x9e, 0x69, 0x46, 0xf7, 0xd3, 0x00, 0xdb, 0x8f, 0x66, 0xde,
	0x34, 0x60, 0xd1, 0x9d, 0xff, 0xb7, 0xad, 0x5f, 0xbd, 0xad, 0xd8, 0xc4, 0xb7, 0x76, 0xf1, 0x15,
	0x00, 0x00, 0xff, 0xff, 0x5f, 0x22, 0xa6, 0xd2, 0x7f, 0x03, 0x00, 0x00,
}
