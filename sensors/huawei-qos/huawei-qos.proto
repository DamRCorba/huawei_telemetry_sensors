syntax = "proto3";
// Automatically generated by goyang https://github.com/openconfig/goyang
// compiled 2017-08-31T02:49:22Z
// do not delete the next line
// goyang-version 1
// module "huawei-qos"
// revision "2017-03-23"
// revision "2013-01-01"
// namespace "http://www.huawei.com/netconf/vrp/huawei-qos"

package huawei_qos;
service HuaweiQos {
  rpc QosResetATMPvcQueue (QosResetATMPvcQueueRequest) returns (Empty);
  rpc QosResetBdPolicyApply (QosResetBdPolicyApplyRequest) returns (Empty);
  rpc QosResetBdVxlanPolicyApply (QosResetBdVxlanPolicyApplyRequest) returns (Empty);
  rpc QosResetEvplVxlanPolicyApply (QosResetEvplVxlanPolicyApplyRequest) returns (Empty);
  rpc QosResetGlobalPolicy (QosResetGlobalPolicyRequest) returns (Empty);
  rpc QosResetHardPipe (QosResetHardPipeRequest) returns (Empty);
  rpc QosResetIFGQSt (QosResetIFGQStRequest) returns (Empty);
  rpc QosResetIfCar (QosResetIfCarRequest) returns (Empty);
  rpc QosResetIfGQ (QosResetIfGQRequest) returns (Empty);
  rpc QosResetIfQppb (QosResetIfQppbRequest) returns (Empty);
  rpc QosResetIfSQ (QosResetIfSQRequest) returns (Empty);
  rpc QosResetLsPortQueue (QosResetLsPortQueueRequest) returns (Empty);
  rpc QosResetLvHardPipe (QosResetLvHardPipeRequest) returns (Empty);
  rpc QosResetPolicyApply (QosResetPolicyApplyRequest) returns (Empty);
  rpc QosResetPortQueue (QosResetPortQueueRequest) returns (Empty);
  rpc QosResetProUSt (QosResetProUStRequest) returns (Empty);
  rpc QosResetProfile (QosResetProfileRequest) returns (Empty);
  rpc QosResetSlotPortQueue (QosResetSlotPortQueueRequest) returns (Empty);
  rpc QosResetSlotVOQSt (QosResetSlotVOQStRequest) returns (Empty);
  rpc QosResetSubPortQSt (QosResetSubPortQStRequest) returns (Empty);
  rpc QosResetVniGQ (QosResetVniGQRequest) returns (Empty);
  rpc QosResetVpnVxlanPolicyApply (QosResetVpnVxlanPolicyApplyRequest) returns (Empty);
}
message QosResetATMPvcQueueRequest {
  string ifName = 1;
  enum ServiceClass {
    ServiceClass_AF1 = 0;
    ServiceClass_AF2 = 1;
    ServiceClass_AF3 = 2;
    ServiceClass_AF4 = 3;
    ServiceClass_BE = 4;
    ServiceClass_CS6 = 5;
    ServiceClass_CS7 = 6;
    ServiceClass_EF = 7;
    ServiceClass_NOTCONFIG = 8;
  };
  ServiceClass serviceClass = 2;
  uint32 vci = 3;
  uint32 vpi = 4;
}
message QosResetBdPolicyApplyRequest {
  uint32 bdName = 1;
  enum Bddirection {
    Bddirection_INBOUND = 0;
    Bddirection_OUTBOUND = 1;
  };
  Bddirection bddirection = 2;
}
message QosResetBdVxlanPolicyApplyRequest {
  uint32 bdName = 1;
  enum Bddirection {
    Bddirection_INBOUND = 0;
    Bddirection_OUTBOUND = 1;
  };
  Bddirection bddirection = 2;
}
message QosResetEvplVxlanPolicyApplyRequest {
  uint32 evplName = 1;
  enum Evpldirection {
    Evpldirection_OUTBOUND = 0;
  };
  Evpldirection evpldirection = 2;
}
message QosResetGlobalPolicyRequest {
  enum Direction {
    Direction_INBOUND = 0;
    Direction_OUTBOUND = 1;
  };
  Direction direction = 1;
}
message QosResetHardPipeRequest {
  string ifName = 1;
}
message QosResetIFGQStRequest {
  enum Direction {
    Direction_INBOUND = 0;
    Direction_OUTBOUND = 1;
  };
  Direction direction = 1;
  string ifName = 2;
}
message QosResetIfCarRequest {
  enum Direction {
    Direction_INBOUND = 0;
    Direction_OUTBOUND = 1;
  };
  Direction direction = 1;
  string ifName = 2;
}
message QosResetIfGQRequest {
  uint32 appCeVlan = 1;
  uint32 appPeVlan = 2;
  enum Direction {
    Direction_INBOUND = 0;
    Direction_OUTBOUND = 1;
  };
  Direction direction = 3;
  string ifName = 4;
}
message QosResetIfQppbRequest {
  enum Direction {
    Direction_INBOUND = 0;
    Direction_IPPRECEDENCE = 1;
    Direction_OUTBOUND = 2;
  };
  Direction direction = 1;
  string ifName = 2;
}
message QosResetIfSQRequest {
  enum Direction {
    Direction_INBOUND = 0;
    Direction_OUTBOUND = 1;
  };
  Direction direction = 1;
  string ifName = 2;
}
message QosResetLsPortQueueRequest {
  string ifName = 1;
  enum ServiceClass {
    ServiceClass_AF1 = 0;
    ServiceClass_AF2 = 1;
    ServiceClass_AF3 = 2;
    ServiceClass_AF4 = 3;
    ServiceClass_BE = 4;
    ServiceClass_CS6 = 5;
    ServiceClass_CS7 = 6;
    ServiceClass_EF = 7;
    ServiceClass_NOTCONFIG = 8;
  };
  ServiceClass serviceClass = 2;
}
message QosResetLvHardPipeRequest {
  string ifName = 1;
}
message QosResetPolicyApplyRequest {
  enum Direction {
    Direction_INBOUND = 0;
    Direction_OUTBOUND = 1;
  };
  Direction direction = 1;
  uint32 groupId = 2;
  string ifName = 3;
}
message QosResetPortQueueRequest {
  string ifName = 1;
  enum Isonboard {
    Isonboard_NO = 0;
    Isonboard_YES = 1;
  };
  Isonboard isonboard = 2;
  enum ServiceClass {
    ServiceClass_AF1 = 0;
    ServiceClass_AF2 = 1;
    ServiceClass_AF3 = 2;
    ServiceClass_AF4 = 3;
    ServiceClass_BE = 4;
    ServiceClass_CS6 = 5;
    ServiceClass_CS7 = 6;
    ServiceClass_EF = 7;
    ServiceClass_NOTCONFIG = 8;
  };
  ServiceClass serviceClass = 3;
}
message QosResetProUStRequest {
  enum Direction {
    Direction_INBOUND = 0;
    Direction_OUTBOUND = 1;
  };
  Direction direction = 1;
  uint32 userID = 2;
}
message QosResetProfileRequest {
  string ifName = 1;
  enum ServiceClass {
    ServiceClass_AF1 = 0;
    ServiceClass_AF2 = 1;
    ServiceClass_AF3 = 2;
    ServiceClass_AF4 = 3;
    ServiceClass_BE = 4;
    ServiceClass_CS6 = 5;
    ServiceClass_CS7 = 6;
    ServiceClass_EF = 7;
    ServiceClass_NOTCONFIG = 8;
  };
  ServiceClass serviceClass = 2;
}
message QosResetSlotPortQueueRequest {
  enum ServiceClass {
    ServiceClass_AF1 = 0;
    ServiceClass_AF2 = 1;
    ServiceClass_AF3 = 2;
    ServiceClass_AF4 = 3;
    ServiceClass_BE = 4;
    ServiceClass_CS6 = 5;
    ServiceClass_CS7 = 6;
    ServiceClass_EF = 7;
    ServiceClass_NOTCONFIG = 8;
  };
  ServiceClass serviceClass = 1;
  string slotid = 2;
}
message QosResetSlotVOQStRequest {
  string desSlotID = 1;
  string slotid = 2;
  enum VoqFlag {
    VoqFlag_MULTICAST = 0;
    VoqFlag_UNICAST = 1;
  };
  VoqFlag voqFlag = 3;
}
message QosResetSubPortQStRequest {
  string ifName = 1;
}
message QosResetVniGQRequest {
  enum Direction {
    Direction_INBOUND = 0;
    Direction_OUTBOUND = 1;
  };
  Direction direction = 1;
  uint32 vniID = 2;
}
message QosResetVpnVxlanPolicyApplyRequest {
  string vpnName = 1;
  enum Vpndirection {
    Vpndirection_INBOUND = 0;
    Vpndirection_OUTBOUND = 1;
  };
  Vpndirection vpndirection = 2;
}

message Empty { }

message Qos {
  message Hqos {
    message HqosFlowMappings {
      message HqosFlowMapping {
        string flowMappingName = 1;
        message HqosFMParams {
          message HqosFMParam {
            enum CqServiceClass {
              CqServiceClass_AF1 = 0;
              CqServiceClass_AF2 = 1;
              CqServiceClass_AF3 = 2;
              CqServiceClass_AF4 = 3;
              CqServiceClass_BE = 4;
              CqServiceClass_CS6 = 5;
              CqServiceClass_CS7 = 6;
              CqServiceClass_EF = 7;
            };
            CqServiceClass cqServiceClass = 1;
            enum FqServiceClass {
              FqServiceClass_AF1 = 0;
              FqServiceClass_AF2 = 1;
              FqServiceClass_AF3 = 2;
              FqServiceClass_AF4 = 3;
              FqServiceClass_BE = 4;
              FqServiceClass_CS6 = 5;
              FqServiceClass_CS7 = 6;
              FqServiceClass_EF = 7;
            };
            FqServiceClass fqServiceClass = 2;
          }
          repeated HqosFMParam hqosFMParam = 1;
        }
        HqosFMParams hqosFMParams = 2;
      }
      repeated HqosFlowMapping hqosFlowMapping = 1;
    }
    HqosFlowMappings hqosFlowMappings = 1;
    message HqosFlowQueues {
      message HqosFlowQueue {
        string flowQueueName = 1;
        message HqosPriorityScheduleModes {
          message HqosPriorityScheduleMode {
            uint32 priority = 1;
            enum QueueScheduleMode {
              QueueScheduleMode_PQ = 0;
              QueueScheduleMode_WFQ = 1;
            };
            QueueScheduleMode queueScheduleMode = 2;
          }
          repeated HqosPriorityScheduleMode hqosPriorityScheduleMode = 1;
        }
        HqosPriorityScheduleModes hqosPriorityScheduleModes = 2;
        message HqosPriorityShareShapings {
          message HqosPriorityShareShaping {
            enum Af1 {
              Af1_FALSE = 0;
              Af1_TRUE = 1;
            };
            Af1 af1 = 1;
            enum Af2 {
              Af2_FALSE = 0;
              Af2_TRUE = 1;
            };
            Af2 af2 = 2;
            enum Af3 {
              Af3_FALSE = 0;
              Af3_TRUE = 1;
            };
            Af3 af3 = 3;
            enum Af4 {
              Af4_FALSE = 0;
              Af4_TRUE = 1;
            };
            Af4 af4 = 4;
            enum Be {
              Be_FALSE = 0;
              Be_TRUE = 1;
            };
            Be be = 5;
            enum Cs6 {
              Cs6_FALSE = 0;
              Cs6_TRUE = 1;
            };
            Cs6 cs6 = 6;
            enum Cs7 {
              Cs7_FALSE = 0;
              Cs7_TRUE = 1;
            };
            Cs7 cs7 = 7;
            enum Ef {
              Ef_FALSE = 0;
              Ef_TRUE = 1;
            };
            Ef ef = 8;
            uint32 pbs = 9;
            enum QueueScheduleMode {
              QueueScheduleMode_PQ = 0;
              QueueScheduleMode_WFQ = 1;
            };
            QueueScheduleMode queueScheduleMode = 10;
            enum ShapId {
              ShapId_X_1 = 0;
              ShapId_NOTCONFIG = 1;
            };
            ShapId shapId = 11;
            uint32 shareShapingPir = 12;
            uint32 weight = 13;
          }
          repeated HqosPriorityShareShaping hqosPriorityShareShaping = 1;
        }
        HqosPriorityShareShapings hqosPriorityShareShapings = 3;
        message HqosQueue4Coss {
          message HqosQueue4Cos {
            enum CosValue {
              CosValue_COS0 = 0;
              CosValue_COS1 = 1;
              CosValue_COS2 = 2;
              CosValue_COS3 = 3;
            };
            CosValue cosValue = 1;
            uint32 pbs = 2;
            enum QueueScheduleMode {
              QueueScheduleMode_LPQ = 0;
              QueueScheduleMode_PQ = 1;
              QueueScheduleMode_WFQ = 2;
            };
            QueueScheduleMode queueScheduleMode = 3;
            uint32 shaping = 4;
            uint32 shapingPercentage = 5;
            uint32 weight = 6;
            string wredName = 7;
          }
          repeated HqosQueue4Cos hqosQueue4cos = 1;
        }
        HqosQueue4Coss hqosQueue4coss = 4;
        message HqosQueuePrioritys {
          message HqosQueuePriority {
            uint32 priority = 1;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
            };
            ServiceClass serviceClass = 2;
            uint32 shaping = 3;
            uint32 shapingPercentage = 4;
            uint32 weight = 5;
            string wredName = 6;
          }
          repeated HqosQueuePriority hqosQueuePriority = 1;
        }
        HqosQueuePrioritys hqosQueuePrioritys = 5;
        message HqosQueues {
          message HqosQueue {
            uint32 car = 1;
            uint32 carPercentage = 2;
            enum Lowjitter {
              Lowjitter_DISABLE = 0;
              Lowjitter_ENABLE = 1;
            };
            Lowjitter lowjitter = 3;
            enum Lowlatency {
              Lowlatency_DISABLE = 0;
              Lowlatency_ENABLE = 1;
            };
            Lowlatency lowlatency = 4;
            uint32 pbs = 5;
            enum QueueScheduleMode {
              QueueScheduleMode_LPQ = 0;
              QueueScheduleMode_PQ = 1;
              QueueScheduleMode_WFQ = 2;
            };
            QueueScheduleMode queueScheduleMode = 6;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
            };
            ServiceClass serviceClass = 7;
            uint32 shaping = 8;
            uint32 shapingPercentage = 9;
            uint32 weight = 10;
            string wredName = 11;
          }
          repeated HqosQueue hqosQueue = 1;
        }
        HqosQueues hqosQueues = 6;
        message HqosRdmDscrds {
          message HqosRdmDscrd {
            string rdmDscrd = 1;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
            };
            ServiceClass serviceClass = 2;
          }
          repeated HqosRdmDscrd hqosRdmDscrd = 1;
        }
        HqosRdmDscrds hqosRdmDscrds = 7;
        message HqosShareShapeIDs {
          message HqosShareShapeID {
            enum Af1 {
              Af1_FALSE = 0;
              Af1_TRUE = 1;
            };
            Af1 af1 = 1;
            enum Af2 {
              Af2_FALSE = 0;
              Af2_TRUE = 1;
            };
            Af2 af2 = 2;
            enum Af3 {
              Af3_FALSE = 0;
              Af3_TRUE = 1;
            };
            Af3 af3 = 3;
            enum Af4 {
              Af4_FALSE = 0;
              Af4_TRUE = 1;
            };
            Af4 af4 = 4;
            enum Be {
              Be_FALSE = 0;
              Be_TRUE = 1;
            };
            Be be = 5;
            enum Cs6 {
              Cs6_FALSE = 0;
              Cs6_TRUE = 1;
            };
            Cs6 cs6 = 6;
            enum Cs7 {
              Cs7_FALSE = 0;
              Cs7_TRUE = 1;
            };
            Cs7 cs7 = 7;
            enum Ef {
              Ef_FALSE = 0;
              Ef_TRUE = 1;
            };
            Ef ef = 8;
            uint32 pbs = 9;
            enum QueueScheduleMode {
              QueueScheduleMode_LPQ = 0;
              QueueScheduleMode_PQ = 1;
              QueueScheduleMode_WFQ = 2;
            };
            QueueScheduleMode queueScheduleMode = 10;
            uint32 shareShapingPir = 11;
            uint32 weight = 12;
          }
          HqosShareShapeID hqosShareShapeID = 1;
        }
        HqosShareShapeIDs hqosShareShapeIDs = 8;
        message HqosShareShapeRdms {
          message HqosShareShapeRdm {
            enum Af1 {
              Af1_FALSE = 0;
              Af1_TRUE = 1;
            };
            Af1 af1 = 1;
            enum Af2 {
              Af2_FALSE = 0;
              Af2_TRUE = 1;
            };
            Af2 af2 = 2;
            enum Af3 {
              Af3_FALSE = 0;
              Af3_TRUE = 1;
            };
            Af3 af3 = 3;
            enum Af4 {
              Af4_FALSE = 0;
              Af4_TRUE = 1;
            };
            Af4 af4 = 4;
            enum Be {
              Be_FALSE = 0;
              Be_TRUE = 1;
            };
            Be be = 5;
            enum Cs6 {
              Cs6_FALSE = 0;
              Cs6_TRUE = 1;
            };
            Cs6 cs6 = 6;
            enum Cs7 {
              Cs7_FALSE = 0;
              Cs7_TRUE = 1;
            };
            Cs7 cs7 = 7;
            enum Ef {
              Ef_FALSE = 0;
              Ef_TRUE = 1;
            };
            Ef ef = 8;
            string rdmDscrd = 9;
          }
          HqosShareShapeRdm hqosShareShapeRdm = 1;
        }
        HqosShareShapeRdms hqosShareShapeRdms = 9;
        message HqosShareShapes {
          message HqosShareShape {
            enum Af1 {
              Af1_FALSE = 0;
              Af1_TRUE = 1;
            };
            Af1 af1 = 1;
            enum Af2 {
              Af2_FALSE = 0;
              Af2_TRUE = 1;
            };
            Af2 af2 = 2;
            enum Af3 {
              Af3_FALSE = 0;
              Af3_TRUE = 1;
            };
            Af3 af3 = 3;
            enum Af4 {
              Af4_FALSE = 0;
              Af4_TRUE = 1;
            };
            Af4 af4 = 4;
            enum Be {
              Be_FALSE = 0;
              Be_TRUE = 1;
            };
            Be be = 5;
            enum Cs6 {
              Cs6_FALSE = 0;
              Cs6_TRUE = 1;
            };
            Cs6 cs6 = 6;
            enum Cs7 {
              Cs7_FALSE = 0;
              Cs7_TRUE = 1;
            };
            Cs7 cs7 = 7;
            enum Ef {
              Ef_FALSE = 0;
              Ef_TRUE = 1;
            };
            Ef ef = 8;
            uint32 pbs = 9;
            enum QueueScheduleMode {
              QueueScheduleMode_LPQ = 0;
              QueueScheduleMode_PQ = 1;
              QueueScheduleMode_WFQ = 2;
            };
            QueueScheduleMode queueScheduleMode = 10;
            uint32 shareShapingPir = 11;
            uint32 weight = 12;
          }
          HqosShareShape hqosShareShape = 1;
        }
        HqosShareShapes hqosShareShapes = 10;
        enum Prioritymodefq {
          Prioritymodefq_IS4COS = 0;
          Prioritymodefq_ISPRIORITY = 1;
          Prioritymodefq_NOTPRIORITY = 2;
        };
        Prioritymodefq prioritymodefq = 11;
      }
      repeated HqosFlowQueue hqosFlowQueue = 1;
    }
    HqosFlowQueues hqosFlowQueues = 2;
    message HqosFourFlowMappings {
      message HqosFourFlowMapping {
        string fourflowMappingName = 1;
        message HqosFourFMParams {
          message HqosFourFMParam {
            enum FfqosServiceClass {
              FfqosServiceClass_COS0 = 0;
              FfqosServiceClass_COS1 = 1;
              FfqosServiceClass_COS2 = 2;
              FfqosServiceClass_COS3 = 3;
            };
            FfqosServiceClass ffqosServiceClass = 1;
            enum FqosServiceClass {
              FqosServiceClass_AF1 = 0;
              FqosServiceClass_AF2 = 1;
              FqosServiceClass_AF3 = 2;
              FqosServiceClass_AF4 = 3;
              FqosServiceClass_BE = 4;
              FqosServiceClass_CS6 = 5;
              FqosServiceClass_CS7 = 6;
              FqosServiceClass_EF = 7;
            };
            FqosServiceClass fqosServiceClass = 2;
          }
          repeated HqosFourFMParam hqosFourFMParam = 1;
        }
        HqosFourFMParams hqosFourFMParams = 2;
      }
      repeated HqosFourFlowMapping hqosFourFlowMapping = 1;
    }
    HqosFourFlowMappings hqosFourFlowMappings = 3;
    message HqosIFUserQueues {
      message HqosIFUserQueue {
        uint32 cir = 1;
        enum Direction {
          Direction_INBOUND = 0;
          Direction_OUTBOUND = 1;
        };
        Direction direction = 2;
        string flowMappingName = 3;
        string flowQueueName = 4;
        string gqName = 5;
        message HqosIFUserQueueStats {
          message HqosIFUserQueueStat {
            uint64 dropByteRate = 1;
            uint64 dropBytes = 2;
            uint64 dropPackets = 3;
            uint64 dropPktRate = 4;
            uint64 passByteRate = 5;
            uint64 passBytes = 6;
            uint64 passPackets = 7;
            uint64 passPktRate = 8;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_TOTAL = 8;
            };
            ServiceClass serviceClass = 9;
          }
          repeated HqosIFUserQueueStat hqosIFUserQueueStat = 1;
        }
        HqosIFUserQueueStats hqosIFUserQueueStats = 6;
        string ifName = 7;
        uint32 pir = 8;
        string templateName = 9;
      }
      repeated HqosIFUserQueue hqosIFUserQueue = 1;
    }
    HqosIFUserQueues hqosIFUserQueues = 4;
    message HqosPortQTempApplys {
      message HqosPortQTempApply {
        string ifName = 1;
        string portQTempName = 2;
      }
      repeated HqosPortQTempApply hqosPortQTempApply = 1;
    }
    HqosPortQTempApplys hqosPortQTempApplys = 5;
    message HqosPortQTemps {
      message HqosPortQTemp {
        message HqosPortQParas {
          message HqosPortQPara {
            enum Lowlatency {
              Lowlatency_DISABLE = 0;
              Lowlatency_ENABLE = 1;
            };
            Lowlatency lowlatency = 1;
            uint32 pbs = 2;
            enum QueueScheduleMode {
              QueueScheduleMode_LPQ = 0;
              QueueScheduleMode_PQ = 1;
              QueueScheduleMode_WFQ = 2;
            };
            QueueScheduleMode queueScheduleMode = 3;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_NOTCONFIG = 8;
            };
            ServiceClass serviceClass = 4;
            uint32 shaping = 5;
            uint32 shapingPercentage = 6;
            uint32 weight = 7;
            string wredName = 8;
          }
          repeated HqosPortQPara hqosPortQPara = 1;
        }
        HqosPortQParas hqosPortQParas = 1;
        string portQTempName = 2;
      }
      repeated HqosPortQTemp hqosPortQTemp = 1;
    }
    HqosPortQTemps hqosPortQTemps = 6;
    message HqosProfileApplys {
      message HqosProfileApply {
        uint32 appPeVlan = 1;
        uint32 ceBeginVlanID = 2;
        uint32 ceEndVlanID = 3;
        enum Direction {
          Direction_INBOUND = 0;
          Direction_OUTBOUND = 1;
        };
        Direction direction = 4;
        string groupName = 5;
        message HqosGqStats {
          message HqosGqStat {
            uint64 dropByteRate = 1;
            uint64 dropBytes = 2;
            uint64 dropPackets = 3;
            uint64 dropPktRate = 4;
            uint64 passByteRate = 5;
            uint64 passBytes = 6;
            uint64 passPackets = 7;
            uint64 passPktRate = 8;
            uint32 pevId = 9;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_TOTAL = 8;
            };
            ServiceClass serviceClass = 10;
            uint32 vlanId = 11;
          }
          repeated HqosGqStat hqosGqStat = 1;
        }
        HqosGqStats hqosGqStats = 6;
        message HqosProfileCarStats {
          message HqosProfileCarStat {
            enum CarType {
              CarType_BROADCAST = 0;
              CarType_BU = 1;
              CarType_BUM = 2;
              CarType_CAR = 3;
              CarType_L2_FORWARD = 4;
              CarType_L3_FORWARD = 5;
              CarType_MULTICAST = 6;
              CarType_UNKNOW_UNICAST = 7;
            };
            CarType carType = 1;
            uint64 dropByteRate = 2;
            uint64 dropBytes = 3;
            uint64 dropPackets = 4;
            uint64 dropPktRate = 5;
            uint64 passByteRate = 6;
            uint64 passBytes = 7;
            uint64 passPackets = 8;
            uint64 passPktRate = 9;
            uint32 peVlanId = 10;
            uint32 vlanId = 11;
          }
          repeated HqosProfileCarStat hqosProfileCarStat = 1;
        }
        HqosProfileCarStats hqosProfileCarStats = 7;
        message HqosProfileStats {
          message HqosProfileStat {
            uint32 bufTotal = 1;
            uint32 bufUsed = 2;
            uint64 dropByteRate = 3;
            uint64 dropBytes = 4;
            uint64 dropPackets = 5;
            uint64 dropPktRate = 6;
            uint64 passByteRate = 7;
            uint64 passBytes = 8;
            uint64 passPackets = 9;
            uint64 passPktRate = 10;
            uint32 pevId = 11;
            uint64 rdmDcrdByteRate = 12;
            uint64 rdmDcrdBytes = 13;
            uint64 rdmDcrdPackets = 14;
            uint64 rdmDcrdPktRate = 15;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_TOTAL = 8;
            };
            ServiceClass serviceClass = 16;
            string timeStampIn = 17;
            uint32 vlanId = 18;
          }
          repeated HqosProfileStat hqosProfileStat = 1;
        }
        HqosProfileStats hqosProfileStats = 8;
        message HqosShareShapeStats {
          message HqosShareShapeStat {
            uint64 dropByteRate = 1;
            uint64 dropBytes = 2;
            uint64 dropPackets = 3;
            uint64 dropPktRate = 4;
            uint64 passByteRate = 5;
            uint64 passBytes = 6;
            uint64 passPackets = 7;
            uint64 passPktRate = 8;
            uint32 peVlanId = 9;
            uint32 vlanId = 10;
          }
          repeated HqosShareShapeStat hqosShareShapeStat = 1;
        }
        HqosShareShapeStats hqosShareShapeStats = 9;
        enum IdentifyType {
          IdentifyType_CE_VID = 0;
          IdentifyType_EVC_CE_VID = 1;
          IdentifyType_NONE = 2;
          IdentifyType_PE_CE_VID = 3;
          IdentifyType_PE_VID = 4;
          IdentifyType_VID = 5;
          IdentifyType_VID_CE_VID = 6;
          IdentifyType_VLAN = 7;
        };
        IdentifyType identifyType = 10;
        string ifName = 11;
        enum ProAppType {
          ProAppType_INTERFACE = 0;
          ProAppType_PE = 1;
          ProAppType_VLAN = 2;
        };
        ProAppType proAppType = 12;
        string profileName = 13;
      }
      repeated HqosProfileApply hqosProfileApply = 1;
    }
    HqosProfileApplys hqosProfileApplys = 7;
    message HqosProfiles {
      message HqosProfile {
        message HqosMplsHqoss {
          message HqosMplsHqos {
            string flowMappingName = 1;
            string flowQueueName = 2;
            string gqName = 3;
            string templateName = 4;
          }
          HqosMplsHqos hqosMplsHqos = 1;
        }
        HqosMplsHqoss hqosMplsHqoss = 1;
        message HqosProCars {
          message HqosProCar {
            enum CarType {
              CarType_BROADCAST = 0;
              CarType_BU = 1;
              CarType_BUM = 2;
              CarType_CAR = 3;
              CarType_L2_FORWARD = 4;
              CarType_L3_FORWARD = 5;
              CarType_MULTICAST = 6;
              CarType_UNKNOW_UNICAST = 7;
            };
            CarType carType = 1;
            uint32 cbs = 2;
            uint32 cir = 3;
            bool colorAware = 4;
            enum Direction {
              Direction_ALL = 0;
              Direction_INBOUND = 1;
              Direction_OUTBOUND = 2;
            };
            Direction direction = 5;
            enum GreenAction {
              GreenAction_DISCARD = 0;
              GreenAction_PASS = 1;
            };
            GreenAction greenAction = 6;
            enum GreenColor {
              GreenColor_GREEN = 0;
              GreenColor_RED = 1;
              GreenColor_YELLOW = 2;
            };
            GreenColor greenColor = 7;
            enum GreenServiceClass {
              GreenServiceClass_AF1 = 0;
              GreenServiceClass_AF2 = 1;
              GreenServiceClass_AF3 = 2;
              GreenServiceClass_AF4 = 3;
              GreenServiceClass_BE = 4;
              GreenServiceClass_CS6 = 5;
              GreenServiceClass_CS7 = 6;
              GreenServiceClass_EF = 7;
              GreenServiceClass_NOTCONFIG = 8;
            };
            GreenServiceClass greenServiceClass = 8;
            uint32 pbs = 9;
            uint32 pir = 10;
            enum RedAction {
              RedAction_DISCARD = 0;
              RedAction_PASS = 1;
            };
            RedAction redAction = 11;
            enum RedColor {
              RedColor_GREEN = 0;
              RedColor_RED = 1;
              RedColor_YELLOW = 2;
            };
            RedColor redColor = 12;
            enum RedServiceClass {
              RedServiceClass_AF1 = 0;
              RedServiceClass_AF2 = 1;
              RedServiceClass_AF3 = 2;
              RedServiceClass_AF4 = 3;
              RedServiceClass_BE = 4;
              RedServiceClass_CS6 = 5;
              RedServiceClass_CS7 = 6;
              RedServiceClass_EF = 7;
              RedServiceClass_NOTCONFIG = 8;
            };
            RedServiceClass redServiceClass = 13;
            enum YellowAction {
              YellowAction_DISCARD = 0;
              YellowAction_PASS = 1;
            };
            YellowAction yellowAction = 14;
            enum YellowColor {
              YellowColor_GREEN = 0;
              YellowColor_RED = 1;
              YellowColor_YELLOW = 2;
            };
            YellowColor yellowColor = 15;
            enum YellowServiceClass {
              YellowServiceClass_AF1 = 0;
              YellowServiceClass_AF2 = 1;
              YellowServiceClass_AF3 = 2;
              YellowServiceClass_AF4 = 3;
              YellowServiceClass_BE = 4;
              YellowServiceClass_CS6 = 5;
              YellowServiceClass_CS7 = 6;
              YellowServiceClass_EF = 7;
              YellowServiceClass_NOTCONFIG = 8;
            };
            YellowServiceClass yellowServiceClass = 16;
          }
          repeated HqosProCar hqosProCar = 1;
        }
        HqosProCars hqosProCars = 2;
        message HqosProTmpDescs {
          message HqosProTmpDesc {
            string descriptioninfo = 1;
          }
          HqosProTmpDesc hqosProTmpDesc = 1;
        }
        HqosProTmpDescs hqosProTmpDescs = 3;
        message HqosSQWeights {
          message HqosSQWeight {
            enum Direction {
              Direction_ALL = 0;
              Direction_INBOUND = 1;
              Direction_OUTBOUND = 2;
            };
            Direction direction = 1;
            uint32 weight = 2;
          }
          repeated HqosSQWeight hqosSQWeight = 1;
        }
        HqosSQWeights hqosSQWeights = 4;
        message HqosUserQueueTimeRanges {
          message HqosUserQueueTimeRange {
            enum AdjustOnCard {
              AdjustOnCard_DISABLE = 0;
              AdjustOnCard_ENABLE = 1;
            };
            AdjustOnCard adjustOnCard = 1;
            uint32 cbs = 2;
            uint32 cir = 3;
            enum Direction {
              Direction_ALL = 0;
              Direction_INBOUND = 1;
              Direction_OUTBOUND = 2;
            };
            Direction direction = 4;
            string flowMappingName = 5;
            string flowQueueName = 6;
            string gqName = 7;
            uint32 pbs = 8;
            uint32 pir = 9;
            enum PriorityLevelID {
              PriorityLevelID_HIGH = 0;
              PriorityLevelID_LOW = 1;
            };
            PriorityLevelID priorityLevelID = 10;
            string templateName = 11;
            string timeRangeName = 12;
          }
          repeated HqosUserQueueTimeRange hqosUserQueueTimeRange = 1;
        }
        HqosUserQueueTimeRanges hqosUserQueueTimeRanges = 5;
        message HqosUserQueues {
          message HqosUserQueue {
            enum AdjustOnCard {
              AdjustOnCard_DISABLE = 0;
              AdjustOnCard_ENABLE = 1;
            };
            AdjustOnCard adjustOnCard = 1;
            uint32 cbs = 2;
            uint32 cir = 3;
            uint32 cirPercent = 4;
            enum Direction {
              Direction_ALL = 0;
              Direction_INBOUND = 1;
              Direction_OUTBOUND = 2;
            };
            Direction direction = 5;
            string flowMappingName = 6;
            string flowQueueName = 7;
            string gqName = 8;
            uint32 pbs = 9;
            uint32 pir = 10;
            uint32 pirPercent = 11;
            enum PriorityLevelID {
              PriorityLevelID_HIGH = 0;
              PriorityLevelID_LOW = 1;
            };
            PriorityLevelID priorityLevelID = 12;
            string templateName = 13;
          }
          repeated HqosUserQueue hqosUserQueue = 1;
        }
        HqosUserQueues hqosUserQueues = 6;
        string profileName = 7;
        enum TimeRange {
          TimeRange_ISTIMERANGE = 0;
          TimeRange_NOTTIMERANGE = 1;
        };
        TimeRange timeRange = 8;
      }
      repeated HqosProfile hqosProfile = 1;
    }
    HqosProfiles hqosProfiles = 8;
    message HqosServiceTemplates {
      message HqosServiceTemplate {
        message HqosSrvLengths {
          message HqosSrvLength {
            enum Direction {
              Direction_INBOUND = 0;
              Direction_OUTBOUND = 1;
            };
            Direction direction = 1;
            int32 value = 2;
          }
          repeated HqosSrvLength hqosSrvLength = 1;
        }
        HqosSrvLengths hqosSrvLengths = 1;
        string slotID = 2;
        string templateName = 3;
      }
      repeated HqosServiceTemplate hqosServiceTemplate = 1;
    }
    HqosServiceTemplates hqosServiceTemplates = 9;
    message HqosUserGroupQueues {
      message HqosUserGroupQueue {
        string gqName = 1;
        message HqosGQCirPirs {
          message HqosGQCirPir {
            uint32 cbs = 1;
            uint32 cir = 2;
            enum Direction {
              Direction_OUTBOUND = 0;
            };
            Direction direction = 3;
            uint32 pbs = 4;
            uint32 pir = 5;
          }
          repeated HqosGQCirPir hqosGQCirPir = 1;
        }
        HqosGQCirPirs hqosGQCirPirs = 2;
        message HqosGQModes {
          message HqosGQMode {
            enum Mode {
              Mode_NONE = 0;
              Mode_TEMPLATE = 1;
            };
            Mode mode = 1;
          }
          HqosGQMode hqosGQMode = 1;
        }
        HqosGQModes hqosGQModes = 3;
        message HqosGQShapingpriortys {
          message HqosGQShapingpriorty {
            enum Direction {
              Direction_OUTBOUND = 0;
            };
            Direction direction = 1;
            uint32 pbs = 2;
            uint32 pir = 3;
            enum Priority {
              Priority_NOPRIO = 0;
              Priority_PRIO0 = 1;
              Priority_PRIO1 = 2;
              Priority_PRIO2 = 3;
            };
            Priority priority = 4;
          }
          repeated HqosGQShapingpriorty hqosGQShapingpriorty = 1;
        }
        HqosGQShapingpriortys hqosGQShapingpriortys = 4;
        message HqosGQShapings {
          message HqosGQShaping {
            enum Direction {
              Direction_INBOUND = 0;
              Direction_OUTBOUND = 1;
            };
            Direction direction = 1;
            uint32 pbs = 2;
            uint32 pir = 3;
          }
          repeated HqosGQShaping hqosGQShaping = 1;
        }
        HqosGQShapings hqosGQShapings = 5;
        message HqosGQStats {
          message HqosGQStat {
            enum Direction {
              Direction_INBOUND = 0;
              Direction_OUTBOUND = 1;
            };
            Direction direction = 1;
            uint64 dropByteRate = 2;
            uint64 dropBytes = 3;
            uint64 dropPackets = 4;
            uint64 dropPktRate = 5;
            string groupName = 6;
            uint64 passByteRate = 7;
            uint64 passBytes = 8;
            uint64 passPackets = 9;
            uint64 passPktRate = 10;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_NOTCONFIG = 8;
            };
            ServiceClass serviceClass = 11;
            string slotIdPath = 12;
          }
          repeated HqosGQStat hqosGQStat = 1;
        }
        HqosGQStats hqosGQStats = 6;
        message HqosWeights {
          message HqosWeight {
            enum Direction {
              Direction_OUTBOUND = 0;
            };
            Direction direction = 1;
            uint32 weight = 2;
          }
          repeated HqosWeight hqosWeight = 1;
        }
        HqosWeights hqosWeights = 7;
        enum Prioritymodegq {
          Prioritymodegq_ISPRIORITY = 0;
          Prioritymodegq_NOTPRIORITY = 1;
        };
        Prioritymodegq prioritymodegq = 8;
      }
      repeated HqosUserGroupQueue hqosUserGroupQueue = 1;
    }
    HqosUserGroupQueues hqosUserGroupQueues = 10;
    message HqosVNIQOSProAppNodes {
      message HqosVNIQOSProAppNode {
        enum Direction {
          Direction_INBOUND = 0;
          Direction_OUTBOUND = 1;
        };
        Direction direction = 1;
        message HqosProfileVniCarStats {
          message HqosProfileVniCarStat {
            enum CarType {
              CarType_BROADCAST = 0;
              CarType_BU = 1;
              CarType_BUM = 2;
              CarType_CAR = 3;
              CarType_L2_FORWARD = 4;
              CarType_L3_FORWARD = 5;
              CarType_MULTICAST = 6;
              CarType_UNKNOW_UNICAST = 7;
            };
            CarType carType = 1;
            uint64 dropByteRate = 2;
            uint64 dropBytes = 3;
            uint64 dropPackets = 4;
            uint64 dropPktRate = 5;
            uint64 passByteRate = 6;
            uint64 passBytes = 7;
            uint64 passPackets = 8;
            uint64 passPktRate = 9;
            uint32 peVlanId = 10;
            uint32 vlanId = 11;
          }
          repeated HqosProfileVniCarStat hqosProfileVniCarStat = 1;
        }
        HqosProfileVniCarStats hqosProfileVniCarStats = 2;
        message HqosProfileVniStats {
          message HqosProfileVniStat {
            uint32 bufTotal = 1;
            uint32 bufUsed = 2;
            uint64 dropByteRate = 3;
            uint64 dropBytes = 4;
            uint64 dropPackets = 5;
            uint64 dropPktRate = 6;
            uint64 passByteRate = 7;
            uint64 passBytes = 8;
            uint64 passPackets = 9;
            uint64 passPktRate = 10;
            uint32 pevId = 11;
            uint64 rdmDcrdByteRate = 12;
            uint64 rdmDcrdBytes = 13;
            uint64 rdmDcrdPackets = 14;
            uint64 rdmDcrdPktRate = 15;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_TOTAL = 8;
            };
            ServiceClass serviceClass = 16;
            string timeStampIn = 17;
            uint32 vlanId = 18;
          }
          repeated HqosProfileVniStat hqosProfileVniStat = 1;
        }
        HqosProfileVniStats hqosProfileVniStats = 3;
        string profileName = 4;
        uint32 vniId = 5;
      }
      repeated HqosVNIQOSProAppNode hqosVNIQOSProAppNode = 1;
    }
    HqosVNIQOSProAppNodes hqosVNIQOSProAppNodes = 11;
  }
  Hqos hqos = 1;
  message QosAclLogParaCfs {
    message QosAclLogParaCf {
      enum AcllogType {
        AcllogType_ACLLOG = 0;
      };
      AcllogType acllogType = 1;
      uint32 aggingTime = 2;
      uint32 entryNum = 3;
    }
    repeated QosAclLogParaCf qosAclLogParaCf = 1;
  }
  QosAclLogParaCfs qosAclLogParaCfs = 2;
  message QosBDQoss {
    message QosBDQos {
      string bdName = 1;
      message QosBdDefaultServiceClasss {
        message QosBdDefaultServiceClass {
          enum ServicebdClass {
            ServicebdClass_AF1 = 0;
            ServicebdClass_AF2 = 1;
            ServicebdClass_AF3 = 2;
            ServicebdClass_AF4 = 3;
            ServicebdClass_BE = 4;
            ServicebdClass_CS6 = 5;
            ServicebdClass_CS7 = 6;
            ServicebdClass_EF = 7;
            ServicebdClass_NOTCONFIG = 8;
          };
          ServicebdClass servicebdClass = 1;
        }
        QosBdDefaultServiceClass qosBdDefaultServiceClass = 1;
      }
      QosBdDefaultServiceClasss qosBdDefaultServiceClasss = 2;
      message QosBdPhbs {
        message QosBdPhb {
          string dsbdName = 1;
          enum MapbdType {
            MapbdType_DSCP = 0;
            MapbdType_INNER_8021P = 1;
            MapbdType_MPLS_EXP = 2;
            MapbdType_NONE = 3;
            MapbdType_OUTER_8021P = 4;
          };
          MapbdType mapbdType = 2;
          enum OperatebdType {
            OperatebdType_DISABLE = 0;
            OperatebdType_ENABLE = 1;
          };
          OperatebdType operatebdType = 3;
        }
        repeated QosBdPhb qosBdPhb = 1;
      }
      QosBdPhbs qosBdPhbs = 3;
      message QosBdPolicyApplys {
        message QosBdPolicyApply {
          enum Bddirection {
            Bddirection_INBOUND = 0;
            Bddirection_OUTBOUND = 1;
          };
          Bddirection bddirection = 1;
          enum Bdlayer {
            Bdlayer_ALL = 0;
            Bdlayer_LINK = 1;
            Bdlayer_MPLS = 2;
            Bdlayer_NONE = 3;
          };
          Bdlayer bdlayer = 2;
          string bdpolicyName = 3;
          message QosBdActSqStats {
            message QosBdActSqStat {
              string bdifName = 1;
              uint32 bufTotal = 2;
              uint32 bufUsed = 3;
              string classifierName = 4;
              uint64 dropByteRate = 5;
              uint64 dropBytes = 6;
              uint64 dropPackets = 7;
              uint64 dropPktRate = 8;
              uint64 passByteRate = 9;
              uint64 passBytes = 10;
              uint64 passPackets = 11;
              uint64 passPktRate = 12;
              enum ServiceClass {
                ServiceClass_AF1 = 0;
                ServiceClass_AF2 = 1;
                ServiceClass_AF3 = 2;
                ServiceClass_AF4 = 3;
                ServiceClass_BE = 4;
                ServiceClass_CS6 = 5;
                ServiceClass_CS7 = 6;
                ServiceClass_EF = 7;
                ServiceClass_TOTAL = 8;
              };
              ServiceClass serviceClass = 13;
              string slotIdPath = 14;
            }
            repeated QosBdActSqStat qosBdActSqStat = 1;
          }
          QosBdActSqStats qosBdActSqStats = 4;
          message QosBdPolicyStats {
            message QosBdPolicyStat {
              string bdapplyTime = 1;
              string bdifName = 2;
              uint64 bdmatchByteRate = 3;
              uint64 bdmatchBytes = 4;
              uint64 bdmatchDropBytes = 5;
              uint64 bdmatchDropBytesRate = 6;
              uint64 bdmatchDropPkts = 7;
              uint64 bdmatchDropPktsRate = 8;
              uint64 bdmatchPackets = 9;
              uint64 bdmatchPassBytes = 10;
              uint64 bdmatchPassBytesRate = 11;
              uint64 bdmatchPassPkts = 12;
              uint64 bdmatchPassPktsRate = 13;
              uint64 bdmatchPktRate = 14;
              uint64 bdmissBytes = 15;
              uint64 bdmissBytesRate = 16;
              uint64 bdmissPackets = 17;
              uint64 bdmissPktsRate = 18;
              bool bdstatClearFlag = 19;
              string bdstatClearTime = 20;
              string bdstatEnableTime = 21;
              message QosBdClassifierStats {
                message QosBdClassifierStat {
                  uint64 bdcarBytes = 1;
                  uint64 bdcarBytesRate = 2;
                  uint64 bdcarDropBytes = 3;
                  uint64 bdcarDropBytesRate = 4;
                  uint64 bdcarDropPkts = 5;
                  uint64 bdcarDropPktsRate = 6;
                  uint64 bdcarGBytes = 7;
                  uint64 bdcarGBytesRate = 8;
                  uint64 bdcarGPkts = 9;
                  uint64 bdcarGPktsRate = 10;
                  uint64 bdcarPackets = 11;
                  uint64 bdcarPassBytes = 12;
                  uint64 bdcarPassBytesRate = 13;
                  uint64 bdcarPassPkts = 14;
                  uint64 bdcarPassPktsRate = 15;
                  uint64 bdcarPktsRate = 16;
                  uint64 bdcarRBytes = 17;
                  uint64 bdcarRBytesRate = 18;
                  uint64 bdcarRPkts = 19;
                  uint64 bdcarRPktsRate = 20;
                  uint64 bdcarYBytes = 21;
                  uint64 bdcarYBytesRate = 22;
                  uint64 bdcarYPkts = 23;
                  uint64 bdcarYPktsRate = 24;
                  string bdclassifierName = 25;
                  uint64 bdfilterBytes = 26;
                  uint64 bdfilterBytesRate = 27;
                  uint64 bdfilterPackets = 28;
                  uint64 bdfilterPktsRate = 29;
                  uint64 bdmatchByteRt = 30;
                  uint64 bdmatchBytes = 31;
                  uint64 bdmatchDropBytes = 32;
                  uint64 bdmatchDropBytesRate = 33;
                  uint64 bdmatchDropPackets = 34;
                  uint64 bdmatchDropPktsRate = 35;
                  uint64 bdmatchPackets = 36;
                  uint64 bdmatchPassBytes = 37;
                  uint64 bdmatchPassBytesRate = 38;
                  uint64 bdmatchPassPackets = 39;
                  uint64 bdmatchPassPktsRate = 40;
                  uint64 bdmatchPktRt = 41;
                  uint64 bdurpfDropBytes = 42;
                  uint64 bdurpfDropBytesRate = 43;
                  uint64 bdurpfDropPackets = 44;
                  uint64 bdurpfDropPktsRate = 45;
                  uint64 broadcastSuppressDropBytes = 46;
                  uint64 broadcastSuppressDropBytesRate = 47;
                  uint64 broadcastSuppressDropPkts = 48;
                  uint64 broadcastSuppressDropPktsRate = 49;
                  uint64 broadcastSuppressPassBytes = 50;
                  uint64 broadcastSuppressPassBytesRate = 51;
                  uint64 broadcastSuppressPassPkts = 52;
                  uint64 broadcastSuppressPassPktsRate = 53;
                  uint64 multicastSuppressDropBytes = 54;
                  uint64 multicastSuppressDropBytesRate = 55;
                  uint64 multicastSuppressDropPkts = 56;
                  uint64 multicastSuppressDropPktsRate = 57;
                  uint64 multicastSuppressPassBytes = 58;
                  uint64 multicastSuppressPassBytesRate = 59;
                  uint64 multicastSuppressPassPkts = 60;
                  uint64 multicastSuppressPassPktsRate = 61;
                  uint64 unknowUniSuppressDropBytes = 62;
                  uint64 unknowUniSuppressDropBytesRate = 63;
                  uint64 unknowUniSuppressDropPkts = 64;
                  uint64 unknowUniSuppressDropPktsRate = 65;
                  uint64 unknowUniSuppressPassBytes = 66;
                  uint64 unknowUniSuppressPassBytesRate = 67;
                  uint64 unknowUniSuppressPassPkts = 68;
                  uint64 unknowUniSuppressPassPktsRate = 69;
                }
                repeated QosBdClassifierStat qosBdClassifierStat = 1;
              }
              QosBdClassifierStats qosBdClassifierStats = 22;
            }
            repeated QosBdPolicyStat qosBdPolicyStat = 1;
          }
          QosBdPolicyStats qosBdPolicyStats = 5;
        }
        repeated QosBdPolicyApply qosBdPolicyApply = 1;
      }
      QosBdPolicyApplys qosBdPolicyApplys = 4;
      message QosBdTrusts {
        message QosBdTrust {
          enum DirectbdType {
            DirectbdType_IN_OUTBOUND = 0;
            DirectbdType_INBOUND = 1;
            DirectbdType_OUTBOUND = 2;
          };
          DirectbdType directbdType = 1;
          string dsbdName = 2;
          enum TrustbdType {
            TrustbdType_X_8021P = 0;
            TrustbdType_DS = 1;
            TrustbdType_INNER_8021P = 2;
            TrustbdType_OUTER_8021P = 3;
          };
          TrustbdType trustbdType = 3;
        }
        repeated QosBdTrust qosBdTrust = 1;
      }
      QosBdTrusts qosBdTrusts = 5;
      message QosBdVxlanCarDisables {
        message QosBdVxlanCarDisable {
          string disableSlot = 1;
          enum ExcludeMode {
            ExcludeMode_EXCLUDE = 0;
            ExcludeMode_NON_EXCLUDE = 1;
          };
          ExcludeMode excludeMode = 2;
        }
        repeated QosBdVxlanCarDisable qosBdVxlanCarDisable = 1;
      }
      QosBdVxlanCarDisables qosBdVxlanCarDisables = 6;
      message QosBdVxlanPhbs {
        message QosBdVxlanPhb {
          string dsbdName = 1;
        }
        QosBdVxlanPhb qosBdVxlanPhb = 1;
      }
      QosBdVxlanPhbs qosBdVxlanPhbs = 7;
      message QosBdVxlanPolicyApplys {
        message QosBdVxlanPolicyApply {
          enum Bddirection {
            Bddirection_INBOUND = 0;
            Bddirection_OUTBOUND = 1;
          };
          Bddirection bddirection = 1;
          enum Bdlayer {
            Bdlayer_LINK = 0;
            Bdlayer_NONE = 1;
          };
          Bdlayer bdlayer = 2;
          string bdpolicyName = 3;
          message QosBdVxlanPolicyStats {
            message QosBdVxlanPolicyStat {
              string bdapplyTime = 1;
              uint64 bdmatchByteRate = 2;
              uint64 bdmatchBytes = 3;
              uint64 bdmatchDropBytes = 4;
              uint64 bdmatchDropBytesRate = 5;
              uint64 bdmatchDropPkts = 6;
              uint64 bdmatchDropPktsRate = 7;
              uint64 bdmatchPackets = 8;
              uint64 bdmatchPassBytes = 9;
              uint64 bdmatchPassBytesRate = 10;
              uint64 bdmatchPassPkts = 11;
              uint64 bdmatchPassPktsRate = 12;
              uint64 bdmatchPktRate = 13;
              uint64 bdmissBytes = 14;
              uint64 bdmissBytesRate = 15;
              uint64 bdmissPackets = 16;
              uint64 bdmissPktsRate = 17;
              bool bdstatClearFlag = 18;
              string bdstatClearTime = 19;
              string bdstatEnableTime = 20;
              message QosBdVxlanClassifierStats {
                message QosBdVxlanClassifierStat {
                  uint64 bdcarBytes = 1;
                  uint64 bdcarBytesRate = 2;
                  uint64 bdcarDropBytes = 3;
                  uint64 bdcarDropBytesRate = 4;
                  uint64 bdcarDropPkts = 5;
                  uint64 bdcarDropPktsRate = 6;
                  uint64 bdcarGBytes = 7;
                  uint64 bdcarGBytesRate = 8;
                  uint64 bdcarGPkts = 9;
                  uint64 bdcarGPktsRate = 10;
                  uint64 bdcarPackets = 11;
                  uint64 bdcarPassBytes = 12;
                  uint64 bdcarPassBytesRate = 13;
                  uint64 bdcarPassPkts = 14;
                  uint64 bdcarPassPktsRate = 15;
                  uint64 bdcarPktsRate = 16;
                  uint64 bdcarRBytes = 17;
                  uint64 bdcarRBytesRate = 18;
                  uint64 bdcarRPkts = 19;
                  uint64 bdcarRPktsRate = 20;
                  uint64 bdcarYBytes = 21;
                  uint64 bdcarYBytesRate = 22;
                  uint64 bdcarYPkts = 23;
                  uint64 bdcarYPktsRate = 24;
                  string bdclassifierName = 25;
                  uint64 bdfilterBytes = 26;
                  uint64 bdfilterBytesRate = 27;
                  uint64 bdfilterPackets = 28;
                  uint64 bdfilterPktsRate = 29;
                  uint64 bdmatchByteRt = 30;
                  uint64 bdmatchBytes = 31;
                  uint64 bdmatchDropBytes = 32;
                  uint64 bdmatchDropBytesRate = 33;
                  uint64 bdmatchDropPackets = 34;
                  uint64 bdmatchDropPktsRate = 35;
                  uint64 bdmatchPackets = 36;
                  uint64 bdmatchPassBytes = 37;
                  uint64 bdmatchPassBytesRate = 38;
                  uint64 bdmatchPassPackets = 39;
                  uint64 bdmatchPassPktsRate = 40;
                  uint64 bdmatchPktRt = 41;
                  uint64 bdurpfDropBytes = 42;
                  uint64 bdurpfDropBytesRate = 43;
                  uint64 bdurpfDropPackets = 44;
                  uint64 bdurpfDropPktsRate = 45;
                  uint64 broadcastSuppressDropBytes = 46;
                  uint64 broadcastSuppressDropBytesRate = 47;
                  uint64 broadcastSuppressDropPkts = 48;
                  uint64 broadcastSuppressDropPktsRate = 49;
                  uint64 broadcastSuppressPassBytes = 50;
                  uint64 broadcastSuppressPassBytesRate = 51;
                  uint64 broadcastSuppressPassPkts = 52;
                  uint64 broadcastSuppressPassPktsRate = 53;
                  uint64 multicastSuppressDropBytes = 54;
                  uint64 multicastSuppressDropBytesRate = 55;
                  uint64 multicastSuppressDropPkts = 56;
                  uint64 multicastSuppressDropPktsRate = 57;
                  uint64 multicastSuppressPassBytes = 58;
                  uint64 multicastSuppressPassBytesRate = 59;
                  uint64 multicastSuppressPassPkts = 60;
                  uint64 multicastSuppressPassPktsRate = 61;
                  string slotId = 62;
                  uint64 unknowUniSuppressDropBytes = 63;
                  uint64 unknowUniSuppressDropBytesRate = 64;
                  uint64 unknowUniSuppressDropPkts = 65;
                  uint64 unknowUniSuppressDropPktsRate = 66;
                  uint64 unknowUniSuppressPassBytes = 67;
                  uint64 unknowUniSuppressPassBytesRate = 68;
                  uint64 unknowUniSuppressPassPkts = 69;
                  uint64 unknowUniSuppressPassPktsRate = 70;
                }
                repeated QosBdVxlanClassifierStat qosBdVxlanClassifierStat = 1;
              }
              QosBdVxlanClassifierStats qosBdVxlanClassifierStats = 21;
              string slotId = 22;
            }
            repeated QosBdVxlanPolicyStat qosBdVxlanPolicyStat = 1;
          }
          QosBdVxlanPolicyStats qosBdVxlanPolicyStats = 4;
        }
        repeated QosBdVxlanPolicyApply qosBdVxlanPolicyApply = 1;
      }
      QosBdVxlanPolicyApplys qosBdVxlanPolicyApplys = 8;
      message QosBdVxlanTrusts {
        message QosBdVxlanTrust {
          string dsbdName = 1;
          enum TrustbdType {
            TrustbdType_X_8021P = 0;
            TrustbdType_DS = 1;
          };
          TrustbdType trustbdType = 2;
        }
        repeated QosBdVxlanTrust qosBdVxlanTrust = 1;
      }
      QosBdVxlanTrusts qosBdVxlanTrusts = 9;
    }
    repeated QosBDQos qosBDQos = 1;
  }
  QosBDQoss qosBDQoss = 3;
  message QosBaHosts {
    message QosBaHost {
      enum Color {
        Color_GREEN = 0;
        Color_RED = 1;
        Color_YELLOW = 2;
      };
      Color color = 1;
      enum Cosvalue {
        Cosvalue_AF1 = 0;
        Cosvalue_AF2 = 1;
        Cosvalue_AF3 = 2;
        Cosvalue_AF4 = 3;
        Cosvalue_BE = 4;
        Cosvalue_CS6 = 5;
        Cosvalue_CS7 = 6;
        Cosvalue_EF = 7;
        Cosvalue_NOTCONFIG = 8;
      };
      Cosvalue cosvalue = 2;
      uint32 dscpvalue = 3;
    }
    repeated QosBaHost qosBaHost = 1;
  }
  QosBaHosts qosBaHosts = 4;
  message QosBuffers {
    message QosBuffer {
      uint32 bufferValue = 1;
      string ifName = 2;
      string ifPhyName = 3;
      enum QueueType {
        QueueType_AF1 = 0;
        QueueType_AF2 = 1;
        QueueType_AF3 = 2;
        QueueType_AF4 = 3;
        QueueType_BE = 4;
        QueueType_CS6 = 5;
        QueueType_CS7 = 6;
        QueueType_EF = 7;
        QueueType_TOTAL = 8;
      };
      QueueType queueType = 4;
      string slotId = 5;
      uint32 tmId = 6;
    }
    repeated QosBuffer qosBuffer = 1;
  }
  QosBuffers qosBuffers = 5;
  message QosCbQos {
    message QosBehaviors {
      message QosBehavior {
        string behaviorName = 1;
        string description = 2;
        message QosActAclLogs {
          message QosActAclLog {
            enum ActionType {
              ActionType_ACLLOG = 0;
            };
            ActionType actionType = 1;
            enum IsConfigure {
              IsConfigure_ENABLE = 0;
            };
            IsConfigure isConfigure = 2;
          }
          repeated QosActAclLog qosActAclLog = 1;
        }
        QosActAclLogs qosActAclLogs = 3;
        message QosActCarPpss {
          message QosActCarPps {
            enum ActionType {
              ActionType_CAR = 0;
            };
            ActionType actionType = 1;
            uint32 cbs = 2;
            uint32 cir = 3;
            enum ColorAware {
              ColorAware_FALSE = 0;
              ColorAware_TRUE = 1;
            };
            ColorAware colorAware = 4;
            enum GreenAction {
              GreenAction_DISCARD = 0;
              GreenAction_PASS = 1;
            };
            GreenAction greenAction = 5;
            enum GreenColor {
              GreenColor_GREEN = 0;
              GreenColor_RED = 1;
              GreenColor_YELLOW = 2;
            };
            GreenColor greenColor = 6;
            uint32 greenRemarkDscp = 7;
            enum GreenServiceClass {
              GreenServiceClass_AF1 = 0;
              GreenServiceClass_AF2 = 1;
              GreenServiceClass_AF3 = 2;
              GreenServiceClass_AF4 = 3;
              GreenServiceClass_BE = 4;
              GreenServiceClass_CS6 = 5;
              GreenServiceClass_CS7 = 6;
              GreenServiceClass_EF = 7;
              GreenServiceClass_NOTCONFIG = 8;
            };
            GreenServiceClass greenServiceClass = 8;
            enum LimitType {
              LimitType_BPS = 0;
              LimitType_PPS = 1;
            };
            LimitType limitType = 9;
            uint32 pbs = 10;
            uint32 pir = 11;
            enum RedAction {
              RedAction_DISCARD = 0;
              RedAction_PASS = 1;
            };
            RedAction redAction = 12;
            enum RedColor {
              RedColor_GREEN = 0;
              RedColor_RED = 1;
              RedColor_YELLOW = 2;
            };
            RedColor redColor = 13;
            uint32 redRemarkDscp = 14;
            enum RedServiceClass {
              RedServiceClass_AF1 = 0;
              RedServiceClass_AF2 = 1;
              RedServiceClass_AF3 = 2;
              RedServiceClass_AF4 = 3;
              RedServiceClass_BE = 4;
              RedServiceClass_CS6 = 5;
              RedServiceClass_CS7 = 6;
              RedServiceClass_EF = 7;
              RedServiceClass_NOTCONFIG = 8;
            };
            RedServiceClass redServiceClass = 15;
            enum YellowAction {
              YellowAction_DISCARD = 0;
              YellowAction_PASS = 1;
            };
            YellowAction yellowAction = 16;
            enum YellowColor {
              YellowColor_GREEN = 0;
              YellowColor_RED = 1;
              YellowColor_YELLOW = 2;
            };
            YellowColor yellowColor = 17;
            uint32 yellowRemarkDscp = 18;
            enum YellowServiceClass {
              YellowServiceClass_AF1 = 0;
              YellowServiceClass_AF2 = 1;
              YellowServiceClass_AF3 = 2;
              YellowServiceClass_AF4 = 3;
              YellowServiceClass_BE = 4;
              YellowServiceClass_CS6 = 5;
              YellowServiceClass_CS7 = 6;
              YellowServiceClass_EF = 7;
              YellowServiceClass_NOTCONFIG = 8;
            };
            YellowServiceClass yellowServiceClass = 19;
          }
          repeated QosActCarPps qosActCarPps = 1;
        }
        QosActCarPpss qosActCarPpss = 4;
        message QosActCars {
          message QosActCar {
            enum ActionType {
              ActionType_CAR = 0;
            };
            ActionType actionType = 1;
            int32 adjust = 2;
            uint32 cbs = 3;
            uint32 cir = 4;
            enum ColorAware {
              ColorAware_FALSE = 0;
              ColorAware_TRUE = 1;
            };
            ColorAware colorAware = 5;
            enum GreenAction {
              GreenAction_DISCARD = 0;
              GreenAction_PASS = 1;
            };
            GreenAction greenAction = 6;
            enum GreenColor {
              GreenColor_GREEN = 0;
              GreenColor_RED = 1;
              GreenColor_YELLOW = 2;
            };
            GreenColor greenColor = 7;
            uint32 greenRemarkDscp = 8;
            enum GreenServiceClass {
              GreenServiceClass_AF1 = 0;
              GreenServiceClass_AF2 = 1;
              GreenServiceClass_AF3 = 2;
              GreenServiceClass_AF4 = 3;
              GreenServiceClass_BE = 4;
              GreenServiceClass_CS6 = 5;
              GreenServiceClass_CS7 = 6;
              GreenServiceClass_EF = 7;
              GreenServiceClass_NOTCONFIG = 8;
            };
            GreenServiceClass greenServiceClass = 9;
            enum LimitType {
              LimitType_BPS = 0;
              LimitType_PPS = 1;
            };
            LimitType limitType = 10;
            uint32 pbs = 11;
            uint32 pir = 12;
            enum RedAction {
              RedAction_DISCARD = 0;
              RedAction_PASS = 1;
            };
            RedAction redAction = 13;
            enum RedColor {
              RedColor_GREEN = 0;
              RedColor_RED = 1;
              RedColor_YELLOW = 2;
            };
            RedColor redColor = 14;
            uint32 redRemarkDscp = 15;
            enum RedServiceClass {
              RedServiceClass_AF1 = 0;
              RedServiceClass_AF2 = 1;
              RedServiceClass_AF3 = 2;
              RedServiceClass_AF4 = 3;
              RedServiceClass_BE = 4;
              RedServiceClass_CS6 = 5;
              RedServiceClass_CS7 = 6;
              RedServiceClass_EF = 7;
              RedServiceClass_NOTCONFIG = 8;
            };
            RedServiceClass redServiceClass = 16;
            enum YellowAction {
              YellowAction_DISCARD = 0;
              YellowAction_PASS = 1;
            };
            YellowAction yellowAction = 17;
            enum YellowColor {
              YellowColor_GREEN = 0;
              YellowColor_RED = 1;
              YellowColor_YELLOW = 2;
            };
            YellowColor yellowColor = 18;
            uint32 yellowRemarkDscp = 19;
            enum YellowServiceClass {
              YellowServiceClass_AF1 = 0;
              YellowServiceClass_AF2 = 1;
              YellowServiceClass_AF3 = 2;
              YellowServiceClass_AF4 = 3;
              YellowServiceClass_BE = 4;
              YellowServiceClass_CS6 = 5;
              YellowServiceClass_CS7 = 6;
              YellowServiceClass_EF = 7;
              YellowServiceClass_NOTCONFIG = 8;
            };
            YellowServiceClass yellowServiceClass = 20;
          }
          repeated QosActCar qosActCar = 1;
        }
        QosActCars qosActCars = 5;
        message QosActFilters {
          message QosActFilter {
            enum ActionType {
              ActionType_FILTER = 0;
            };
            ActionType actionType = 1;
            enum Filter {
              Filter_DENY = 0;
              Filter_PERMIT = 1;
            };
            Filter filter = 2;
          }
          QosActFilter qosActFilter = 1;
        }
        QosActFilters qosActFilters = 6;
        message QosActIncPris {
          message QosActIncPri {
            enum Priority {
              Priority_INCPRI = 0;
            };
            Priority priority = 1;
          }
          QosActIncPri qosActIncPri = 1;
        }
        QosActIncPris qosActIncPris = 7;
        message QosActL2Suppres {
          message QosActL2Suppre {
            uint32 cbs = 1;
            uint32 cir = 2;
            enum GreenAction {
              GreenAction_DISCARD = 0;
              GreenAction_PASS = 1;
            };
            GreenAction greenAction = 3;
            enum GreenColor {
              GreenColor_GREEN = 0;
              GreenColor_RED = 1;
              GreenColor_YELLOW = 2;
            };
            GreenColor greenColor = 4;
            enum GreenServiceClass {
              GreenServiceClass_AF1 = 0;
              GreenServiceClass_AF2 = 1;
              GreenServiceClass_AF3 = 2;
              GreenServiceClass_AF4 = 3;
              GreenServiceClass_BE = 4;
              GreenServiceClass_CS6 = 5;
              GreenServiceClass_CS7 = 6;
              GreenServiceClass_EF = 7;
              GreenServiceClass_NOTCONFIG = 8;
            };
            GreenServiceClass greenServiceClass = 5;
            enum RedAction {
              RedAction_DISCARD = 0;
              RedAction_PASS = 1;
            };
            RedAction redAction = 6;
            enum RedColor {
              RedColor_GREEN = 0;
              RedColor_RED = 1;
              RedColor_YELLOW = 2;
            };
            RedColor redColor = 7;
            enum RedServiceClass {
              RedServiceClass_AF1 = 0;
              RedServiceClass_AF2 = 1;
              RedServiceClass_AF3 = 2;
              RedServiceClass_AF4 = 3;
              RedServiceClass_BE = 4;
              RedServiceClass_CS6 = 5;
              RedServiceClass_CS7 = 6;
              RedServiceClass_EF = 7;
              RedServiceClass_NOTCONFIG = 8;
            };
            RedServiceClass redServiceClass = 8;
            enum SuppressType {
              SuppressType_BROADCAST_SUPPRESSION = 0;
              SuppressType_MULTICAST_SUPPRESSION = 1;
              SuppressType_UNKNOWN_UNICAST_SUPPRESSION = 2;
            };
            SuppressType suppressType = 9;
          }
          repeated QosActL2Suppre qosActL2Suppre = 1;
        }
        QosActL2Suppres qosActL2Suppres = 8;
        message QosActLoads {
          message QosActLoad {
            enum ActionType {
              ActionType_LOADBALANCE = 0;
            };
            ActionType actionType = 1;
            enum BalanceType {
              BalanceType_FLOW = 0;
              BalanceType_FLOWL2 = 1;
              BalanceType_FLOWL3 = 2;
              BalanceType_PACKET = 3;
            };
            BalanceType balanceType = 2;
          }
          repeated QosActLoad qosActLoad = 1;
        }
        QosActLoads qosActLoads = 9;
        message QosActMirCars {
          message QosActMirCar {
            uint32 cbs = 1;
            uint32 cir = 2;
            uint32 pbs = 3;
            uint32 pir = 4;
          }
          QosActMirCar qosActMirCar = 1;
        }
        QosActMirCars qosActMirCars = 10;
        message QosActNsSamplers {
          message QosActNsSampler {
            enum FlowType {
              FlowType_IPV4 = 0;
              FlowType_IPV6 = 1;
            };
            FlowType flowType = 1;
            enum SampleType {
              SampleType_FIXPACKETS = 0;
              SampleType_FIXTIME = 1;
              SampleType_RANDOMPACKETS = 2;
            };
            SampleType sampleType = 2;
            uint32 sampleValue = 3;
          }
          repeated QosActNsSampler qosActNsSampler = 1;
        }
        QosActNsSamplers qosActNsSamplers = 11;
        message QosActPortMirrors {
          message QosActPortMirror {
            enum ActionType {
              ActionType_PORTMIRROR = 0;
            };
            ActionType actionType = 1;
            enum Enable {
              Enable_ENABLE = 0;
            };
            Enable enable = 2;
          }
          repeated QosActPortMirror qosActPortMirror = 1;
        }
        QosActPortMirrors qosActPortMirrors = 12;
        message QosActRdrLsps {
          message QosActRdrLsp {
            enum ActionType {
              ActionType_REDIRECTLSP = 0;
            };
            ActionType actionType = 1;
            enum ConfigType {
              ConfigType_DESTADDR = 0;
              ConfigType_INTERFACE = 1;
              ConfigType_NHP = 2;
              ConfigType_SECONDARY = 3;
            };
            ConfigType configType = 2;
            string destAddr = 3;
            string ifName = 4;
            string nextHop = 5;
            enum Secondary {
              Secondary_ENABLE = 0;
            };
            Secondary secondary = 6;
          }
          repeated QosActRdrLsp qosActRdrLsp = 1;
        }
        QosActRdrLsps qosActRdrLsps = 13;
        message QosActRdrMhp6S {
          message QosActRdrMhp6 {
            bool filterBlackhole = 1;
            bool filterDefault = 2;
            bool hroute = 3;
            bool loadBalance = 4;
            message QosRdrNhp6S {
              message QosRdrNhp6 {
                string ifName = 1;
                string nextHop = 2;
                string nqaAdminName = 3;
                string nqaInstance = 4;
                string vpnName = 5;
              }
              repeated QosRdrNhp6 qosRdrNhp6 = 1;
            }
            QosRdrNhp6S qosRdrNhp6s = 5;
            enum RdrType {
              RdrType_BACKUP = 0;
              RdrType_BACKUPNQA = 1;
              RdrType_BACKUPVPN = 2;
              RdrType_BACKUPVPNNQA = 3;
              RdrType_DIRECT = 4;
            };
            RdrType rdrType = 6;
            bool routeforward = 7;
          }
          repeated QosActRdrMhp6 qosActRdrMhp6 = 1;
        }
        QosActRdrMhp6S qosActRdrMhp6s = 14;
        message QosActRdrMhps {
          message QosActRdrMhp {
            bool drop = 1;
            bool filterBlackhole = 2;
            bool filterDefault = 3;
            bool hroute = 4;
            bool loadBalance = 5;
            message QosRdrNhps {
              message QosRdrNhp {
                string ifName = 1;
                string nextHop = 2;
                string nqaAdminName = 3;
                string nqaInstance = 4;
                string vpnName = 5;
              }
              repeated QosRdrNhp qosRdrNhp = 1;
            }
            QosRdrNhps qosRdrNhps = 6;
            enum RdrType {
              RdrType_BACKUP = 0;
              RdrType_BACKUPNQA = 1;
              RdrType_BACKUPVPN = 2;
              RdrType_BACKUPVPNNQA = 3;
              RdrType_DIRECT = 4;
            };
            RdrType rdrType = 7;
            bool routeforward = 8;
            bool sipHash = 9;
          }
          repeated QosActRdrMhp qosActRdrMhp = 1;
        }
        QosActRdrMhps qosActRdrMhps = 15;
        message QosActRdrMldpTnls {
          message QosActRdrMldpTnl {
            enum ActionType {
              ActionType_REDIRECTMLDPTUNNEL = 0;
            };
            ActionType actionType = 1;
            string mldpTunnelName = 2;
          }
          repeated QosActRdrMldpTnl qosActRdrMldpTnl = 1;
        }
        QosActRdrMldpTnls qosActRdrMldpTnls = 16;
        message QosActRdrNhp6S {
          message QosActRdrNhp6 {
            bool filterBlackhole = 1;
            bool filterDefault = 2;
            bool hroute = 3;
            string ifName = 4;
            string nextHop = 5;
            string nqaAdminName = 6;
            string nqaInstance = 7;
            enum RdrType {
              RdrType_BACKUP = 0;
              RdrType_BACKUPNQA = 1;
              RdrType_BACKUPVPN = 2;
              RdrType_BACKUPVPNNQA = 3;
              RdrType_DIRECT = 4;
            };
            RdrType rdrType = 8;
            bool routeforward = 9;
            string vpnName = 10;
          }
          repeated QosActRdrNhp6 qosActRdrNhp6 = 1;
        }
        QosActRdrNhp6S qosActRdrNhp6s = 17;
        message QosActRdrNhps {
          message QosActRdrNhp {
            bool drop = 1;
            bool filterBlackhole = 2;
            bool filterDefault = 3;
            bool hroute = 4;
            string ifName = 5;
            string nextHop = 6;
            string nqaAdminName = 7;
            string nqaInstance = 8;
            bool public = 9;
            enum RdrType {
              RdrType_BACKUP = 0;
              RdrType_BACKUPNQA = 1;
              RdrType_BACKUPVPN = 2;
              RdrType_BACKUPVPNNQA = 3;
              RdrType_DIRECT = 4;
            };
            RdrType rdrType = 10;
            bool routeforward = 11;
            string vpnName = 12;
          }
          repeated QosActRdrNhp qosActRdrNhp = 1;
        }
        QosActRdrNhps qosActRdrNhps = 18;
        message QosActRdrPolicys {
          message QosActRdrPolicy {
            string policyName = 1;
            enum QosHierarchicalCar {
              QosHierarchicalCar_DISABLE = 0;
              QosHierarchicalCar_ENABLE = 1;
            };
            QosHierarchicalCar qosHierarchicalCar = 2;
          }
          repeated QosActRdrPolicy qosActRdrPolicy = 1;
        }
        QosActRdrPolicys qosActRdrPolicys = 19;
        message QosActRdrTnls {
          message QosActRdrTnl {
            enum ActionType {
              ActionType_REDIRECTTUNNEL = 0;
            };
            ActionType actionType = 1;
            string ifName = 2;
          }
          repeated QosActRdrTnl qosActRdrTnl = 1;
        }
        QosActRdrTnls qosActRdrTnls = 20;
        message QosActRdrVpns {
          message QosActRdrVpn {
            enum ActionType {
              ActionType_REDIRECTVPNGROUP = 0;
            };
            ActionType actionType = 1;
            string vpnGroupName = 2;
          }
          repeated QosActRdrVpn qosActRdrVpn = 1;
        }
        QosActRdrVpns qosActRdrVpns = 21;
        message QosActRemarks {
          message QosActRemark {
            enum ActionType {
              ActionType_REMARK8021P = 0;
              ActionType_REMARKINNER8021P = 1;
              ActionType_REMARKIPDF = 2;
              ActionType_REMARKIPPRECEDENCE = 3;
              ActionType_REMARKIPV4DSCP = 4;
              ActionType_REMARKIPV6DSCP = 5;
              ActionType_REMARKMPLSEXP = 6;
              ActionType_REMARKOUTER8021P = 7;
              ActionType_REMARKTOS = 8;
              ActionType_REMARKTTL = 9;
            };
            ActionType actionType = 1;
            uint32 remarkValue = 2;
          }
          repeated QosActRemark qosActRemark = 1;
        }
        QosActRemarks qosActRemarks = 22;
        message QosActSrvClss {
          message QosActSrvCls {
            enum ActionType {
              ActionType_SERVICECLASS = 0;
            };
            ActionType actionType = 1;
            enum Color {
              Color_GREEN = 0;
              Color_RED = 1;
              Color_YELLOW = 2;
            };
            Color color = 2;
            enum RemarkFlag {
              RemarkFlag_DISABLE = 0;
              RemarkFlag_ENABLE = 1;
            };
            RemarkFlag remarkFlag = 3;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_NOTCONFIG = 8;
            };
            ServiceClass serviceClass = 4;
          }
          repeated QosActSrvCls qosActSrvCls = 1;
        }
        QosActSrvClss qosActSrvClss = 23;
        message QosActSysLogs {
          message QosActSysLog {
            enum StatisticsType {
              StatisticsType_BPS = 0;
              StatisticsType_PPS = 1;
            };
            StatisticsType statisticsType = 1;
            uint32 threshold = 2;
          }
          QosActSysLog qosActSysLog = 1;
        }
        QosActSysLogs qosActSysLogs = 24;
        message QosActUrpfs {
          message QosActUrpf {
            enum ActionType {
              ActionType_URPF = 0;
            };
            ActionType actionType = 1;
            enum AllowDefault {
              AllowDefault_DISABLE = 0;
              AllowDefault_ENABLE = 1;
            };
            AllowDefault allowDefault = 2;
            enum CheckType {
              CheckType_LOOSE = 0;
              CheckType_STRICT = 1;
            };
            CheckType checkType = 3;
          }
          repeated QosActUrpf qosActUrpf = 1;
        }
        QosActUrpfs qosActUrpfs = 25;
        message QosActUserQueues {
          message QosActUserQueue {
            uint32 cir = 1;
            string flowMappingName = 2;
            string flowQueueName = 3;
            string gqName = 4;
            uint32 pir = 5;
            string templateName = 6;
          }
          QosActUserQueue qosActUserQueue = 1;
        }
        QosActUserQueues qosActUserQueues = 26;
      }
      repeated QosBehavior qosBehavior = 1;
    }
    QosBehaviors qosBehaviors = 1;
    message QosClassifiers {
      message QosClassifier {
        uint32 classifierID = 1;
        string classifierName = 2;
        string description = 3;
        enum Operator {
          Operator_AND = 0;
          Operator_OR = 1;
        };
        Operator operator = 4;
        message QosLocalID6S {
          message QosLocalID6 {
            uint32 qosLocalId6 = 1;
          }
          repeated QosLocalID6 qosLocalID6 = 1;
        }
        QosLocalID6S qosLocalID6s = 5;
        message QosLocalIDs {
          message QosLocalID {
            uint32 qosLocalId = 1;
          }
          repeated QosLocalID qosLocalID = 1;
        }
        QosLocalIDs qosLocalIDs = 6;
        message QosRuleAcl6S {
          message QosRuleAcl6 {
            string aclName = 1;
          }
          repeated QosRuleAcl6 qosRuleAcl6 = 1;
        }
        QosRuleAcl6S qosRuleAcl6s = 7;
        message QosRuleAcls {
          message QosRuleAcl {
            string aclName = 1;
          }
          repeated QosRuleAcl qosRuleAcl = 1;
        }
        QosRuleAcls qosRuleAcls = 8;
        message QosRuleAnys {
          message QosRuleAny {
            enum ProtoFamily {
              ProtoFamily_IPV4 = 0;
              ProtoFamily_IPV6 = 1;
            };
            ProtoFamily protoFamily = 1;
          }
          repeated QosRuleAny qosRuleAny = 1;
        }
        QosRuleAnys qosRuleAnys = 9;
        message QosRuleIPv6Addrs {
          message QosRuleIPv6Addr {
            enum AddressType {
              AddressType_DESTINATION = 0;
              AddressType_SOURCE = 1;
            };
            AddressType addressType = 1;
            string ipAddress6 = 2;
            uint32 prefixLen = 3;
          }
          repeated QosRuleIPv6Addr qosRuleIPv6Addr = 1;
        }
        QosRuleIPv6Addrs qosRuleIPv6Addrs = 10;
        message QosRuleMacs {
          message QosRuleMac {
            string macAddr = 1;
            enum MacType {
              MacType_DESTINATION = 0;
              MacType_SOURCE = 1;
            };
            MacType macType = 2;
          }
          repeated QosRuleMac qosRuleMac = 1;
        }
        QosRuleMacs qosRuleMacs = 11;
        message QosRulePrioritys {
          message QosRulePriority {
            enum PriorityType {
              PriorityType_X_8021P = 0;
              PriorityType_DSCP = 1;
              PriorityType_DSCP6 = 2;
              PriorityType_IPPRECEDENCE = 3;
              PriorityType_MPLSEXP = 4;
              PriorityType_SERVICE_CLASS = 5;
            };
            PriorityType priorityType = 1;
            uint32 priorityValue = 2;
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
            };
            ServiceClass serviceClass = 3;
          }
          repeated QosRulePriority qosRulePriority = 1;
        }
        QosRulePrioritys qosRulePrioritys = 12;
        message QosRuleProto6S {
          message QosRuleProto6 {
            enum ProtoFamily {
              ProtoFamily_IPV6 = 0;
            };
            ProtoFamily protoFamily = 1;
            uint32 protocol = 2;
          }
          repeated QosRuleProto6 qosRuleProto6 = 1;
        }
        QosRuleProto6S qosRuleProto6s = 13;
        message QosRuleTcpFlags {
          message QosRuleTcpFlag {
            enum BitMatchType {
              BitMatchType_ACK = 0;
              BitMatchType_CWR = 1;
              BitMatchType_ECE = 2;
              BitMatchType_ESTABLISHED = 3;
              BitMatchType_FIN = 4;
              BitMatchType_NOTCONFIG = 5;
              BitMatchType_NS = 6;
              BitMatchType_PSH = 7;
              BitMatchType_RST = 8;
              BitMatchType_SYN = 9;
              BitMatchType_URG = 10;
            };
            BitMatchType bitMatchType = 1;
            uint32 tcpFlag = 2;
            uint32 tcpFlagMask = 3;
          }
          repeated QosRuleTcpFlag qosRuleTcpFlag = 1;
        }
        QosRuleTcpFlags qosRuleTcpFlags = 14;
      }
      repeated QosClassifier qosClassifier = 1;
    }
    QosClassifiers qosClassifiers = 2;
    message QosMqcStatistics {
      message QosMqcStatistic {
        uint32 qosCreatedTb = 1;
        uint32 qosCreatedTc = 2;
        uint32 qosCreatedTp = 3;
        uint32 qosFreeTb = 4;
        uint32 qosFreeTc = 5;
        uint32 qosFreeTp = 6;
        uint32 qosTotalTb = 7;
        uint32 qosTotalTc = 8;
        uint32 qosTotalTp = 9;
      }
      repeated QosMqcStatistic qosMqcStatistic = 1;
    }
    QosMqcStatistics qosMqcStatistics = 3;
    message QosPolicys {
      message QosPolicy {
        string description = 1;
        uint32 policyID = 2;
        string policyName = 3;
        message QosPolicyNodeNewModes {
          message QosPolicyNodeNewMode {
            string behaviorName = 1;
            string classifierName = 2;
            string groupName = 3;
            enum GroupType {
              GroupType_SERVICEGROUP = 0;
              GroupType_USERGROUP = 1;
            };
            GroupType groupType = 4;
            uint32 precedence = 5;
            enum StreamDirection {
              StreamDirection_DESTINATION = 0;
              StreamDirection_SOURCE = 1;
            };
            StreamDirection streamDirection = 6;
          }
          repeated QosPolicyNodeNewMode qosPolicyNodeNewMode = 1;
        }
        QosPolicyNodeNewModes qosPolicyNodeNewModes = 4;
        message QosPolicyNodes {
          message QosPolicyNode {
            string behaviorName = 1;
            string classifierName = 2;
            uint32 priority = 3;
          }
          repeated QosPolicyNode qosPolicyNode = 1;
        }
        QosPolicyNodes qosPolicyNodes = 5;
        enum ShareMode {
          ShareMode_DISABLE = 0;
          ShareMode_ENABLE = 1;
        };
        ShareMode shareMode = 6;
        enum StatFlag {
          StatFlag_DISABLE = 0;
          StatFlag_ENABLE = 1;
        };
        StatFlag statFlag = 7;
        uint32 step = 8;
        message V6QosLocalIDEns {
          message V6QosLocalIDEn {
            uint32 v6QosLocalIDEn = 1;
          }
          repeated V6QosLocalIDEn v6QosLocalIDEn = 1;
        }
        V6QosLocalIDEns v6QosLocalIDEns = 9;
        message V6QosVniEns {
          message V6QosVniEn {
            uint32 v6QosVniEn = 1;
          }
          repeated V6QosVniEn v6QosVniEn = 1;
        }
        V6QosVniEns v6QosVniEns = 10;
      }
      repeated QosPolicy qosPolicy = 1;
    }
    QosPolicys qosPolicys = 4;
    message QosVpnGroups {
      message QosVpnGroup {
        message QosVpnInstances {
          message QosVpnInstance {
            string vrfName = 1;
          }
          repeated QosVpnInstance qosVpnInstance = 1;
        }
        QosVpnInstances qosVpnInstances = 1;
        string vpnGroupName = 2;
      }
      repeated QosVpnGroup qosVpnGroup = 1;
    }
    QosVpnGroups qosVpnGroups = 5;
  }
  QosCbQos qosCbQos = 6;
  message QosChannelProfileTmps {
    message QosChannelProfileTmp {
      string channelName = 1;
      message QosChannelProfileCfgs {
        message QosChannelProfileCfg {
          uint32 uiBandwidthValue = 1;
          uint32 uiChnnlId = 2;
          uint32 uiQuantity = 3;
        }
        repeated QosChannelProfileCfg qosChannelProfileCfg = 1;
      }
      QosChannelProfileCfgs qosChannelProfileCfgs = 2;
    }
    repeated QosChannelProfileTmp qosChannelProfileTmp = 1;
  }
  QosChannelProfileTmps qosChannelProfileTmps = 7;
  message QosDss {
    message QosDs {
      uint32 dsId = 1;
      string dsName = 2;
      message QosAppIfs {
        message QosAppIf {
          enum Direction {
            Direction_IN_OUTBOUND = 0;
            Direction_INBOUND = 1;
            Direction_OUTBOUND = 2;
          };
          Direction direction = 1;
          string ifName = 2;
        }
        repeated QosAppIf qosAppIf = 1;
      }
      QosAppIfs qosAppIfs = 3;
      message QosBas {
        message QosBa {
          enum BaType {
            BaType_X_8021P = 0;
            BaType_IPDSCP = 1;
            BaType_MPLSEXP = 2;
            BaType_USERPRIORITY = 3;
          };
          BaType baType = 1;
          uint32 baValue = 2;
          enum Color {
            Color_GREEN = 0;
            Color_RED = 1;
            Color_YELLOW = 2;
          };
          Color color = 3;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_NOTCONFIG = 8;
          };
          ServiceClass serviceClass = 4;
        }
        repeated QosBa qosBa = 1;
      }
      QosBas qosBas = 4;
      message QosPhbs {
        message QosPhb {
          enum Color {
            Color_GREEN = 0;
            Color_RED = 1;
            Color_YELLOW = 2;
          };
          Color color = 1;
          enum PhbType {
            PhbType_X_8021P = 0;
            PhbType_IPDSCP = 1;
            PhbType_MPLSEXP = 2;
            PhbType_USERPRIORITY = 3;
          };
          PhbType phbType = 2;
          uint32 phbValue = 3;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_NOTCONFIG = 8;
          };
          ServiceClass serviceClass = 4;
        }
        repeated QosPhb qosPhb = 1;
      }
      QosPhbs qosPhbs = 5;
    }
    repeated QosDs qosDs = 1;
  }
  QosDss qosDss = 8;
  message QosEVPLQoss {
    message QosEVPLQos {
      uint32 evplName = 1;
      message QosEvplVxlanPhbs {
        message QosEvplVxlanPhb {
          string dsevplName = 1;
        }
        QosEvplVxlanPhb qosEvplVxlanPhb = 1;
      }
      QosEvplVxlanPhbs qosEvplVxlanPhbs = 2;
      message QosEvplVxlanPolicyApplys {
        message QosEvplVxlanPolicyApply {
          enum Evpldirection {
            Evpldirection_OUTBOUND = 0;
          };
          Evpldirection evpldirection = 1;
          enum Evpllayer {
            Evpllayer_LINK = 0;
            Evpllayer_NONE = 1;
          };
          Evpllayer evpllayer = 2;
          string evplpolicyName = 3;
          message QosEvplVxlanPolicyStats {
            message QosEvplVxlanPolicyStat {
              string evplapplyTime = 1;
              uint64 evplmatchByteRate = 2;
              uint64 evplmatchBytes = 3;
              uint64 evplmatchDropBytes = 4;
              uint64 evplmatchDropBytesRate = 5;
              uint64 evplmatchDropPkts = 6;
              uint64 evplmatchDropPktsRate = 7;
              uint64 evplmatchPackets = 8;
              uint64 evplmatchPassBytes = 9;
              uint64 evplmatchPassBytesRate = 10;
              uint64 evplmatchPassPkts = 11;
              uint64 evplmatchPassPktsRate = 12;
              uint64 evplmatchPktRate = 13;
              uint64 evplmissBytes = 14;
              uint64 evplmissBytesRate = 15;
              uint64 evplmissPackets = 16;
              uint64 evplmissPktsRate = 17;
              bool evplstatClearFlag = 18;
              string evplstatClearTime = 19;
              string evplstatEnableTime = 20;
              message QosEvplVxlanClassifierStats {
                message QosEvplVxlanClassifierStat {
                  string evplclassifierName = 1;
                  uint64 evplmatchByteRt = 2;
                  uint64 evplmatchBytes = 3;
                  uint64 evplmatchDropBytes = 4;
                  uint64 evplmatchDropBytesRate = 5;
                  uint64 evplmatchDropPackets = 6;
                  uint64 evplmatchDropPktsRate = 7;
                  uint64 evplmatchPackets = 8;
                  uint64 evplmatchPassBytes = 9;
                  uint64 evplmatchPassBytesRate = 10;
                  uint64 evplmatchPassPackets = 11;
                  uint64 evplmatchPassPktsRate = 12;
                  uint64 evplmatchPktRt = 13;
                  string slotId = 14;
                }
                repeated QosEvplVxlanClassifierStat qosEvplVxlanClassifierStat = 1;
              }
              QosEvplVxlanClassifierStats qosEvplVxlanClassifierStats = 21;
              string slotId = 22;
            }
            repeated QosEvplVxlanPolicyStat qosEvplVxlanPolicyStat = 1;
          }
          QosEvplVxlanPolicyStats qosEvplVxlanPolicyStats = 4;
        }
        repeated QosEvplVxlanPolicyApply qosEvplVxlanPolicyApply = 1;
      }
      QosEvplVxlanPolicyApplys qosEvplVxlanPolicyApplys = 3;
      message QosEvplVxlanTrusts {
        message QosEvplVxlanTrust {
          string dsevplName = 1;
          enum TrustevplType {
            TrustevplType_X_8021P = 0;
            TrustevplType_DS = 1;
          };
          TrustevplType trustevplType = 2;
        }
        repeated QosEvplVxlanTrust qosEvplVxlanTrust = 1;
      }
      QosEvplVxlanTrusts qosEvplVxlanTrusts = 4;
    }
    repeated QosEVPLQos qosEVPLQos = 1;
  }
  QosEVPLQoss qosEVPLQoss = 9;
  message QosGlobalPolicys {
    message QosGlobalPolicy {
      enum Direction {
        Direction_INBOUND = 0;
        Direction_OUTBOUND = 1;
      };
      Direction direction = 1;
      string policyName = 2;
      message QosGPolicyStats {
        message QosGPolicyStat {
          string applyTime = 1;
          uint64 carBytes = 2;
          uint64 carBytesRate = 3;
          uint64 carPackets = 4;
          uint64 carPktsRate = 5;
          uint64 filterBytes = 6;
          uint64 filterBytesRate = 7;
          uint64 filterPackets = 8;
          uint64 filterPktsRate = 9;
          uint64 matchByteRate = 10;
          uint64 matchBytes = 11;
          uint64 matchDropBytes = 12;
          uint64 matchDropBytesRate = 13;
          uint64 matchDropPkts = 14;
          uint64 matchDropPktsRate = 15;
          uint64 matchPackets = 16;
          uint64 matchPassBytes = 17;
          uint64 matchPassBytesRate = 18;
          uint64 matchPassPkts = 19;
          uint64 matchPassPktsRate = 20;
          uint64 matchPktRate = 21;
          uint64 missBytes = 22;
          uint64 missBytesRate = 23;
          uint64 missPackets = 24;
          uint64 missPktsRate = 25;
          message QosGClassifierStats {
            message QosGClassifierStat {
              uint64 broadcastSuppressDropBytes = 1;
              uint64 broadcastSuppressDropBytesRate = 2;
              uint64 broadcastSuppressDropPkts = 3;
              uint64 broadcastSuppressDropPktsRate = 4;
              uint64 broadcastSuppressPassBytes = 5;
              uint64 broadcastSuppressPassBytesRate = 6;
              uint64 broadcastSuppressPassPkts = 7;
              uint64 broadcastSuppressPassPktsRate = 8;
              uint64 carBytes = 9;
              uint64 carBytesRate = 10;
              uint64 carDropBytes = 11;
              uint64 carDropBytesRate = 12;
              uint64 carDropPkts = 13;
              uint64 carDropPktsRate = 14;
              uint64 carGBytes = 15;
              uint64 carGBytesRate = 16;
              uint64 carGPkts = 17;
              uint64 carGPktsRate = 18;
              uint64 carPackets = 19;
              uint64 carPassBytes = 20;
              uint64 carPassBytesRate = 21;
              uint64 carPassPkts = 22;
              uint64 carPassPktsRate = 23;
              uint64 carPktsRate = 24;
              uint64 carRBytes = 25;
              uint64 carRBytesRate = 26;
              uint64 carRPkts = 27;
              uint64 carRPktsRate = 28;
              uint64 carYBytes = 29;
              uint64 carYBytesRate = 30;
              uint64 carYPkts = 31;
              uint64 carYPktsRate = 32;
              string classifierName = 33;
              uint64 filterBytes = 34;
              uint64 filterBytesRate = 35;
              uint64 filterPackets = 36;
              uint64 filterPktsRate = 37;
              string groupName = 38;
              string groupType = 39;
              uint64 matchByteRt = 40;
              uint64 matchBytes = 41;
              uint64 matchDropBytes = 42;
              uint64 matchDropBytesRate = 43;
              uint64 matchDropPackets = 44;
              uint64 matchDropPktsRate = 45;
              uint64 matchPackets = 46;
              uint64 matchPassBytes = 47;
              uint64 matchPassBytesRate = 48;
              uint64 matchPassPackets = 49;
              uint64 matchPassPktsRate = 50;
              uint64 matchPktRt = 51;
              uint64 multicastSuppressDropBytes = 52;
              uint64 multicastSuppressDropBytesRate = 53;
              uint64 multicastSuppressDropPkts = 54;
              uint64 multicastSuppressDropPktsRate = 55;
              uint64 multicastSuppressPassBytes = 56;
              uint64 multicastSuppressPassBytesRate = 57;
              uint64 multicastSuppressPassPkts = 58;
              uint64 multicastSuppressPassPktsRate = 59;
              string slotId = 60;
              string streamDirection = 61;
              uint64 unknowUniSuppressDropBytes = 62;
              uint64 unknowUniSuppressDropBytesRate = 63;
              uint64 unknowUniSuppressDropPkts = 64;
              uint64 unknowUniSuppressDropPktsRate = 65;
              uint64 unknowUniSuppressPassBytes = 66;
              uint64 unknowUniSuppressPassBytesRate = 67;
              uint64 unknowUniSuppressPassPkts = 68;
              uint64 unknowUniSuppressPassPktsRate = 69;
              uint64 urpfDropBytes = 70;
              uint64 urpfDropBytesRate = 71;
              uint64 urpfDropPackets = 72;
              uint64 urpfDropPktsRate = 73;
            }
            repeated QosGClassifierStat qosGClassifierStat = 1;
          }
          QosGClassifierStats qosGClassifierStats = 26;
          string slotId = 27;
          bool statClearFlag = 28;
          string statClearTime = 29;
          string statEnableTime = 30;
          uint64 urpfBytes = 31;
          uint64 urpfBytesRate = 32;
          uint64 urpfPackets = 33;
          uint64 urpfPktsRate = 34;
        }
        repeated QosGPolicyStat qosGPolicyStat = 1;
      }
      QosGPolicyStats qosGPolicyStats = 3;
      enum UclType {
        UclType_ACL = 0;
        UclType_UCL = 1;
      };
      UclType uclType = 4;
    }
    repeated QosGlobalPolicy qosGlobalPolicy = 1;
  }
  QosGlobalPolicys qosGlobalPolicys = 10;
  message QosGlobalQppbs {
    message QosGlobalQppb {
      enum Value {
        Value_DESTINATION = 0;
        Value_SOURCE = 1;
      };
      Value value = 1;
    }
    repeated QosGlobalQppb qosGlobalQppb = 1;
  }
  QosGlobalQppbs qosGlobalQppbs = 11;
  message QosHardPipeAbilitys {
    message QosHardPipeAbility {
      enum Ability {
        Ability_E = 0;
        Ability_M = 1;
        Ability_N = 2;
        Ability_S = 3;
        Ability_U = 4;
      };
      Ability ability = 1;
      string ifName = 2;
    }
    repeated QosHardPipeAbility qosHardPipeAbility = 1;
  }
  QosHardPipeAbilitys qosHardPipeAbilitys = 12;
  message QosIfQoss {
    message QosIfQos {
      string ifName = 1;
      message QOSProBasInsCfgNodes {
        message QOSProBasInsCfgNode {
          enum AnyOtherType {
            AnyOtherType_NOT_CONFIG = 0;
            AnyOtherType_QINQ = 1;
            AnyOtherType_USER_VLAN = 2;
          };
          AnyOtherType anyOtherType = 1;
          uint32 appPeVlan = 2;
          uint32 ceBeginVlanID = 3;
          uint32 ceEndVlanID = 4;
          enum Direction {
            Direction_ALL = 0;
            Direction_INBOUND = 1;
            Direction_OUTBOUND = 2;
          };
          Direction direction = 5;
          string groupName = 6;
          enum IdentifyType {
            IdentifyType_ACCESS_LINE_ID = 0;
            IdentifyType_CE_VID = 1;
            IdentifyType_NONE = 2;
            IdentifyType_OPTION82 = 3;
            IdentifyType_PE_CE_VID = 4;
            IdentifyType_PE_VID = 5;
            IdentifyType_VLAN_ID = 6;
          };
          IdentifyType identifyType = 7;
          string profileName = 8;
          uint32 sessionLmtNum = 9;
        }
        repeated QOSProBasInsCfgNode qOSProBasInsCfgNode = 1;
      }
      QOSProBasInsCfgNodes qOSProBasInsCfgNodes = 2;
      message QosCvgPcds {
        message QosCvgPcd {
          enum Priority {
            Priority_HIGH = 0;
          };
          Priority priority = 1;
        }
        QosCvgPcd qosCvgPcd = 1;
      }
      QosCvgPcds qosCvgPcds = 3;
      message QosDefSQCirs {
        message QosDefSQCir {
          uint32 cbs = 1;
          uint32 cir = 2;
          enum Direction {
            Direction_OUTBOUND = 0;
          };
          Direction direction = 3;
          uint32 pbs = 4;
          uint32 pir = 5;
          uint32 weight = 6;
        }
        QosDefSQCir qosDefSQCir = 1;
      }
      QosDefSQCirs qosDefSQCirs = 4;
      message QosDefaultServiceClasss {
        message QosDefaultServiceClass {
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_NOTCONFIG = 8;
          };
          ServiceClass serviceClass = 1;
        }
        QosDefaultServiceClass qosDefaultServiceClass = 1;
      }
      QosDefaultServiceClasss qosDefaultServiceClasss = 5;
      message QosDeiEnables {
        message QosDeiEnable {
          enum DeiEnable {
            DeiEnable_ENABLE = 0;
          };
          DeiEnable deiEnable = 1;
          uint32 groupId = 2;
          string vlanId = 3;
        }
        repeated QosDeiEnable qosDeiEnable = 1;
      }
      QosDeiEnables qosDeiEnables = 6;
      message QosDomLnkAdjs {
        message QosDomLnkAdj {
          int32 adjustValue = 1;
        }
        QosDomLnkAdj qosDomLnkAdj = 1;
      }
      QosDomLnkAdjs qosDomLnkAdjs = 7;
      message QosDomLnkAds {
        message QosDomLnkAd {
          enum ModeType {
            ModeType_CELL = 0;
            ModeType_FRAME = 1;
          };
          ModeType modeType = 1;
        }
        QosDomLnkAd qosDomLnkAd = 1;
      }
      QosDomLnkAds qosDomLnkAds = 8;
      message QosDomRespools {
        message QosDomRespool {
          enum Direction {
            Direction_INBOUND = 0;
            Direction_OUTBOUND = 1;
          };
          Direction direction = 1;
          uint32 poolID = 2;
        }
        repeated QosDomRespool qosDomRespool = 1;
      }
      QosDomRespools qosDomRespools = 9;
      message QosGQApps {
        message QosGQApp {
          enum GqDirection {
            GqDirection_INBOUND = 0;
            GqDirection_OUTBOUND = 1;
          };
          GqDirection gqDirection = 1;
          string gqGroupName = 2;
          enum GqIdentifier {
            GqIdentifier_NONE = 0;
          };
          GqIdentifier gqIdentifier = 3;
          string gqName = 4;
        }
        repeated QosGQApp qosGQApp = 1;
      }
      QosGQApps qosGQApps = 10;
      message QosHardPipes {
        message QosHardPipe {
          uint32 bandwidth = 1;
          enum QosHardPipeMode {
            QosHardPipeMode_ACHARDPIPE_MODE = 0;
            QosHardPipeMode_EXCLUSIVE_MODE = 1;
            QosHardPipeMode_SHARE_MODE = 2;
          };
          QosHardPipeMode qosHardPipeMode = 2;
          message QosHardPipeStats {
            message QosHardPipeStat {
              enum Direction {
                Direction_INBOUND = 0;
                Direction_OUTBOUND = 1;
              };
              Direction direction = 1;
              uint64 discardBytes = 2;
              uint64 discardBytesRate = 3;
              uint64 discardPackets = 4;
              uint64 discardPktsRate = 5;
              uint64 passBytes = 6;
              uint64 passBytesRate = 7;
              uint64 passPackets = 8;
              uint64 passPktsRate = 9;
            }
            repeated QosHardPipeStat qosHardPipeStat = 1;
          }
          QosHardPipeStats qosHardPipeStats = 3;
        }
        QosHardPipe qosHardPipe = 1;
      }
      QosHardPipes qosHardPipes = 11;
      message QosIFGQStDisps {
        message QosIFGQStDisp {
          uint32 ceVlanId = 1;
          enum Direction {
            Direction_INBOUND = 0;
            Direction_OUTBOUND = 1;
          };
          Direction direction = 2;
          uint64 dropByteRatesch = 3;
          uint64 dropBytessch = 4;
          uint64 dropPacketssch = 5;
          uint64 dropPktRatesch = 6;
          uint64 passByteRatesch = 7;
          uint64 passBytessch = 8;
          uint64 passPacketssch = 9;
          uint64 passPktRatesch = 10;
          uint32 peVlanId = 11;
          enum ServicebdClass {
            ServicebdClass_AF1 = 0;
            ServicebdClass_AF2 = 1;
            ServicebdClass_AF3 = 2;
            ServicebdClass_AF4 = 3;
            ServicebdClass_BE = 4;
            ServicebdClass_CS6 = 5;
            ServicebdClass_CS7 = 6;
            ServicebdClass_EF = 7;
            ServicebdClass_NOTCONFIG = 8;
          };
          ServicebdClass servicebdClass = 12;
          uint32 vlanId = 13;
        }
        repeated QosIFGQStDisp qosIFGQStDisp = 1;
      }
      QosIFGQStDisps qosIFGQStDisps = 12;
      message QosIfCars {
        message QosIfCar {
          uint32 cbs = 1;
          uint32 cir = 2;
          bool colorAware = 3;
          enum Direction {
            Direction_INBOUND = 0;
            Direction_OUTBOUND = 1;
          };
          Direction direction = 4;
          enum GreenAction {
            GreenAction_DISCARD = 0;
            GreenAction_PASS = 1;
          };
          GreenAction greenAction = 5;
          enum GreenColor {
            GreenColor_GREEN = 0;
            GreenColor_RED = 1;
            GreenColor_YELLOW = 2;
          };
          GreenColor greenColor = 6;
          enum GreenServiceClass {
            GreenServiceClass_AF1 = 0;
            GreenServiceClass_AF2 = 1;
            GreenServiceClass_AF3 = 2;
            GreenServiceClass_AF4 = 3;
            GreenServiceClass_BE = 4;
            GreenServiceClass_CS6 = 5;
            GreenServiceClass_CS7 = 6;
            GreenServiceClass_EF = 7;
            GreenServiceClass_NOTCONFIG = 8;
          };
          GreenServiceClass greenServiceClass = 7;
          uint32 groupId = 8;
          enum Identifier {
            Identifier_CE_VID = 0;
            Identifier_NO = 1;
            Identifier_NONE = 2;
            Identifier_VID = 3;
            Identifier_VID_CE_VID = 4;
          };
          Identifier identifier = 9;
          uint32 pbs = 10;
          uint32 pir = 11;
          message QosIfCarExtStats {
            message QosIfCarExtStat {
              uint64 arpVlanCarInDropPkts = 1;
              uint64 arpVlanCarOutDropPkts = 2;
              uint64 portQueueOutDropPkts = 3;
              uint64 qosCarInDropPkts = 4;
              uint64 qosCarOutDropPkts = 5;
              string segmentPktLenRx1024To1518 = 6;
              string segmentPktLenRx128To255 = 7;
              string segmentPktLenRx256To511 = 8;
              string segmentPktLenRx512To1023 = 9;
              string segmentPktLenRx64 = 10;
              string segmentPktLenRx65To127 = 11;
              string segmentPktLenRxLarger1518 = 12;
              string segmentPktLenTx1024To1518 = 13;
              string segmentPktLenTx128To255 = 14;
              string segmentPktLenTx256To511 = 15;
              string segmentPktLenTx512To1023 = 16;
              string segmentPktLenTx64 = 17;
              string segmentPktLenTx65To127 = 18;
              string segmentPktLenTxLarger1518 = 19;
            }
            repeated QosIfCarExtStat qosIfCarExtStat = 1;
          }
          QosIfCarExtStats qosIfCarExtStats = 12;
          message QosIfCarStats {
            message QosIfCarStat {
              uint64 dropBytes = 1;
              uint64 dropBytesRate = 2;
              uint64 dropPackets = 3;
              uint64 dropPktsRate = 4;
              uint64 passBytes = 5;
              uint64 passBytesRate = 6;
              uint64 passPackets = 7;
              uint64 passPktsRate = 8;
              string slotIdPath = 9;
              uint32 vid = 10;
              uint32 vlanId = 11;
            }
            repeated QosIfCarStat qosIfCarStat = 1;
          }
          QosIfCarStats qosIfCarStats = 13;
          enum RedAction {
            RedAction_DISCARD = 0;
            RedAction_PASS = 1;
          };
          RedAction redAction = 14;
          enum RedColor {
            RedColor_GREEN = 0;
            RedColor_RED = 1;
            RedColor_YELLOW = 2;
          };
          RedColor redColor = 15;
          enum RedServiceClass {
            RedServiceClass_AF1 = 0;
            RedServiceClass_AF2 = 1;
            RedServiceClass_AF3 = 2;
            RedServiceClass_AF4 = 3;
            RedServiceClass_BE = 4;
            RedServiceClass_CS6 = 5;
            RedServiceClass_CS7 = 6;
            RedServiceClass_EF = 7;
            RedServiceClass_NOTCONFIG = 8;
          };
          RedServiceClass redServiceClass = 16;
          string vlanId = 17;
          bool vlanMode = 18;
          enum YellowAction {
            YellowAction_DISCARD = 0;
            YellowAction_PASS = 1;
          };
          YellowAction yellowAction = 19;
          enum YellowColor {
            YellowColor_GREEN = 0;
            YellowColor_RED = 1;
            YellowColor_YELLOW = 2;
          };
          YellowColor yellowColor = 20;
          enum YellowServiceClass {
            YellowServiceClass_AF1 = 0;
            YellowServiceClass_AF2 = 1;
            YellowServiceClass_AF3 = 2;
            YellowServiceClass_AF4 = 3;
            YellowServiceClass_BE = 4;
            YellowServiceClass_CS6 = 5;
            YellowServiceClass_CS7 = 6;
            YellowServiceClass_EF = 7;
            YellowServiceClass_NOTCONFIG = 8;
          };
          YellowServiceClass yellowServiceClass = 21;
        }
        repeated QosIfCar qosIfCar = 1;
      }
      QosIfCars qosIfCars = 13;
      message QosIfPhbs {
        message QosIfPhb {
          string dsName = 1;
          uint32 groupId = 2;
          enum MapType {
            MapType_DSCP = 0;
            MapType_INNER_8021P = 1;
            MapType_MPLS_EXP = 2;
            MapType_NONE = 3;
            MapType_OUTER_8021P = 4;
          };
          MapType mapType = 3;
          enum OperateType {
            OperateType_DISABLE = 0;
            OperateType_ENABLE = 1;
          };
          OperateType operateType = 4;
          string vlanId = 5;
          bool vlanMode = 6;
        }
        repeated QosIfPhb qosIfPhb = 1;
      }
      QosIfPhbs qosIfPhbs = 14;
      message QosIfQppbs {
        message QosIfQppb {
          enum LocalID {
            LocalID_DISABLE = 0;
            LocalID_ENABLE = 1;
          };
          LocalID localID = 1;
          enum Mode {
            Mode_INBOUND = 0;
            Mode_IPPRECEDENCE = 1;
            Mode_OUTBOUND = 2;
          };
          Mode mode = 2;
          string policyName = 3;
          message QosIfQppbStats {
            message QosIfQppbStat {
              uint64 carDropByteRate = 1;
              uint64 carDropBytes = 2;
              uint64 carDropPktRate = 3;
              uint64 carDropPkts = 4;
              uint64 carGBytes = 5;
              uint64 carGBytesRate = 6;
              uint64 carGPkts = 7;
              uint64 carGPktsRate = 8;
              uint64 carPassByteRate = 9;
              uint64 carPassBytes = 10;
              uint64 carPassPktRate = 11;
              uint64 carPassPkts = 12;
              uint64 carRBytes = 13;
              uint64 carRBytesRate = 14;
              uint64 carRPkts = 15;
              uint64 carRPktsRate = 16;
              uint64 carYBytes = 17;
              uint64 carYBytesRate = 18;
              uint64 carYPkts = 19;
              uint64 carYPktsRate = 20;
              uint32 localID = 21;
              uint64 matchBytes = 22;
              uint64 matchBytesRate = 23;
              uint64 matchPackets = 24;
              uint64 matchPktsRate = 25;
              string slotIdPath = 26;
              uint64 sqAF1DropBRates = 27;
              uint64 sqAF1DropBytes = 28;
              uint64 sqAF1DropPRates = 29;
              uint64 sqAF1DropPkts = 30;
              uint64 sqAF1PassBRates = 31;
              uint64 sqAF1PassBytes = 32;
              uint64 sqAF1PassPRates = 33;
              uint64 sqAF1PassPkts = 34;
              uint64 sqAF2DropBRates = 35;
              uint64 sqAF2DropBytes = 36;
              uint64 sqAF2DropPRates = 37;
              uint64 sqAF2DropPkts = 38;
              uint64 sqAF2PassBRates = 39;
              uint64 sqAF2PassBytes = 40;
              uint64 sqAF2PassPRates = 41;
              uint64 sqAF2PassPkts = 42;
              uint64 sqAF3DropBRates = 43;
              uint64 sqAF3DropBytes = 44;
              uint64 sqAF3DropPRates = 45;
              uint64 sqAF3DropPkts = 46;
              uint64 sqAF3PassBRates = 47;
              uint64 sqAF3PassBytes = 48;
              uint64 sqAF3PassPRates = 49;
              uint64 sqAF3PassPkts = 50;
              uint64 sqAF4DropBRates = 51;
              uint64 sqAF4DropBytes = 52;
              uint64 sqAF4DropPRates = 53;
              uint64 sqAF4DropPkts = 54;
              uint64 sqAF4PassBRates = 55;
              uint64 sqAF4PassBytes = 56;
              uint64 sqAF4PassPRates = 57;
              uint64 sqAF4PassPkts = 58;
              uint64 sqBEDropBRates = 59;
              uint64 sqBEDropBytes = 60;
              uint64 sqBEDropPRates = 61;
              uint64 sqBEDropPkts = 62;
              uint64 sqBEPassBRates = 63;
              uint64 sqBEPassBytes = 64;
              uint64 sqBEPassPRates = 65;
              uint64 sqBEPassPkts = 66;
              uint64 sqCS6DropBRates = 67;
              uint64 sqCS6DropBytes = 68;
              uint64 sqCS6DropPRates = 69;
              uint64 sqCS6DropPkts = 70;
              uint64 sqCS6PassBRates = 71;
              uint64 sqCS6PassBytes = 72;
              uint64 sqCS6PassPRates = 73;
              uint64 sqCS6PassPkts = 74;
              uint64 sqCS7DropBRates = 75;
              uint64 sqCS7DropBytes = 76;
              uint64 sqCS7DropPRates = 77;
              uint64 sqCS7DropPkts = 78;
              uint64 sqCS7PassBRates = 79;
              uint64 sqCS7PassBytes = 80;
              uint64 sqCS7PassPRates = 81;
              uint64 sqCS7PassPkts = 82;
              uint64 sqEFDropBRates = 83;
              uint64 sqEFDropBytes = 84;
              uint64 sqEFDropPRates = 85;
              uint64 sqEFDropPkts = 86;
              uint64 sqEFPassBRates = 87;
              uint64 sqEFPassBytes = 88;
              uint64 sqEFPassPRates = 89;
              uint64 sqEFPassPkts = 90;
            }
            repeated QosIfQppbStat qosIfQppbStat = 1;
          }
          QosIfQppbStats qosIfQppbStats = 4;
          bool shareMode = 5;
          enum Value {
            Value_DESTINATION = 0;
            Value_SOURCE = 1;
          };
          Value value = 6;
        }
        repeated QosIfQppb qosIfQppb = 1;
      }
      QosIfQppbs qosIfQppbs = 15;
      message QosIfTrusts {
        message QosIfTrust {
          enum DirectType {
            DirectType_IN_OUTBOUND = 0;
            DirectType_INBOUND = 1;
            DirectType_OUTBOUND = 2;
          };
          DirectType directType = 1;
          string dsName = 2;
          uint32 groupId = 3;
          enum TrustType {
            TrustType_X_8021P = 0;
            TrustType_DS = 1;
            TrustType_INNER_8021P = 2;
            TrustType_OUTER_8021P = 3;
          };
          TrustType trustType = 4;
          string vlanId = 5;
          bool vlanMode = 6;
          bool vpnMode = 7;
        }
        repeated QosIfTrust qosIfTrust = 1;
      }
      QosIfTrusts qosIfTrusts = 16;
      message QosLdpTraffics {
        message QosLdpTraffic {
          enum Traffictype {
            Traffictype_LDP_TRAFFIC = 0;
          };
          Traffictype traffictype = 1;
        }
        QosLdpTraffic qosLdpTraffic = 1;
      }
      QosLdpTraffics qosLdpTraffics = 17;
      message QosLrs {
        message QosLr {
          uint32 cir = 1;
        }
        repeated QosLr qosLr = 1;
      }
      QosLrs qosLrs = 18;
      message QosLvHardPStVws {
        message QosLvHardPStVw {
          enum Direction {
            Direction_INBOUND = 0;
            Direction_OUTBOUND = 1;
          };
          Direction direction = 1;
          uint64 dropByteRate = 2;
          uint64 dropBytes = 3;
          uint64 dropPackets = 4;
          uint64 dropPktRate = 5;
          uint64 passByteRate = 6;
          uint64 passBytes = 7;
          uint64 passPackets = 8;
          uint64 passPktRate = 9;
        }
        QosLvHardPStVw qosLvHardPStVw = 1;
      }
      QosLvHardPStVws qosLvHardPStVws = 19;
      message QosMemLinkSchs {
        message QosMemLinkSch {
          enum Mode {
            Mode_DISTRIBUTE = 0;
          };
          Mode mode = 1;
          enum QosType {
            QosType_PORTQUEUE = 0;
            QosType_PORTSHAPING = 1;
            QosType_PROFILECAR = 2;
            QosType_QOSCAR = 3;
            QosType_TRAFFICCAR = 4;
            QosType_USERQUEUE = 5;
          };
          QosType qosType = 2;
        }
        repeated QosMemLinkSch qosMemLinkSch = 1;
      }
      QosMemLinkSchs qosMemLinkSchs = 20;
      message QosMplsL2Vcs {
        message QosMplsL2Vc {
          string dsName = 1;
        }
        QosMplsL2Vc qosMplsL2vc = 1;
      }
      QosMplsL2Vcs qosMplsL2vcs = 21;
      message QosPQDiscardAlarms {
        message QosPQDiscardAlarm {
          uint32 discardNum = 1;
          uint32 discardPacketCoefficient = 2;
          uint32 discardPacketExponent = 3;
          enum DiscardType {
            DiscardType_DROPBYTES = 0;
            DiscardType_DROPPKTS = 1;
            DiscardType_DROPPKTSRATIO = 2;
          };
          DiscardType discardType = 4;
          uint32 intervalTime = 5;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
          };
          ServiceClass serviceClass = 6;
        }
        repeated QosPQDiscardAlarm qosPQDiscardAlarm = 1;
      }
      QosPQDiscardAlarms qosPQDiscardAlarms = 22;
      message QosPolicyApplys {
        message QosPolicyApply {
          enum Direction {
            Direction_INBOUND = 0;
            Direction_OUTBOUND = 1;
          };
          Direction direction = 1;
          uint32 groupId = 2;
          enum Identifier {
            Identifier_CE_VID = 0;
            Identifier_NO = 1;
            Identifier_NONE = 2;
            Identifier_VID = 3;
            Identifier_VID_CE_VID = 4;
          };
          Identifier identifier = 3;
          enum Layer {
            Layer_ALL = 0;
            Layer_LINK = 1;
            Layer_MPLS = 2;
            Layer_NONE = 3;
          };
          Layer layer = 4;
          uint32 peVlanId = 5;
          string policyName = 6;
          message QosActSQStats {
            message QosActSQStat {
              uint32 bufTotal = 1;
              uint32 bufUsed = 2;
              string classifierName = 3;
              uint64 dropByteRate = 4;
              uint64 dropBytes = 5;
              uint64 dropPackets = 6;
              uint64 dropPktRate = 7;
              uint64 passByteRate = 8;
              uint64 passBytes = 9;
              uint64 passPackets = 10;
              uint64 passPktRate = 11;
              enum ServiceClass {
                ServiceClass_AF1 = 0;
                ServiceClass_AF2 = 1;
                ServiceClass_AF3 = 2;
                ServiceClass_AF4 = 3;
                ServiceClass_BE = 4;
                ServiceClass_CS6 = 5;
                ServiceClass_CS7 = 6;
                ServiceClass_EF = 7;
                ServiceClass_TOTAL = 8;
              };
              ServiceClass serviceClass = 12;
            }
            repeated QosActSQStat qosActSQStat = 1;
          }
          QosActSQStats qosActSQStats = 7;
          message QosPolicyStats {
            message QosPolicyStat {
              string applyTime = 1;
              uint64 carBytes = 2;
              uint64 carBytesRate = 3;
              uint64 carPackets = 4;
              uint64 carPktsRate = 5;
              uint64 filterBytes = 6;
              uint64 filterBytesRate = 7;
              uint64 filterPackets = 8;
              uint64 filterPktsRate = 9;
              uint64 matchByteRate = 10;
              uint64 matchBytes = 11;
              uint64 matchDropBytes = 12;
              uint64 matchDropBytesRate = 13;
              uint64 matchDropPkts = 14;
              uint64 matchDropPktsRate = 15;
              uint64 matchPackets = 16;
              uint64 matchPassBytes = 17;
              uint64 matchPassBytesRate = 18;
              uint64 matchPassPkts = 19;
              uint64 matchPassPktsRate = 20;
              uint64 matchPktRate = 21;
              uint64 missBytes = 22;
              uint64 missBytesRate = 23;
              uint64 missPackets = 24;
              uint64 missPktsRate = 25;
              uint32 peVlanId = 26;
              message QosRuleStats {
                message QosRuleStat {
                  string aclName = 1;
                  uint32 ceVlan = 2;
                  string classifierName = 3;
                  enum Direction {
                    Direction_DESTINATION = 0;
                    Direction_SOURCE = 1;
                  };
                  Direction direction = 4;
                  string ifName = 5;
                  uint32 ifmatchId = 6;
                  uint64 matchDropBytes = 7;
                  uint64 matchDropPackets = 8;
                  uint64 matchPassBytes = 9;
                  uint64 matchPassPackets = 10;
                  uint32 peVlan = 11;
                  string policyName = 12;
		          enum Protocol {
                    Protocol_IPV4 = 0;
                    Protocol_IPV6 = 1;
                  };
                  Protocol protocolFamily = 13;
                  uint32 ruleId = 14;
                  string slotId = 15;
                }
                repeated QosRuleStat qosRuleStat = 1;
              }
              QosRuleStats qosRuleStats = 27;
              string slotIdPath = 28;
              bool statClearFlag = 29;
              string statClearTime = 30;
              string statEnableTime = 31;
              uint64 urpfBytes = 32;
              uint64 urpfBytesRate = 33;
              uint64 urpfPackets = 34;
              uint64 urpfPktsRate = 35;
              uint32 vlanId = 36;
            }
            repeated QosPolicyStat qosPolicyStat = 1;
          }
          QosPolicyStats qosPolicyStats = 8;
          string vlanId = 9;
          bool vlanMode = 10;
        }
        repeated QosPolicyApply qosPolicyApply = 1;
      }
      QosPolicyApplys qosPolicyApplys = 23;
      message QosPortQueueAlarms {
        message QosPortQueueAlarm {
          uint32 bufferPercent = 1;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
          };
          ServiceClass serviceClass = 2;
        }
        repeated QosPortQueueAlarm qosPortQueueAlarm = 1;
      }
      QosPortQueueAlarms qosPortQueueAlarms = 24;
      message QosPortQueues {
        message QosPortQueue {
          enum Lowlatency {
            Lowlatency_DISABLE = 0;
            Lowlatency_ENABLE = 1;
          };
          Lowlatency lowlatency = 1;
          uint32 pbs = 2;
          string portWredName = 3;
          message QosPortQueueStats {
            message QosPortQueueStat {
              uint32 bufTotal = 1;
              uint32 bufUsed = 2;
              uint32 cqUseage = 3;
              uint64 dropByteRate = 4;
              uint64 dropBytes = 5;
              uint64 dropPackets = 6;
              uint64 dropPktRate = 7;
              uint64 dropTailByteRate = 8;
              uint64 dropTailBytes = 9;
              uint64 dropTailPackets = 10;
              uint64 dropTailPktRate = 11;
              uint64 dropWredByteRate = 12;
              uint64 dropWredBytes = 13;
              uint64 dropWredPackets = 14;
              uint64 dropWredPktRate = 15;
              enum Isonboard {
                Isonboard_NO = 0;
                Isonboard_YES = 1;
              };
              Isonboard isonboard = 16;
              uint64 passByteRate = 17;
              uint64 passBytes = 18;
              uint64 passPackets = 19;
              uint64 passPktRate = 20;
              uint64 peakRate = 21;
              string peakTime = 22;
            }
            repeated QosPortQueueStat qosPortQueueStat = 1;
          }
          QosPortQueueStats qosPortQueueStats = 4;
          enum QueueScheduleMode {
            QueueScheduleMode_LPQ = 0;
            QueueScheduleMode_PQ = 1;
            QueueScheduleMode_WFQ = 2;
          };
          QueueScheduleMode queueScheduleMode = 5;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
          };
          ServiceClass serviceClass = 6;
          uint32 shaping = 7;
          uint32 shapingPercentage = 8;
          uint32 weight = 9;
        }
        repeated QosPortQueue qosPortQueue = 1;
      }
      QosPortQueues qosPortQueues = 25;
      message QosPortShapings {
        message QosPortShaping {
          int32 networkheaderlength = 1;
          uint32 pbs = 2;
          enum ShapingType {
            ShapingType_X_256K = 0;
            ShapingType_X_512K = 1;
            ShapingType_OTHER = 2;
          };
          ShapingType shapingType = 3;
          uint32 shapingValue = 4;
        }
        QosPortShaping qosPortShaping = 1;
      }
      QosPortShapings qosPortShapings = 26;
      message QosQosQueues {
        message QosQosQueue {
          uint32 cir = 1;
          uint32 cirPercent = 2;
          uint32 pir = 3;
          uint32 pirPercent = 4;
          enum Priority {
            Priority_LPQ = 0;
            Priority_PQ = 1;
            Priority_WFQ = 2;
          };
          Priority priority = 5;
          message QosQosQueueStats {
            message QosQosQueueStat {
              uint64 dropByteRate = 1;
              uint64 dropBytes = 2;
              uint64 dropPackets = 3;
              uint64 dropPktRate = 4;
              uint64 passByteRate = 5;
              uint64 passBytes = 6;
              uint64 passPackets = 7;
              uint64 passPktRate = 8;
            }
            repeated QosQosQueueStat qosQosQueueStat = 1;
          }
          QosQosQueueStats qosQosQueueStats = 6;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
          };
          ServiceClass serviceClass = 7;
        }
        repeated QosQosQueue qosQosQueue = 1;
      }
      QosQosQueues qosQosQueues = 27;
      message QosShapings {
        message QosShaping {
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_NOTCONFIG = 8;
          };
          ServiceClass serviceClass = 1;
          string serviceName = 2;
        }
        repeated QosShaping qosShaping = 1;
      }
      QosShapings qosShapings = 28;
      message QosSubPortQApps {
        message QosSubPortQApp {
          string subPortQueue = 1;
          string userGroupQueue = 2;
        }
        repeated QosSubPortQApp qosSubPortQApp = 1;
      }
      QosSubPortQApps qosSubPortQApps = 29;
      message QosSubportquStaschs {
        message QosSubportquStasch {
          uint64 dropByteRatesch = 1;
          uint64 dropBytessch = 2;
          uint64 dropPacketssch = 3;
          uint64 dropPktRatesch = 4;
          uint64 passByteRatesch = 5;
          uint64 passBytessch = 6;
          uint64 passPacketssch = 7;
          uint64 passPktRatesch = 8;
          enum ServicebdClasssch {
            ServicebdClasssch_AF1 = 0;
            ServicebdClasssch_AF2 = 1;
            ServicebdClasssch_AF3 = 2;
            ServicebdClasssch_AF4 = 3;
            ServicebdClasssch_BE = 4;
            ServicebdClasssch_CS6 = 5;
            ServicebdClasssch_CS7 = 6;
            ServicebdClasssch_EF = 7;
            ServicebdClasssch_NOTCONFIG = 8;
          };
          ServicebdClasssch servicebdClasssch = 9;
        }
        QosSubportquStasch qosSubportquStasch = 1;
      }
      QosSubportquStaschs qosSubportquStaschs = 30;
      message QosUserVlanProfs {
        message QosUserVlanProf {
          uint32 beginVlanId = 1;
          enum Direction {
            Direction_INBOUND = 0;
            Direction_OUTBOUND = 1;
          };
          Direction direction = 2;
          enum Eachvlan {
            Eachvlan_NO = 0;
            Eachvlan_YES = 1;
          };
          Eachvlan eachvlan = 3;
          uint32 endVlanId = 4;
          string profileName = 5;
          uint32 qinqBeginVlanId = 6;
          uint32 qinqEndVlanId = 7;
          enum VlanType {
            VlanType_DOT1Q = 0;
            VlanType_QINQ = 1;
          };
          VlanType vlanType = 8;
        }
        repeated QosUserVlanProf qosUserVlanProf = 1;
      }
      QosUserVlanProfs qosUserVlanProfs = 31;
      message QosVllPipe {
        enum Color {
          Color_GREEN = 0;
          Color_RED = 1;
          Color_YELLOW = 2;
        };
        Color color = 1;
        string dsName = 2;
        enum EgPipeMode {
          EgPipeMode_PIPE = 0;
          EgPipeMode_SHORTPIPE = 1;
          EgPipeMode_UNIFORM = 2;
        };
        EgPipeMode egPipeMode = 3;
        enum IngPipeMode {
          IngPipeMode_PIPE = 0;
          IngPipeMode_SHORTPIPE = 1;
          IngPipeMode_UNIFORM = 2;
        };
        IngPipeMode ingPipeMode = 4;
        enum PipeMode {
          PipeMode_PIPE = 0;
          PipeMode_SHORTPIPE = 1;
          PipeMode_UNIFORM = 2;
        };
        PipeMode pipeMode = 5;
        enum ServiceClass {
          ServiceClass_AF1 = 0;
          ServiceClass_AF2 = 1;
          ServiceClass_AF3 = 2;
          ServiceClass_AF4 = 3;
          ServiceClass_BE = 4;
          ServiceClass_CS6 = 5;
          ServiceClass_CS7 = 6;
          ServiceClass_EF = 7;
        };
        ServiceClass serviceClass = 6;
        bool splitMode = 7;
        enum TrustType {
          TrustType_INPRI = 0;
          TrustType_IPDSCP = 1;
          TrustType_OUTPRI = 2;
        };
        TrustType trustType = 8;
      }
      QosVllPipe qosVllPipe = 32;
      message QosWfqShapings {
        message QosWfqShaping {
          enum Priority {
            Priority_LPQ = 0;
            Priority_PQ = 1;
            Priority_WFQ = 2;
          };
          Priority priority = 1;
          uint32 shapingPercent = 2;
          uint32 shapingValue = 3;
        }
        repeated QosWfqShaping qosWfqShaping = 1;
      }
      QosWfqShapings qosWfqShapings = 33;
      message QosWfqWeights {
        message QosWfqWeight {
          string slotId = 1;
          uint32 weightVal = 2;
        }
        repeated QosWfqWeight qosWfqWeight = 1;
      }
      QosWfqWeights qosWfqWeights = 34;
    }
    repeated QosIfQos qosIfQos = 1;
  }
  QosIfQoss qosIfQoss = 13;
  message QosIfQppbCfgs {
    message QosIfQppbCfg {
      string behaviorName = 1;
      enum Direction {
        Direction_INBOUND = 0;
        Direction_OUTBOUND = 1;
      };
      Direction direction = 2;
      string ifName = 3;
      uint32 localID = 4;
      string policyName = 5;
      enum State {
        State_ACTIVE = 0;
        State_ACTIVE_P = 1;
        State_INACTIVE = 2;
      };
      State state = 6;
    }
    repeated QosIfQppbCfg qosIfQppbCfg = 1;
  }
  QosIfQppbCfgs qosIfQppbCfgs = 14;
  message QosInfUsers {
    message QosInfUser {
      enum Direction {
        Direction_INBOUND = 0;
        Direction_OUTBOUND = 1;
      };
      Direction direction = 1;
      message QosInfUserCARs {
        message QosInfUserCAR {
          uint64 cDiscardBytRate = 1;
          uint64 cDiscardBytes = 2;
          uint64 cDiscardPackets = 3;
          uint64 cDiscardPktRate = 4;
          uint64 cPassByteRate = 5;
          uint64 cPassBytes = 6;
          uint64 cPassPackets = 7;
          uint64 cPassPktRate = 8;
          enum ResType {
            ResType_CAR = 0;
            ResType_L2CAR = 1;
            ResType_L2L3CAR = 2;
            ResType_L3CAR = 3;
            ResType_SQ = 4;
            ResType_SQCAR = 5;
            ResType_NULL = 6;
          };
          ResType resType = 9;
        }
        repeated QosInfUserCAR qosInfUserCAR = 1;
      }
      QosInfUserCARs qosInfUserCARs = 2;
      message QosInfUserSQs {
        message QosInfUserSQ {
          uint64 qDiscardBytRate = 1;
          uint64 qDiscardBytes = 2;
          uint64 qDiscardPackets = 3;
          uint64 qDiscardPktRate = 4;
          uint64 qPassByteRate = 5;
          uint64 qPassBytes = 6;
          uint64 qPassPackets = 7;
          uint64 qPassPktRate = 8;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_TOTAL = 8;
          };
          ServiceClass serviceClass = 9;
        }
        repeated QosInfUserSQ qosInfUserSQ = 1;
      }
      QosInfUserSQs qosInfUserSQs = 3;
      uint32 userID = 4;
    }
    repeated QosInfUser qosInfUser = 1;
  }
  QosInfUsers qosInfUsers = 15;
  message QosLowLaEns {
    message QosLowLaEn {
      enum EnableType {
        EnableType_FLOWQUEUE = 0;
        EnableType_SUBPORTQUEUE = 1;
        EnableType_USERGROUPQUEUE = 2;
      };
      EnableType enableType = 1;
      enum EnableValue {
        EnableValue_ENABLE = 0;
      };
      EnableValue enableValue = 2;
    }
    repeated QosLowLaEn qosLowLaEn = 1;
  }
  QosLowLaEns qosLowLaEns = 16;
  message QosLsIfQoss {
    message QosLsIfQos {
      message AtmPvcs {
        message AtmPvc {
          message QosLsPvcQueues {
            message QosLsPvcQueue {
              uint32 pirParaPercent = 1;
              uint32 pirParaValue = 2;
              enum PirSetMode {
                PirSetMode_NOT_CONFIG = 0;
                PirSetMode_PIR_PERCENT = 1;
                PirSetMode_PIR_VALUE = 2;
              };
              PirSetMode pirSetMode = 3;
              enum PvcQueueMode {
                PvcQueueMode_PQ = 0;
                PvcQueueMode_WFQ = 1;
              };
              PvcQueueMode pvcQueueMode = 4;
              message PvcQueueStat {
                uint64 outputBytes = 1;
                uint64 outputDropPkts = 2;
                uint64 outputPkts = 3;
              }
              PvcQueueStat pvcQueueStat = 5;
              enum ServiceClass {
                ServiceClass_AF1 = 0;
                ServiceClass_AF2 = 1;
                ServiceClass_AF3 = 2;
                ServiceClass_AF4 = 3;
                ServiceClass_BE = 4;
                ServiceClass_CS6 = 5;
                ServiceClass_CS7 = 6;
                ServiceClass_EF = 7;
                ServiceClass_NOTCONFIG = 8;
              };
              ServiceClass serviceClass = 6;
              uint32 wfqWeight = 7;
            }
            repeated QosLsPvcQueue qosLsPvcQueue = 1;
          }
          QosLsPvcQueues qosLsPvcQueues = 1;
          message QosLsPvcTrafficQ {
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_NOTCONFIG = 8;
            };
            ServiceClass serviceClass = 1;
            enum TrafficQColor {
              TrafficQColor_GREEN = 0;
              TrafficQColor_RED = 1;
              TrafficQColor_YELLOW = 2;
            };
            TrafficQColor trafficQColor = 2;
            enum TrafficQMode {
              TrafficQMode_DISABLE = 0;
              TrafficQMode_ENABLE = 1;
            };
            TrafficQMode trafficQMode = 3;
          }
          QosLsPvcTrafficQ qosLsPvcTrafficQ = 2;
          message QosLsPvcTrustUps {
            message QosLsPvcTrustUp {
              enum DirectType {
                DirectType_IN_OUTBOUND = 0;
                DirectType_INBOUND = 1;
                DirectType_OUTBOUND = 2;
              };
              DirectType directType = 1;
              string dsName = 2;
            }
            repeated QosLsPvcTrustUp qosLsPvcTrustUp = 1;
          }
          QosLsPvcTrustUps qosLsPvcTrustUps = 3;
          uint32 vci = 4;
          uint32 vpi = 5;
        }
        repeated AtmPvc atmPvc = 1;
      }
      AtmPvcs atmPvcs = 1;
      message AtmPvps {
        message AtmPvp {
          message QosLsPvpTrafficQ {
            enum ServiceClass {
              ServiceClass_AF1 = 0;
              ServiceClass_AF2 = 1;
              ServiceClass_AF3 = 2;
              ServiceClass_AF4 = 3;
              ServiceClass_BE = 4;
              ServiceClass_CS6 = 5;
              ServiceClass_CS7 = 6;
              ServiceClass_EF = 7;
              ServiceClass_NOTCONFIG = 8;
            };
            ServiceClass serviceClass = 1;
            enum TrafficQColor {
              TrafficQColor_GREEN = 0;
              TrafficQColor_RED = 1;
              TrafficQColor_YELLOW = 2;
            };
            TrafficQColor trafficQColor = 2;
            enum TrafficQMode {
              TrafficQMode_DISABLE = 0;
              TrafficQMode_ENABLE = 1;
            };
            TrafficQMode trafficQMode = 3;
          }
          QosLsPvpTrafficQ qosLsPvpTrafficQ = 1;
          message QosLsPvpTrustUps {
            message QosLsPvpTrustUp {
              enum DirectType {
                DirectType_IN_OUTBOUND = 0;
                DirectType_INBOUND = 1;
                DirectType_OUTBOUND = 2;
              };
              DirectType directType = 1;
              string dsName = 2;
            }
            repeated QosLsPvpTrustUp qosLsPvpTrustUp = 1;
          }
          QosLsPvpTrustUps qosLsPvpTrustUps = 2;
          uint32 vpi = 3;
        }
        repeated AtmPvp atmPvp = 1;
      }
      AtmPvps atmPvps = 2;
      string ifName = 3;
      enum IfPhyType {
        IfPhyType_ATM = 0;
        IfPhyType_GLOBAL_MP_GROUP = 1;
        IfPhyType_MP_GROUP = 2;
        IfPhyType_SERIAL = 3;
        IfPhyType_TRUNK_SERIAL = 4;
      };
      IfPhyType ifPhyType = 4;
      message QosLsAtmTrafficQ {
        enum ServiceClass {
          ServiceClass_AF1 = 0;
          ServiceClass_AF2 = 1;
          ServiceClass_AF3 = 2;
          ServiceClass_AF4 = 3;
          ServiceClass_BE = 4;
          ServiceClass_CS6 = 5;
          ServiceClass_CS7 = 6;
          ServiceClass_EF = 7;
          ServiceClass_NOTCONFIG = 8;
        };
        ServiceClass serviceClass = 1;
        enum TrafficQColor {
          TrafficQColor_GREEN = 0;
          TrafficQColor_RED = 1;
          TrafficQColor_YELLOW = 2;
        };
        TrafficQColor trafficQColor = 2;
        enum TrafficQMode {
          TrafficQMode_DISABLE = 0;
          TrafficQMode_ENABLE = 1;
        };
        TrafficQMode trafficQMode = 3;
      }
      QosLsAtmTrafficQ qosLsAtmTrafficQ = 5;
      message QosLsPortQueues {
        message QosLsPortQueue {
          enum CirMode {
            CirMode_CIR_PERCENT = 0;
            CirMode_CIR_VALUE = 1;
            CirMode_NOT_CONFIG = 2;
          };
          CirMode cirMode = 1;
          uint32 cirParaPercent = 2;
          uint32 cirParaValue = 3;
          uint32 maxBufferTime = 4;
          enum OperType {
            OperType_NEW_CONFIGURE = 0;
            OperType_RESET_QUEUELIMIT = 1;
            OperType_RESET_SHAPING = 2;
          };
          OperType operType = 5;
          enum PirMode {
            PirMode_NOT_CONFIG = 0;
            PirMode_PIR_PERCENT = 1;
            PirMode_PIR_VALUE = 2;
          };
          PirMode pirMode = 6;
          uint32 pirParaPercent = 7;
          uint32 pirParaValue = 8;
          message QosLsPortQueueStat {
            uint64 dropBytes = 1;
            uint64 dropBytesRate = 2;
            uint64 dropPkts = 3;
            uint64 dropPktsRate = 4;
            uint32 queueUsage = 5;
            uint64 totalBytes = 6;
            uint64 totalBytesRate = 7;
            uint64 totalPkts = 8;
            uint64 totalPktsRate = 9;
          }
          QosLsPortQueueStat qosLsPortQueueStat = 9;
          enum ScheduleMode {
            ScheduleMode_PQ = 0;
            ScheduleMode_WFQ = 1;
          };
          ScheduleMode scheduleMode = 10;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_NOTCONFIG = 8;
          };
          ServiceClass serviceClass = 11;
        }
        repeated QosLsPortQueue qosLsPortQueue = 1;
      }
      QosLsPortQueues qosLsPortQueues = 6;
    }
    repeated QosLsIfQos qosLsIfQos = 1;
  }
  QosLsIfQoss qosLsIfQoss = 17;
  message QosLsQosGlobalPara {
    enum QosLsPortQueueWeightSpec {
      QosLsPortQueueWeightSpec_DISABLE = 0;
      QosLsPortQueueWeightSpec_ENABLE = 1;
    };
    QosLsPortQueueWeightSpec qosLsPortQueueWeightSpec = 1;
  }
  QosLsQosGlobalPara qosLsQosGlobalPara = 18;
  message QosPQschedules {
    message QosPQschedule {
      enum QosDirection {
        QosDirection_INBOUND = 0;
        QosDirection_OUTBOUND = 1;
      };
      QosDirection qosDirection = 1;
      enum QosMode {
        QosMode_HIGH = 0;
        QosMode_LOW = 1;
      };
      QosMode qosMode = 2;
      string slotID = 3;
      string ucCardID = 4;
    }
    repeated QosPQschedule qosPQschedule = 1;
  }
  QosPQschedules qosPQschedules = 19;
  message QosPackEnables {
    message QosPackEnable {
      enum EnableType {
        EnableType_DISABLE = 0;
        EnableType_ENABLE = 1;
      };
      EnableType enableType = 1;
      string slotIDStr = 2;
    }
    repeated QosPackEnable qosPackEnable = 1;
  }
  QosPackEnables qosPackEnables = 20;
  message QosPirPrecisions {
    message QosPirPrecision {
      string slotIDStr = 1;
      uint32 ucPrecisionValue = 2;
    }
    repeated QosPirPrecision qosPirPrecision = 1;
  }
  QosPirPrecisions qosPirPrecisions = 21;
  message QosPolicyMatchIpOnlys {
    message QosPolicyMatchIpOnly {
      string slotIdPath = 1;
    }
    repeated QosPolicyMatchIpOnly qosPolicyMatchIpOnly = 1;
  }
  QosPolicyMatchIpOnlys qosPolicyMatchIpOnlys = 22;
  message QosPortQueueStatInfos {
    message QosPortQueueStatInfo {
      uint32 bufferPercent = 1;
      uint64 bufferTime = 2;
      uint64 cleanTime = 3;
      uint32 currentBuffer = 4;
      uint64 droppedBytes = 5;
      uint64 droppedPackets = 6;
      string ifName = 7;
      uint32 maxBufferPercent = 8;
      uint64 passedbps = 9;
      uint64 passedPps = 10;
      enum QueueType {
        QueueType_AF1 = 0;
        QueueType_AF2 = 1;
        QueueType_AF3 = 2;
        QueueType_AF4 = 3;
        QueueType_BE = 4;
        QueueType_CS6 = 5;
        QueueType_CS7 = 6;
        QueueType_EF = 7;
        QueueType_TOTAL = 8;
      };
      QueueType queueType = 11;
      uint32 totalBuffer = 12;
      uint64 totalBytes = 13;
      uint64 totalPackets = 14;
    }
    repeated QosPortQueueStatInfo qosPortQueueStatInfo = 1;
  }
  QosPortQueueStatInfos qosPortQueueStatInfos = 23;
  message QosQppbPolicys {
    message QosQppbPolicy {
      bool outboundSrvcFlag = 1;
      string policyName = 2;
      message QosLocalIDs {
        message QosLocalID {
          string behaviorName = 1;
          uint32 localID = 2;
        }
        repeated QosLocalID qosLocalID = 1;
      }
      QosLocalIDs qosLocalIDs = 3;
      bool statFlag = 4;
    }
    repeated QosQppbPolicy qosQppbPolicy = 1;
  }
  QosQppbPolicys qosQppbPolicys = 24;
  message QosRdrRouteFlts {
    message QosRdrRouteFlt {
      bool filterBlackhole = 1;
      bool filterDefault = 2;
      enum IPFamily {
        IPFamily_IPV4 = 0;
        IPFamily_IPV4IPV6 = 1;
        IPFamily_IPV6 = 2;
      };
      IPFamily iPFamily = 3;
      string slotIdPath = 4;
    }
    repeated QosRdrRouteFlt qosRdrRouteFlt = 1;
  }
  QosRdrRouteFlts qosRdrRouteFlts = 25;
  message QosRemoteIfQoss {
    message QosRemoteIfQos {
      string ifName = 1;
      message QosRemoteDefClasss {
        message QosRemoteDefClass {
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_NOTCONFIG = 8;
          };
          ServiceClass serviceClass = 1;
        }
        QosRemoteDefClass qosRemoteDefClass = 1;
      }
      QosRemoteDefClasss qosRemoteDefClasss = 2;
      message QosRemoteIfTrusts {
        message QosRemoteIfTrust {
          uint32 basDownFlag = 1;
          uint32 ceBeginVlanID = 2;
          uint32 ceEndVlanID = 3;
          enum DirectType {
            DirectType_IN_OUTBOUND = 0;
            DirectType_INBOUND = 1;
            DirectType_OUTBOUND = 2;
          };
          DirectType directType = 4;
          string dsName = 5;
          enum OffLoad {
            OffLoad_DISABLE = 0;
            OffLoad_ENABLE = 1;
          };
          OffLoad offLoad = 6;
          enum TrustType {
            TrustType_X_8021P = 0;
            TrustType_DS = 1;
            TrustType_INNER_8021P = 2;
            TrustType_OUTER_8021P = 3;
          };
          TrustType trustType = 7;
          bool vlanMode = 8;
        }
        repeated QosRemoteIfTrust qosRemoteIfTrust = 1;
      }
      QosRemoteIfTrusts qosRemoteIfTrusts = 3;
    }
    repeated QosRemoteIfQos qosRemoteIfQos = 1;
  }
  QosRemoteIfQoss qosRemoteIfQoss = 26;
  message QosSlotChannelAlarms {
    message QosSlotChannelAlarm {
      enum AlmType {
        AlmType_BANDWIDTH = 0;
        AlmType_QUANTITY = 1;
      };
      AlmType almType = 1;
      enum Pool {
        Pool_ALL = 0;
        Pool_POOL_0 = 1;
        Pool_POOL_1 = 2;
      };
      Pool pool = 2;
      string slotIDStr = 3;
      uint32 thresholdVal = 4;
    }
    repeated QosSlotChannelAlarm qosSlotChannelAlarm = 1;
  }
  QosSlotChannelAlarms qosSlotChannelAlarms = 27;
  message QosSlotChannelPres {
    message QosSlotChannelPre {
      string slotIDStr = 1;
      enum UpOrDown {
        UpOrDown_DOWN = 0;
        UpOrDown_UP = 1;
      };
      UpOrDown upOrDown = 2;
    }
    repeated QosSlotChannelPre qosSlotChannelPre = 1;
  }
  QosSlotChannelPres qosSlotChannelPres = 28;
  message QosSlotChannelProfileApps {
    message QosSlotChannelProfileApp {
      string channelName = 1;
      message QosDisplayChannelProfiles {
        message QosDisplayChannelProfile {
          uint32 chnnlId = 1;
          uint32 ucTmid = 2;
          uint32 uiCfgBandWidth = 3;
          uint32 uiFreeBQntyNumA = 4;
          uint32 uiFreeBQntyNumB = 5;
          uint32 uiFreeBankNoteA = 6;
          uint32 uiFreeBankNoteB = 7;
          uint32 uiFreePirSumA = 8;
          uint32 uiFreePirSumB = 9;
          uint32 uiRelBandWidthA = 10;
          uint32 uiRelBandWidthB = 11;
          uint32 uiSlotMaxQuantity = 12;
          uint32 uiSlotQuantity = 13;
          uint32 uiSlotRelBandWidth = 14;
          uint32 uiUseBQntyNumA = 15;
          uint32 uiUseBQntyNumB = 16;
          uint32 uiUseBankNoteA = 17;
          uint32 uiUseBankNoteB = 18;
          uint32 uiUsePirSumA = 19;
          uint32 uiUsePirSumB = 20;
        }
        repeated QosDisplayChannelProfile qosDisplayChannelProfile = 1;
      }
      QosDisplayChannelProfiles qosDisplayChannelProfiles = 2;
      string slotIDStr = 3;
    }
    repeated QosSlotChannelProfileApp qosSlotChannelProfileApp = 1;
  }
  QosSlotChannelProfileApps qosSlotChannelProfileApps = 29;
  message QosSlotCvgPcds {
    message QosSlotCvgPcd {
      enum Cos {
        Cos_X_0 = 0;
        Cos_X_1 = 1;
        Cos_X_2 = 2;
        Cos_X_3 = 3;
        Cos_X_4 = 4;
      };
      Cos cos = 1;
      enum Priority {
        Priority_HIGH = 0;
      };
      Priority priority = 2;
      string slotIDStr = 3;
    }
    repeated QosSlotCvgPcd qosSlotCvgPcd = 1;
  }
  QosSlotCvgPcds qosSlotCvgPcds = 30;
  message QosSlotPQAlarms {
    message QosSlotPQAlarm {
      uint32 bufferPercent = 1;
      enum ServiceClass {
        ServiceClass_AF1 = 0;
        ServiceClass_AF2 = 1;
        ServiceClass_AF3 = 2;
        ServiceClass_AF4 = 3;
        ServiceClass_BE = 4;
        ServiceClass_CS6 = 5;
        ServiceClass_CS7 = 6;
        ServiceClass_EF = 7;
      };
      ServiceClass serviceClass = 2;
      string slotIDStr = 3;
    }
    repeated QosSlotPQAlarm qosSlotPQAlarm = 1;
  }
  QosSlotPQAlarms qosSlotPQAlarms = 31;
  message QosSlotPQDiscardAlarms {
    message QosSlotPQDiscardAlarm {
      uint32 discardNum = 1;
      uint32 discardPacketCoefficient = 2;
      uint32 discardPacketExponent = 3;
      enum DiscardType {
        DiscardType_DROPBYTES = 0;
        DiscardType_DROPPKTS = 1;
        DiscardType_DROPPKTSRATIO = 2;
      };
      DiscardType discardType = 4;
      uint32 intervalTime = 5;
      enum ServiceClass {
        ServiceClass_AF1 = 0;
        ServiceClass_AF2 = 1;
        ServiceClass_AF3 = 2;
        ServiceClass_AF4 = 3;
        ServiceClass_BE = 4;
        ServiceClass_CS6 = 5;
        ServiceClass_CS7 = 6;
        ServiceClass_EF = 7;
      };
      ServiceClass serviceClass = 6;
      string slotIDStr = 7;
    }
    repeated QosSlotPQDiscardAlarm qosSlotPQDiscardAlarm = 1;
  }
  QosSlotPQDiscardAlarms qosSlotPQDiscardAlarms = 32;
  message QosSlotQoss {
    message QosSlotQos {
      message QOSObsFilterNodes {
        message QOSObsFilterNode {
          string dstIPAddr = 1;
          string dstIpAddrMask = 2;
          string dstMacAddr = 3;
          uint32 dstPort = 4;
          string ethType = 5;
          uint32 filterId = 6;
          uint32 iPProtocol = 7;
          string pPPProtocol = 8;
          uint32 pPPoeSessionId = 9;
          string srcIPAddr = 10;
          string srcIPAddrMask = 11;
          string srcMacAddr = 12;
          uint32 srcPort = 13;
          uint32 vlan = 14;
        }
        repeated QOSObsFilterNode qOSObsFilterNode = 1;
      }
      QOSObsFilterNodes qOSObsFilterNodes = 1;
      message QosAccessBoardSchEnOuts {
        message QosAccessBoardSchEnOut {
          enum QosEnable {
            QosEnable_ENABLE = 0;
          };
          QosEnable qosEnable = 1;
        }
        QosAccessBoardSchEnOut qosAccessBoardSchEnOut = 1;
      }
      QosAccessBoardSchEnOuts qosAccessBoardSchEnOuts = 2;
      message QosDomCarToSQs {
        message QosDomCarToSQ {
          enum DisableFlag {
            DisableFlag_DISABLE = 0;
          };
          DisableFlag disableFlag = 1;
        }
        repeated QosDomCarToSQ qosDomCarToSQ = 1;
      }
      QosDomCarToSQs qosDomCarToSQs = 3;
      message QosExpPhbDisbls {
        message QosExpPhbDisbl {
          enum DisableFwdType {
            DisableFwdType_VLL = 0;
          };
          DisableFwdType disableFwdType = 1;
        }
        repeated QosExpPhbDisbl qosExpPhbDisbl = 1;
      }
      QosExpPhbDisbls qosExpPhbDisbls = 4;
      message QosFabQueueEnables {
        message QosFabQueueEnable {
          enum Enable {
            Enable_ENABLE = 0;
          };
          Enable enable = 1;
          message QosVOQStatisticss {
            message QosVOQStatistics {
              enum CosType {
                CosType_FOUR = 0;
                CosType_ONE = 1;
                CosType_THREE = 2;
                CosType_TWO = 3;
              };
              CosType cosType = 1;
              string desSlotID = 2;
              uint32 desTmNum = 3;
              uint64 discardBytes = 4;
              uint64 discardPackets = 5;
              uint64 passBytes = 6;
              uint64 passPackets = 7;
              uint32 srcTmNum = 8;
              enum VoqFlag {
                VoqFlag_MULTICAST = 0;
                VoqFlag_UNICAST = 1;
              };
              VoqFlag voqFlag = 9;
            }
            repeated QosVOQStatistics qosVOQStatistics = 1;
          }
          QosVOQStatisticss qosVOQStatisticss = 2;
        }
        QosFabQueueEnable qosFabQueueEnable = 1;
      }
      QosFabQueueEnables qosFabQueueEnables = 5;
      message QosMcShapSrvTemplates {
        message QosMcShapSrvTemplate {
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_NOTCONFIG = 8;
          };
          ServiceClass serviceClass = 1;
          string templateName = 2;
        }
        repeated QosMcShapSrvTemplate qosMcShapSrvTemplate = 1;
      }
      QosMcShapSrvTemplates qosMcShapSrvTemplates = 6;
      message QosMcShapers {
        message QosMcShaper {
          uint32 shapingValue = 1;
        }
        QosMcShaper qosMcShaper = 1;
      }
      QosMcShapers qosMcShapers = 7;
      message QosMulticastShapers {
        message QosMulticastShaper {
          enum Priority {
            Priority_BOTH = 0;
            Priority_HP = 1;
            Priority_LP = 2;
          };
          Priority priority = 1;
          uint32 shapingValue = 2;
        }
        repeated QosMulticastShaper qosMulticastShaper = 1;
      }
      QosMulticastShapers qosMulticastShapers = 8;
      message QosPolicyMatchIpv6S {
        message QosPolicyMatchIpv6 {
          enum MatchMode {
            MatchMode_MASK = 0;
          };
          MatchMode matchMode = 1;
        }
        QosPolicyMatchIpv6 qosPolicyMatchIpv6 = 1;
      }
      QosPolicyMatchIpv6S qosPolicyMatchIpv6s = 9;
      message QosPolicyMatchMcs {
        message QosPolicyMatchMc {
          enum MatchMode {
            MatchMode_ENABLE = 0;
          };
          MatchMode matchMode = 1;
        }
        QosPolicyMatchMc qosPolicyMatchMc = 1;
      }
      QosPolicyMatchMcs qosPolicyMatchMcs = 10;
      message QosPolicyMatchMplsL2S {
        message QosPolicyMatchMplsL2 {
          bool enableFlg = 1;
        }
        QosPolicyMatchMplsL2 qosPolicyMatchMplsL2 = 1;
      }
      QosPolicyMatchMplsL2S qosPolicyMatchMplsL2s = 11;
      message QosPolicyMatchMplss {
        message QosPolicyMatchMpls {
          bool mplsPush = 1;
        }
        QosPolicyMatchMpls qosPolicyMatchMpls = 1;
      }
      QosPolicyMatchMplss qosPolicyMatchMplss = 12;
      message QosPolicyMatchPkts {
        message QosPolicyMatchPkt {
          bool enableFlg = 1;
        }
        QosPolicyMatchPkt qosPolicyMatchPkt = 1;
      }
      QosPolicyMatchPkts qosPolicyMatchPkts = 13;
      message QosPolicyMatchs {
        message QosPolicyMatch {
          bool mplsPop = 1;
          bool mplsPush = 2;
        }
        QosPolicyMatch qosPolicyMatch = 1;
      }
      QosPolicyMatchs qosPolicyMatchs = 14;
      message QosQOSBursts {
        message QosQOSBurst {
          uint32 bursttime = 1;
          uint32 minbytes = 2;
        }
        QosQOSBurst qosQOSBurst = 1;
      }
      QosQOSBursts qosQOSBursts = 15;
      message QosQOSGlobalBufCfgs {
        message QosQOSGlobalBufCfg {
          enum Direction {
            Direction_INBOUND = 0;
            Direction_OUTBOUND = 1;
          };
          Direction direction = 1;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
            ServiceClass_NOTCONFIG = 8;
          };
          ServiceClass serviceClass = 2;
          uint32 shareValue = 3;
        }
        repeated QosQOSGlobalBufCfg qosQOSGlobalBufCfg = 1;
      }
      QosQOSGlobalBufCfgs qosQOSGlobalBufCfgs = 16;
      message QosSlotFQPirs {
        message QosSlotFQPir {
          enum FqPirType {
            FqPirType_OFF = 0;
          };
          FqPirType fqPirType = 1;
        }
        repeated QosSlotFQPir qosSlotFQPir = 1;
      }
      QosSlotFQPirs qosSlotFQPirs = 17;
      message QosSlotMcVpnQueues {
        message QosSlotMcVpnQueue {
          string portWredName = 1;
          message QosSlotPortQueueStats {
            message QosSlotPortQueueStat {
              uint64 dropByteRate = 1;
              uint64 dropBytes = 2;
              uint64 dropPackets = 3;
              uint64 dropPktRate = 4;
              uint64 dropTailByteRate = 5;
              uint64 dropTailBytes = 6;
              uint64 dropTailPackets = 7;
              uint64 dropTailPktRate = 8;
              uint64 dropWredByteRate = 9;
              uint64 dropWredBytes = 10;
              uint64 dropWredPackets = 11;
              uint64 dropWredPktRate = 12;
              uint64 passByteRate = 13;
              uint64 passBytes = 14;
              uint64 passPackets = 15;
              uint64 passPktRate = 16;
            }
            repeated QosSlotPortQueueStat qosSlotPortQueueStat = 1;
          }
          QosSlotPortQueueStats qosSlotPortQueueStats = 2;
          enum QueueScheduleMode {
            QueueScheduleMode_LPQ = 0;
            QueueScheduleMode_PQ = 1;
            QueueScheduleMode_WFQ = 2;
          };
          QueueScheduleMode queueScheduleMode = 3;
          enum ServiceClass {
            ServiceClass_AF1 = 0;
            ServiceClass_AF2 = 1;
            ServiceClass_AF3 = 2;
            ServiceClass_AF4 = 3;
            ServiceClass_BE = 4;
            ServiceClass_CS6 = 5;
            ServiceClass_CS7 = 6;
            ServiceClass_EF = 7;
          };
          ServiceClass serviceClass = 4;
          uint32 shaping = 5;
          uint32 shapingPercentage = 6;
          uint32 weight = 7;
        }
        repeated QosSlotMcVpnQueue qosSlotMcVpnQueue = 1;
      }
      QosSlotMcVpnQueues qosSlotMcVpnQueues = 18;
      message QosSlotMcVpnShapers {
        message QosSlotMcVpnShaper {
          enum ShapingType {
            ShapingType_X_256K = 0;
            ShapingType_X_512K = 1;
            ShapingType_OTHER = 2;
          };
          ShapingType shapingType = 1;
          uint32 shapingValue = 2;
        }
        QosSlotMcVpnShaper qosSlotMcVpnShaper = 1;
      }
      QosSlotMcVpnShapers qosSlotMcVpnShapers = 19;
      message QosSlotORideAdjNums {
        message QosSlotORideAdjNum {
          uint32 adjNum = 1;
        }
        QosSlotORideAdjNum qosSlotORideAdjNum = 1;
      }
      QosSlotORideAdjNums qosSlotORideAdjNums = 20;
      message QosSlotORideDeCycles {
        message QosSlotORideDeCycle {
          uint32 deCycle = 1;
        }
        QosSlotORideDeCycle qosSlotORideDeCycle = 1;
      }
      QosSlotORideDeCycles qosSlotORideDeCycles = 21;
      message QosSlotORideEnables {
        message QosSlotORideEnable {
          uint32 disablePer = 1;
          uint32 enablePer = 2;
        }
        QosSlotORideEnable qosSlotORideEnable = 1;
      }
      QosSlotORideEnables qosSlotORideEnables = 22;
      message QosSlotORideGradeThrdIns {
        message QosSlotORideGradeThrdIn {
          uint32 deThrdValueIn = 1;
          uint32 upThrdValueIn = 2;
        }
        QosSlotORideGradeThrdIn qosSlotORideGradeThrdIn = 1;
      }
      QosSlotORideGradeThrdIns qosSlotORideGradeThrdIns = 23;
      message QosSlotORideGradeThrdOuts {
        message QosSlotORideGradeThrdOut {
          uint32 deThrdValueOut = 1;
          uint32 upThrdValueOut = 2;
        }
        QosSlotORideGradeThrdOut qosSlotORideGradeThrdOut = 1;
      }
      QosSlotORideGradeThrdOuts qosSlotORideGradeThrdOuts = 24;
      message QosSlotORideMonitorNums {
        message QosSlotORideMonitorNum {
          uint32 monitorNum = 1;
        }
        QosSlotORideMonitorNum qosSlotORideMonitorNum = 1;
      }
      QosSlotORideMonitorNums qosSlotORideMonitorNums = 25;
      message QosSlotORideUpCycles {
        message QosSlotORideUpCycle {
          uint32 upCycle = 1;
        }
        QosSlotORideUpCycle qosSlotORideUpCycle = 1;
      }
      QosSlotORideUpCycles qosSlotORideUpCycles = 26;
      message QosSlotUclMatchs {
        message QosSlotUclMatch {
          enum MatchType {
            MatchType_DESTUSER = 0;
            MatchType_INTERFACEACL = 1;
          };
          MatchType matchType = 1;
        }
        repeated QosSlotUclMatch qosSlotUclMatch = 1;
      }
      QosSlotUclMatchs qosSlotUclMatchs = 27;
      message QosUserQueueResource4Coss {
        message QosUserQueueResource4Cos {
          uint32 cosSizevalue = 1;
        }
        repeated QosUserQueueResource4Cos qosUserQueueResource4Cos = 1;
      }
      QosUserQueueResource4Coss qosUserQueueResource4Coss = 28;
      string slotId = 29;
    }
    repeated QosSlotQos qosSlotQos = 1;
  }
  QosSlotQoss qosSlotQoss = 33;
  message QosSubPortQueues {
    message QosSubPortQueue {
      message QosSubPortQueueConfigs {
        message QosSubPortQueueConfig {
          enum Direction {
            Direction_OUTBOUND = 0;
          };
          Direction direction = 1;
          string subPortQAppIf = 2;
          string subPortQueueName = 3;
        }
        QosSubPortQueueConfig qosSubPortQueueConfig = 1;
      }
      QosSubPortQueueConfigs qosSubPortQueueConfigs = 1;
      message QosSubPortQueueShapings {
        message QosSubPortQueueShaping {
          uint32 pbsValue = 1;
          uint32 shapingValue = 2;
        }
        QosSubPortQueueShaping qosSubPortQueueShaping = 1;
      }
      QosSubPortQueueShapings qosSubPortQueueShapings = 2;
      message QosSubPortQueueWeights {
        message QosSubPortQueueWeight {
          enum Direction {
            Direction_OUTBOUND = 0;
          };
          Direction direction = 1;
          uint32 weightValue = 2;
        }
        QosSubPortQueueWeight qosSubPortQueueWeight = 1;
      }
      QosSubPortQueueWeights qosSubPortQueueWeights = 3;
      string subPortQueueName = 4;
    }
    repeated QosSubPortQueue qosSubPortQueue = 1;
  }
  QosSubPortQueues qosSubPortQueues = 34;
  message QosSystemViews {
    message QosSystemView {
      message QosLinkLayerExcludes {
        message QosLinkLayerExclude {
          enum AccessType {
            AccessType_LEASED_LINE_ACCESS = 0;
            AccessType_NOTCONFIG = 1;
          };
          AccessType accessType = 1;
          enum ExcLayeType {
            ExcLayeType_L2TP_LAYER_EXCLUDE = 0;
            ExcLayeType_LINK_LAYER_EXCLUDE = 1;
          };
          ExcLayeType excLayeType = 2;
          string slotIDStr = 3;
        }
        repeated QosLinkLayerExclude qosLinkLayerExclude = 1;
      }
      QosLinkLayerExcludes qosLinkLayerExcludes = 1;
      message QosLinkLayerRedbacks {
        message QosLinkLayerRedback {
          enum RedbackType {
            RedbackType_LAC = 0;
            RedbackType_LNS = 1;
            RedbackType_LNSLAC = 2;
          };
          RedbackType redbackType = 1;
          string slotIDStr = 2;
        }
        repeated QosLinkLayerRedback qosLinkLayerRedback = 1;
      }
      QosLinkLayerRedbacks qosLinkLayerRedbacks = 2;
      message QosScheModes {
        message QosScheMode {
          enum ModeType {
            ModeType_MODE2 = 0;
            ModeType_MODE3 = 1;
          };
          ModeType modeType = 1;
          string slotID = 2;
        }
        repeated QosScheMode qosScheMode = 1;
      }
      QosScheModes qosScheModes = 3;
      message QosTMSchTraffs {
        message QosTMSchTraff {
          string cardIDStr = 1;
          string slotIDStr = 2;
        }
        repeated QosTMSchTraff qosTMSchTraff = 1;
      }
      QosTMSchTraffs qosTMSchTraffs = 4;
      enum ResType {
        ResType_SYSTEMVIEW = 0;
      };
      ResType resType = 5;
    }
    repeated QosSystemView qosSystemView = 1;
  }
  QosSystemViews qosSystemViews = 35;
  message QosVPNQoss {
    message QosVPNQos {
      message QosVpnVxlanCarDisables {
        message QosVpnVxlanCarDisable {
          string disableSlot = 1;
          enum ExcludeMode {
            ExcludeMode_EXCLUDE = 0;
            ExcludeMode_NON_EXCLUDE = 1;
          };
          ExcludeMode excludeMode = 2;
        }
        repeated QosVpnVxlanCarDisable qosVpnVxlanCarDisable = 1;
      }
      QosVpnVxlanCarDisables qosVpnVxlanCarDisables = 1;
      message QosVpnVxlanPhbs {
        message QosVpnVxlanPhb {
          string dsvpnName = 1;
        }
        QosVpnVxlanPhb qosVpnVxlanPhb = 1;
      }
      QosVpnVxlanPhbs qosVpnVxlanPhbs = 2;
      message QosVpnVxlanPolicyApplys {
        message QosVpnVxlanPolicyApply {
          message QosVpnVxlanPolicyStats {
            message QosVpnVxlanPolicyStat {
              message QosVpnVxlanClassifierStats {
                message QosVpnVxlanClassifierStat {
                  uint64 broadcastSuppressDropBytes = 1;
                  uint64 broadcastSuppressDropBytesRate = 2;
                  uint64 broadcastSuppressDropPkts = 3;
                  uint64 broadcastSuppressDropPktsRate = 4;
                  uint64 broadcastSuppressPassBytes = 5;
                  uint64 broadcastSuppressPassBytesRate = 6;
                  uint64 broadcastSuppressPassPkts = 7;
                  uint64 broadcastSuppressPassPktsRate = 8;
                  uint64 multicastSuppressDropBytes = 9;
                  uint64 multicastSuppressDropBytesRate = 10;
                  uint64 multicastSuppressDropPkts = 11;
                  uint64 multicastSuppressDropPktsRate = 12;
                  uint64 multicastSuppressPassBytes = 13;
                  uint64 multicastSuppressPassBytesRate = 14;
                  uint64 multicastSuppressPassPkts = 15;
                  uint64 multicastSuppressPassPktsRate = 16;
                  string slotId = 17;
                  uint64 unknowUniSuppressDropBytes = 18;
                  uint64 unknowUniSuppressDropBytesRate = 19;
                  uint64 unknowUniSuppressDropPkts = 20;
                  uint64 unknowUniSuppressDropPktsRate = 21;
                  uint64 unknowUniSuppressPassBytes = 22;
                  uint64 unknowUniSuppressPassBytesRate = 23;
                  uint64 unknowUniSuppressPassPkts = 24;
                  uint64 unknowUniSuppressPassPktsRate = 25;
                  uint64 vpncarBytes = 26;
                  uint64 vpncarBytesRate = 27;
                  uint64 vpncarDropBytes = 28;
                  uint64 vpncarDropBytesRate = 29;
                  uint64 vpncarDropPkts = 30;
                  uint64 vpncarDropPktsRate = 31;
                  uint64 vpncarGBytes = 32;
                  uint64 vpncarGBytesRate = 33;
                  uint64 vpncarGPkts = 34;
                  uint64 vpncarGPktsRate = 35;
                  uint64 vpncarPackets = 36;
                  uint64 vpncarPassBytes = 37;
                  uint64 vpncarPassBytesRate = 38;
                  uint64 vpncarPassPkts = 39;
                  uint64 vpncarPassPktsRate = 40;
                  uint64 vpncarPktsRate = 41;
                  uint64 vpncarRBytes = 42;
                  uint64 vpncarRBytesRate = 43;
                  uint64 vpncarRPkts = 44;
                  uint64 vpncarRPktsRate = 45;
                  uint64 vpncarYBytes = 46;
                  uint64 vpncarYBytesRate = 47;
                  uint64 vpncarYPkts = 48;
                  uint64 vpncarYPktsRate = 49;
                  string vpnclassifierName = 50;
                  uint64 vpnfilterBytes = 51;
                  uint64 vpnfilterBytesRate = 52;
                  uint64 vpnfilterPackets = 53;
                  uint64 vpnfilterPktsRate = 54;
                  uint64 vpnmatchByteRt = 55;
                  uint64 vpnmatchBytes = 56;
                  uint64 vpnmatchDropBytes = 57;
                  uint64 vpnmatchDropBytesRate = 58;
                  uint64 vpnmatchDropPackets = 59;
                  uint64 vpnmatchDropPktsRate = 60;
                  uint64 vpnmatchPackets = 61;
                  uint64 vpnmatchPassBytes = 62;
                  uint64 vpnmatchPassBytesRate = 63;
                  uint64 vpnmatchPassPackets = 64;
                  uint64 vpnmatchPassPktsRate = 65;
                  uint64 vpnmatchPktRt = 66;
                  uint64 vpnurpfDropBytes = 67;
                  uint64 vpnurpfDropBytesRate = 68;
                  uint64 vpnurpfDropPackets = 69;
                  uint64 vpnurpfDropPktsRate = 70;
                }
                repeated QosVpnVxlanClassifierStat qosVpnVxlanClassifierStat = 1;
              }
              QosVpnVxlanClassifierStats qosVpnVxlanClassifierStats = 1;
              string slotId = 2;
              string vpnapplyTime = 3;
              uint64 vpnmatchByteRate = 4;
              uint64 vpnmatchBytes = 5;
              uint64 vpnmatchDropBytes = 6;
              uint64 vpnmatchDropBytesRate = 7;
              uint64 vpnmatchDropPkts = 8;
              uint64 vpnmatchDropPktsRate = 9;
              uint64 vpnmatchPackets = 10;
              uint64 vpnmatchPassBytes = 11;
              uint64 vpnmatchPassBytesRate = 12;
              uint64 vpnmatchPassPkts = 13;
              uint64 vpnmatchPassPktsRate = 14;
              uint64 vpnmatchPktRate = 15;
              uint64 vpnmissBytes = 16;
              uint64 vpnmissBytesRate = 17;
              uint64 vpnmissPackets = 18;
              uint64 vpnmissPktsRate = 19;
              bool vpnstatClearFlag = 20;
              string vpnstatClearTime = 21;
              string vpnstatEnableTime = 22;
            }
            repeated QosVpnVxlanPolicyStat qosVpnVxlanPolicyStat = 1;
          }
          QosVpnVxlanPolicyStats qosVpnVxlanPolicyStats = 1;
          enum Vpndirection {
            Vpndirection_INBOUND = 0;
            Vpndirection_OUTBOUND = 1;
          };
          Vpndirection vpndirection = 2;
          enum Vpnlayer {
            Vpnlayer_LINK = 0;
            Vpnlayer_NONE = 1;
          };
          Vpnlayer vpnlayer = 3;
          string vpnpolicyName = 4;
        }
        repeated QosVpnVxlanPolicyApply qosVpnVxlanPolicyApply = 1;
      }
      QosVpnVxlanPolicyApplys qosVpnVxlanPolicyApplys = 3;
      message QosVpnVxlanTrusts {
        message QosVpnVxlanTrust {
          string dsvpnName = 1;
          enum TrustvpnType {
            TrustvpnType_X_8021P = 0;
            TrustvpnType_DS = 1;
          };
          TrustvpnType trustvpnType = 2;
        }
        repeated QosVpnVxlanTrust qosVpnVxlanTrust = 1;
      }
      QosVpnVxlanTrusts qosVpnVxlanTrusts = 4;
      string vpnName = 5;
    }
    repeated QosVPNQos qosVPNQos = 1;
  }
  QosVPNQoss qosVPNQoss = 36;
  message QosWred {
    message QosFlowWreds {
      message QosFlowWred {
        string flowWredName = 1;
        message QosWredColors {
          message QosWredColor {
            enum Color {
              Color_GREEN = 0;
              Color_RED = 1;
              Color_YELLOW = 2;
            };
            Color color = 1;
            uint32 discardPct = 2;
            uint32 highLimitPct = 3;
            uint32 lowLimitPct = 4;
          }
          repeated QosWredColor qosWredColor = 1;
        }
        QosWredColors qosWredColors = 2;
        uint32 queueDepth = 3;
      }
      repeated QosFlowWred qosFlowWred = 1;
    }
    QosFlowWreds qosFlowWreds = 1;
    message QosPortWreds {
      message QosPortWred {
        message QosWredColors {
          message QosWredColor {
            enum Color {
              Color_GREEN = 0;
              Color_RED = 1;
              Color_YELLOW = 2;
            };
            Color color = 1;
            uint32 discardPct = 2;
            uint32 highLimitPct = 3;
            uint32 lowLimitPct = 4;
          }
          repeated QosWredColor qosWredColor = 1;
        }
        QosWredColors qosWredColors = 1;
        uint32 queueDepth = 2;
        string wredName = 3;
      }
      repeated QosPortWred qosPortWred = 1;
    }
    QosPortWreds qosPortWreds = 2;
    message QosWredQueues {
      message QosWredQueue {
        enum ServiceClass {
          ServiceClass_AF1 = 0;
          ServiceClass_AF2 = 1;
          ServiceClass_AF3 = 2;
          ServiceClass_AF4 = 3;
          ServiceClass_BE = 4;
          ServiceClass_CS6 = 5;
          ServiceClass_CS7 = 6;
          ServiceClass_EF = 7;
        };
        ServiceClass serviceClass = 1;
        enum SpeedType {
          SpeedType_BOTHSPEED = 0;
          SpeedType_HIGHSPEED = 1;
          SpeedType_LOWSPEED = 2;
        };
        SpeedType speedType = 2;
        string wredName = 3;
      }
      repeated QosWredQueue qosWredQueue = 1;
    }
    QosWredQueues qosWredQueues = 3;
    message QosWreds {
      message QosWred {
        message QosWredColors {
          message QosWredColor {
            enum Color {
              Color_GREEN = 0;
              Color_RED = 1;
              Color_YELLOW = 2;
            };
            Color color = 1;
            uint32 discardPct = 2;
            uint32 highLimitPct = 3;
            uint32 lowLimitPct = 4;
          }
          repeated QosWredColor qosWredColor = 1;
        }
        QosWredColors qosWredColors = 1;
        uint32 queueDepthPct = 2;
        string wredName = 3;
      }
      repeated QosWred qosWred = 1;
    }
    QosWreds qosWreds = 4;
  }
  QosWred qosWred = 37;
}
message HwXQoSPortQueueAlarm {
  int32 InterfaceIndex = 1;
  string Queue = 2;
  int32 TrunkIndex = 3;
}

message HwXQoSPortQueueAlarmClear {
  int32 InterfaceIndex = 1;
  string Queue = 2;
  int32 TrunkIndex = 3;
}
