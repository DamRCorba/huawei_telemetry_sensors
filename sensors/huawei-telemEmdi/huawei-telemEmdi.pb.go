// Code generated by protoc-gen-go. DO NOT EDIT.
// source: huawei-telemEmdi.proto

package huawei_telemEmdi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TelemEmdi struct {
	EmdiTelemReps        *TelemEmdi_EmdiTelemReps `protobuf:"bytes,1,opt,name=emdiTelemReps,proto3" json:"emdiTelemReps,omitempty"`
	EmdiTelemRtps        *TelemEmdi_EmdiTelemRtps `protobuf:"bytes,2,opt,name=emdiTelemRtps,proto3" json:"emdiTelemRtps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TelemEmdi) Reset()         { *m = TelemEmdi{} }
func (m *TelemEmdi) String() string { return proto.CompactTextString(m) }
func (*TelemEmdi) ProtoMessage()    {}
func (*TelemEmdi) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac083d0ea30a2178, []int{0}
}

func (m *TelemEmdi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemEmdi.Unmarshal(m, b)
}
func (m *TelemEmdi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemEmdi.Marshal(b, m, deterministic)
}
func (m *TelemEmdi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemEmdi.Merge(m, src)
}
func (m *TelemEmdi) XXX_Size() int {
	return xxx_messageInfo_TelemEmdi.Size(m)
}
func (m *TelemEmdi) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemEmdi.DiscardUnknown(m)
}

var xxx_messageInfo_TelemEmdi proto.InternalMessageInfo

func (m *TelemEmdi) GetEmdiTelemReps() *TelemEmdi_EmdiTelemReps {
	if m != nil {
		return m.EmdiTelemReps
	}
	return nil
}

func (m *TelemEmdi) GetEmdiTelemRtps() *TelemEmdi_EmdiTelemRtps {
	if m != nil {
		return m.EmdiTelemRtps
	}
	return nil
}

type TelemEmdi_EmdiTelemReps struct {
	EmdiTelemRep         []*TelemEmdi_EmdiTelemReps_EmdiTelemRep `protobuf:"bytes,1,rep,name=emdiTelemRep,proto3" json:"emdiTelemRep,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TelemEmdi_EmdiTelemReps) Reset()         { *m = TelemEmdi_EmdiTelemReps{} }
func (m *TelemEmdi_EmdiTelemReps) String() string { return proto.CompactTextString(m) }
func (*TelemEmdi_EmdiTelemReps) ProtoMessage()    {}
func (*TelemEmdi_EmdiTelemReps) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac083d0ea30a2178, []int{0, 0}
}

func (m *TelemEmdi_EmdiTelemReps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemEmdi_EmdiTelemReps.Unmarshal(m, b)
}
func (m *TelemEmdi_EmdiTelemReps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemEmdi_EmdiTelemReps.Marshal(b, m, deterministic)
}
func (m *TelemEmdi_EmdiTelemReps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemEmdi_EmdiTelemReps.Merge(m, src)
}
func (m *TelemEmdi_EmdiTelemReps) XXX_Size() int {
	return xxx_messageInfo_TelemEmdi_EmdiTelemReps.Size(m)
}
func (m *TelemEmdi_EmdiTelemReps) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemEmdi_EmdiTelemReps.DiscardUnknown(m)
}

var xxx_messageInfo_TelemEmdi_EmdiTelemReps proto.InternalMessageInfo

func (m *TelemEmdi_EmdiTelemReps) GetEmdiTelemRep() []*TelemEmdi_EmdiTelemReps_EmdiTelemRep {
	if m != nil {
		return m.EmdiTelemRep
	}
	return nil
}

type TelemEmdi_EmdiTelemReps_EmdiTelemRep struct {
	BdId                     uint32   `protobuf:"varint,1,opt,name=bdId,proto3" json:"bdId,omitempty"`
	ChannelGroupAddress      uint32   `protobuf:"varint,2,opt,name=channelGroupAddress,proto3" json:"channelGroupAddress,omitempty"`
	ChannelName              string   `protobuf:"bytes,3,opt,name=channelName,proto3" json:"channelName,omitempty"`
	ChannelSourceAddress     uint32   `protobuf:"varint,4,opt,name=channelSourceAddress,proto3" json:"channelSourceAddress,omitempty"`
	ChannelVpnType           uint32   `protobuf:"varint,5,opt,name=channelVpnType,proto3" json:"channelVpnType,omitempty"`
	MonitorPeriod            uint32   `protobuf:"varint,6,opt,name=monitorPeriod,proto3" json:"monitorPeriod,omitempty"`
	MonitorTime              uint64   `protobuf:"varint,7,opt,name=monitorTime,proto3" json:"monitorTime,omitempty"`
	ReportPeriod             uint32   `protobuf:"varint,8,opt,name=reportPeriod,proto3" json:"reportPeriod,omitempty"`
	ReportTime               uint64   `protobuf:"varint,9,opt,name=reportTime,proto3" json:"reportTime,omitempty"`
	TotalDisorderdPacketsNum uint64   `protobuf:"varint,10,opt,name=totalDisorderdPacketsNum,proto3" json:"totalDisorderdPacketsNum,omitempty"`
	TotalLossPacketsNum      uint64   `protobuf:"varint,11,opt,name=totalLossPacketsNum,proto3" json:"totalLossPacketsNum,omitempty"`
	TotalRecvPacketsNum      uint64   `protobuf:"varint,12,opt,name=totalRecvPacketsNum,proto3" json:"totalRecvPacketsNum,omitempty"`
	VlanId                   uint32   `protobuf:"varint,13,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	VpnName                  string   `protobuf:"bytes,14,opt,name=vpnName,proto3" json:"vpnName,omitempty"`
	VrId                     uint32   `protobuf:"varint,15,opt,name=vrId,proto3" json:"vrId,omitempty"`
	VsiName                  string   `protobuf:"bytes,16,opt,name=vsiName,proto3" json:"vsiName,omitempty"`
	WorstDisorderdPacketsNum uint64   `protobuf:"varint,17,opt,name=worstDisorderdPacketsNum,proto3" json:"worstDisorderdPacketsNum,omitempty"`
	WorstLossPacketsNum      uint64   `protobuf:"varint,18,opt,name=worstLossPacketsNum,proto3" json:"worstLossPacketsNum,omitempty"`
	WorstRecvPacketsNum      uint64   `protobuf:"varint,19,opt,name=worstRecvPacketsNum,proto3" json:"worstRecvPacketsNum,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) Reset()         { *m = TelemEmdi_EmdiTelemReps_EmdiTelemRep{} }
func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) String() string { return proto.CompactTextString(m) }
func (*TelemEmdi_EmdiTelemReps_EmdiTelemRep) ProtoMessage()    {}
func (*TelemEmdi_EmdiTelemReps_EmdiTelemRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac083d0ea30a2178, []int{0, 0, 0}
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemEmdi_EmdiTelemReps_EmdiTelemRep.Unmarshal(m, b)
}
func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemEmdi_EmdiTelemReps_EmdiTelemRep.Marshal(b, m, deterministic)
}
func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemEmdi_EmdiTelemReps_EmdiTelemRep.Merge(m, src)
}
func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) XXX_Size() int {
	return xxx_messageInfo_TelemEmdi_EmdiTelemReps_EmdiTelemRep.Size(m)
}
func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemEmdi_EmdiTelemReps_EmdiTelemRep.DiscardUnknown(m)
}

var xxx_messageInfo_TelemEmdi_EmdiTelemReps_EmdiTelemRep proto.InternalMessageInfo

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetBdId() uint32 {
	if m != nil {
		return m.BdId
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetChannelGroupAddress() uint32 {
	if m != nil {
		return m.ChannelGroupAddress
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetChannelSourceAddress() uint32 {
	if m != nil {
		return m.ChannelSourceAddress
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetChannelVpnType() uint32 {
	if m != nil {
		return m.ChannelVpnType
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetMonitorPeriod() uint32 {
	if m != nil {
		return m.MonitorPeriod
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetMonitorTime() uint64 {
	if m != nil {
		return m.MonitorTime
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetReportPeriod() uint32 {
	if m != nil {
		return m.ReportPeriod
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetReportTime() uint64 {
	if m != nil {
		return m.ReportTime
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetTotalDisorderdPacketsNum() uint64 {
	if m != nil {
		return m.TotalDisorderdPacketsNum
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetTotalLossPacketsNum() uint64 {
	if m != nil {
		return m.TotalLossPacketsNum
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetTotalRecvPacketsNum() uint64 {
	if m != nil {
		return m.TotalRecvPacketsNum
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetVpnName() string {
	if m != nil {
		return m.VpnName
	}
	return ""
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetVrId() uint32 {
	if m != nil {
		return m.VrId
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetVsiName() string {
	if m != nil {
		return m.VsiName
	}
	return ""
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetWorstDisorderdPacketsNum() uint64 {
	if m != nil {
		return m.WorstDisorderdPacketsNum
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetWorstLossPacketsNum() uint64 {
	if m != nil {
		return m.WorstLossPacketsNum
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemReps_EmdiTelemRep) GetWorstRecvPacketsNum() uint64 {
	if m != nil {
		return m.WorstRecvPacketsNum
	}
	return 0
}

type TelemEmdi_EmdiTelemRtps struct {
	EmdiTelemRtp         []*TelemEmdi_EmdiTelemRtps_EmdiTelemRtp `protobuf:"bytes,1,rep,name=emdiTelemRtp,proto3" json:"emdiTelemRtp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TelemEmdi_EmdiTelemRtps) Reset()         { *m = TelemEmdi_EmdiTelemRtps{} }
func (m *TelemEmdi_EmdiTelemRtps) String() string { return proto.CompactTextString(m) }
func (*TelemEmdi_EmdiTelemRtps) ProtoMessage()    {}
func (*TelemEmdi_EmdiTelemRtps) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac083d0ea30a2178, []int{0, 1}
}

func (m *TelemEmdi_EmdiTelemRtps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemEmdi_EmdiTelemRtps.Unmarshal(m, b)
}
func (m *TelemEmdi_EmdiTelemRtps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemEmdi_EmdiTelemRtps.Marshal(b, m, deterministic)
}
func (m *TelemEmdi_EmdiTelemRtps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemEmdi_EmdiTelemRtps.Merge(m, src)
}
func (m *TelemEmdi_EmdiTelemRtps) XXX_Size() int {
	return xxx_messageInfo_TelemEmdi_EmdiTelemRtps.Size(m)
}
func (m *TelemEmdi_EmdiTelemRtps) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemEmdi_EmdiTelemRtps.DiscardUnknown(m)
}

var xxx_messageInfo_TelemEmdi_EmdiTelemRtps proto.InternalMessageInfo

func (m *TelemEmdi_EmdiTelemRtps) GetEmdiTelemRtp() []*TelemEmdi_EmdiTelemRtps_EmdiTelemRtp {
	if m != nil {
		return m.EmdiTelemRtp
	}
	return nil
}

type TelemEmdi_EmdiTelemRtps_EmdiTelemRtp struct {
	BdId                 uint32   `protobuf:"varint,1,opt,name=bdId,proto3" json:"bdId,omitempty"`
	ChannelGroupAddress  uint32   `protobuf:"varint,2,opt,name=channelGroupAddress,proto3" json:"channelGroupAddress,omitempty"`
	ChannelName          string   `protobuf:"bytes,3,opt,name=channelName,proto3" json:"channelName,omitempty"`
	ChannelSourceAddress uint32   `protobuf:"varint,4,opt,name=channelSourceAddress,proto3" json:"channelSourceAddress,omitempty"`
	ChannelVpnType       uint32   `protobuf:"varint,5,opt,name=channelVpnType,proto3" json:"channelVpnType,omitempty"`
	DisorderdPacketsNum  uint64   `protobuf:"varint,6,opt,name=disorderdPacketsNum,proto3" json:"disorderdPacketsNum,omitempty"`
	LossPacketsNum       uint64   `protobuf:"varint,7,opt,name=lossPacketsNum,proto3" json:"lossPacketsNum,omitempty"`
	MonitorPeriod        uint32   `protobuf:"varint,8,opt,name=monitorPeriod,proto3" json:"monitorPeriod,omitempty"`
	MonitorTime          uint64   `protobuf:"varint,9,opt,name=monitorTime,proto3" json:"monitorTime,omitempty"`
	RecvPacketsNum       uint64   `protobuf:"varint,10,opt,name=recvPacketsNum,proto3" json:"recvPacketsNum,omitempty"`
	ReportPeriod         uint32   `protobuf:"varint,11,opt,name=reportPeriod,proto3" json:"reportPeriod,omitempty"`
	ReportTime           uint64   `protobuf:"varint,12,opt,name=reportTime,proto3" json:"reportTime,omitempty"`
	VlanId               uint32   `protobuf:"varint,13,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	VpnName              string   `protobuf:"bytes,14,opt,name=vpnName,proto3" json:"vpnName,omitempty"`
	VrId                 uint32   `protobuf:"varint,15,opt,name=vrId,proto3" json:"vrId,omitempty"`
	VsiName              string   `protobuf:"bytes,16,opt,name=vsiName,proto3" json:"vsiName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) Reset()         { *m = TelemEmdi_EmdiTelemRtps_EmdiTelemRtp{} }
func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) String() string { return proto.CompactTextString(m) }
func (*TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) ProtoMessage()    {}
func (*TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac083d0ea30a2178, []int{0, 1, 0}
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemEmdi_EmdiTelemRtps_EmdiTelemRtp.Unmarshal(m, b)
}
func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemEmdi_EmdiTelemRtps_EmdiTelemRtp.Marshal(b, m, deterministic)
}
func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemEmdi_EmdiTelemRtps_EmdiTelemRtp.Merge(m, src)
}
func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) XXX_Size() int {
	return xxx_messageInfo_TelemEmdi_EmdiTelemRtps_EmdiTelemRtp.Size(m)
}
func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemEmdi_EmdiTelemRtps_EmdiTelemRtp.DiscardUnknown(m)
}

var xxx_messageInfo_TelemEmdi_EmdiTelemRtps_EmdiTelemRtp proto.InternalMessageInfo

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetBdId() uint32 {
	if m != nil {
		return m.BdId
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetChannelGroupAddress() uint32 {
	if m != nil {
		return m.ChannelGroupAddress
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetChannelSourceAddress() uint32 {
	if m != nil {
		return m.ChannelSourceAddress
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetChannelVpnType() uint32 {
	if m != nil {
		return m.ChannelVpnType
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetDisorderdPacketsNum() uint64 {
	if m != nil {
		return m.DisorderdPacketsNum
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetLossPacketsNum() uint64 {
	if m != nil {
		return m.LossPacketsNum
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetMonitorPeriod() uint32 {
	if m != nil {
		return m.MonitorPeriod
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetMonitorTime() uint64 {
	if m != nil {
		return m.MonitorTime
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetRecvPacketsNum() uint64 {
	if m != nil {
		return m.RecvPacketsNum
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetReportPeriod() uint32 {
	if m != nil {
		return m.ReportPeriod
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetReportTime() uint64 {
	if m != nil {
		return m.ReportTime
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetVpnName() string {
	if m != nil {
		return m.VpnName
	}
	return ""
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetVrId() uint32 {
	if m != nil {
		return m.VrId
	}
	return 0
}

func (m *TelemEmdi_EmdiTelemRtps_EmdiTelemRtp) GetVsiName() string {
	if m != nil {
		return m.VsiName
	}
	return ""
}

func init() {
	proto.RegisterType((*TelemEmdi)(nil), "huawei_telemEmdi.TelemEmdi")
	proto.RegisterType((*TelemEmdi_EmdiTelemReps)(nil), "huawei_telemEmdi.TelemEmdi.EmdiTelemReps")
	proto.RegisterType((*TelemEmdi_EmdiTelemReps_EmdiTelemRep)(nil), "huawei_telemEmdi.TelemEmdi.EmdiTelemReps.EmdiTelemRep")
	proto.RegisterType((*TelemEmdi_EmdiTelemRtps)(nil), "huawei_telemEmdi.TelemEmdi.EmdiTelemRtps")
	proto.RegisterType((*TelemEmdi_EmdiTelemRtps_EmdiTelemRtp)(nil), "huawei_telemEmdi.TelemEmdi.EmdiTelemRtps.EmdiTelemRtp")
}

func init() { proto.RegisterFile("huawei-telemEmdi.proto", fileDescriptor_ac083d0ea30a2178) }

var fileDescriptor_ac083d0ea30a2178 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x55, 0xc1, 0x6a, 0xdb, 0x4a,
	0x14, 0xc5, 0x2f, 0xb6, 0x12, 0x5f, 0x49, 0x7e, 0xe9, 0xb8, 0x84, 0xc1, 0x8b, 0x22, 0x42, 0x09,
	0xee, 0xa2, 0x26, 0xb8, 0xd0, 0x45, 0x77, 0x85, 0x86, 0x62, 0x28, 0x69, 0x50, 0x4d, 0x17, 0xdd,
	0x14, 0xc5, 0x33, 0x10, 0x51, 0x49, 0x33, 0xcc, 0x8c, 0x1d, 0xfa, 0x53, 0xfd, 0x86, 0xfe, 0x40,
	0xff, 0xa4, 0xdf, 0x50, 0x8a, 0xee, 0xc8, 0x66, 0x46, 0x56, 0x68, 0xb2, 0xe8, 0xa6, 0x3b, 0xdd,
	0x73, 0xee, 0x39, 0xd2, 0x9d, 0x3b, 0x07, 0xc1, 0xc9, 0xcd, 0x3a, 0xbb, 0xe5, 0xf9, 0x73, 0xc3,
	0x0b, 0x5e, 0x5e, 0x94, 0x2c, 0x9f, 0x49, 0x25, 0x8c, 0x20, 0xc7, 0x16, 0xff, 0xbc, 0xc3, 0x4f,
	0x7f, 0xc4, 0x30, 0x5c, 0x6e, 0x2b, 0xf2, 0x1e, 0x62, 0x5e, 0xb2, 0x1c, 0x81, 0x94, 0x4b, 0x4d,
	0x7b, 0x49, 0x6f, 0x1a, 0xce, 0x9f, 0xcd, 0xda, 0xba, 0xd9, 0x4e, 0x33, 0xbb, 0x70, 0x05, 0xa9,
	0xaf, 0xf7, 0x0d, 0x8d, 0xd4, 0xf4, 0xbf, 0x87, 0x18, 0x1a, 0xdf, 0xd0, 0x48, 0x3d, 0xf9, 0x19,
	0x40, 0xec, 0xbd, 0x91, 0x7c, 0x82, 0xc8, 0x7d, 0x27, 0xed, 0x25, 0x07, 0xd3, 0x70, 0xfe, 0xf2,
	0xde, 0x9f, 0xec, 0x55, 0xa9, 0xe7, 0x35, 0xf9, 0x35, 0x80, 0xc8, 0xa5, 0x09, 0x81, 0xfe, 0x35,
	0x5b, 0x30, 0x3c, 0x97, 0x38, 0xc5, 0x67, 0x72, 0x0e, 0xe3, 0xd5, 0x4d, 0x56, 0x55, 0xbc, 0x78,
	0xab, 0xc4, 0x5a, 0xbe, 0x66, 0x4c, 0x71, 0x6d, 0x27, 0x8d, 0xd3, 0x2e, 0x8a, 0x24, 0x10, 0x36,
	0xf0, 0x65, 0x56, 0x72, 0x7a, 0x90, 0xf4, 0xa6, 0xc3, 0xd4, 0x85, 0xc8, 0x1c, 0x1e, 0x37, 0xe5,
	0x07, 0xb1, 0x56, 0x2b, 0xbe, 0x35, 0xed, 0xa3, 0x69, 0x27, 0x47, 0xce, 0x60, 0xd4, 0xe0, 0x1f,
	0x65, 0xb5, 0xfc, 0x2a, 0x39, 0x1d, 0x60, 0x77, 0x0b, 0x25, 0x4f, 0x21, 0x2e, 0x45, 0x95, 0x1b,
	0xa1, 0xae, 0xb8, 0xca, 0x05, 0xa3, 0x01, 0xb6, 0xf9, 0x60, 0xfd, 0x8d, 0x0d, 0xb0, 0xcc, 0x4b,
	0x4e, 0x0f, 0x93, 0xde, 0xb4, 0x9f, 0xba, 0x10, 0x39, 0x85, 0x48, 0x71, 0x29, 0x94, 0x69, 0x6c,
	0x8e, 0xd0, 0xc6, 0xc3, 0xc8, 0x13, 0x00, 0x5b, 0xa3, 0xc9, 0x10, 0x4d, 0x1c, 0x84, 0xbc, 0x02,
	0x6a, 0x84, 0xc9, 0x8a, 0x37, 0xb9, 0x16, 0x8a, 0x71, 0xc5, 0xae, 0xb2, 0xd5, 0x17, 0x6e, 0xf4,
	0xe5, 0xba, 0xa4, 0x80, 0xdd, 0x77, 0xf2, 0xf5, 0xb9, 0x23, 0xf7, 0x4e, 0x68, 0xed, 0xc8, 0x42,
	0x94, 0x75, 0x51, 0x3b, 0x45, 0xca, 0x57, 0x1b, 0x47, 0x11, 0x39, 0x0a, 0x9f, 0x22, 0x27, 0x10,
	0x6c, 0x8a, 0xac, 0x5a, 0x30, 0x1a, 0xe3, 0x74, 0x4d, 0x45, 0x28, 0x1c, 0x6e, 0x64, 0x85, 0xdb,
	0x1b, 0xe1, 0xf6, 0xb6, 0x65, 0x7d, 0x43, 0x36, 0x6a, 0xc1, 0xe8, 0xff, 0xf6, 0x86, 0xd4, 0xcf,
	0xd8, 0xad, 0x73, 0xec, 0x3e, 0x6e, 0xba, 0x6d, 0x59, 0xcf, 0x7f, 0x2b, 0x94, 0x36, 0x5d, 0xf3,
	0x3f, 0xb2, 0xf3, 0xdf, 0xc5, 0xd7, 0xd3, 0x20, 0xd7, 0x9a, 0x9f, 0xd8, 0x69, 0x3a, 0xa8, 0x9d,
	0xa2, 0x35, 0xff, 0xd8, 0x51, 0xf8, 0xd4, 0xe4, 0xdb, 0xc0, 0x8d, 0x9b, 0x69, 0xc7, 0xcd, 0x3c,
	0x30, 0x6e, 0xc6, 0x8b, 0x9b, 0xf1, 0xe2, 0x66, 0xe4, 0xe4, 0x7b, 0xdf, 0x8d, 0x9b, 0xf9, 0x37,
	0xe2, 0x76, 0x0e, 0x63, 0xd6, 0xb1, 0xdd, 0xc0, 0x1e, 0x7a, 0x07, 0x55, 0x3b, 0x17, 0xfe, 0x4e,
	0x6d, 0xfa, 0x5a, 0xe8, 0x7e, 0x90, 0x8f, 0xee, 0x11, 0xe4, 0xe1, 0x7e, 0x90, 0xcf, 0x60, 0xa4,
	0xfc, 0x1b, 0x61, 0xa3, 0xd7, 0x42, 0xf7, 0x02, 0x1f, 0xfe, 0x31, 0xf0, 0xd1, 0x5e, 0xe0, 0xff,
	0x72, 0xa0, 0xae, 0x03, 0xfc, 0xd1, 0xbd, 0xf8, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x76, 0x53, 0x61,
	0xd0, 0x02, 0x07, 0x00, 0x00,
}
