// ---------------------------------------------------------------------------
// Protofilename : huawei-trafficmng.proto
syntax = "proto3";
// Automatically generated by ProtoYang
// ProtoYang-version 1
// module huawei-trafficmng
// revision 2019-12-21
// revision 2019-07-21
// namespace urn:huawei:yang:huawei-trafficmng

option go_package = ".;huaweiV8R12_trafficmng";
package huaweiV8R12_trafficmng;

message Trafficmng {
   message BoardAlarmThresholds {
      message BoardAlarmThreshold {
         enum Type {
            Type_LPU = 0;
            Type_SFU = 1;
         };
         Type type = 1 [json_name = "type"];
         string slot_id = 2 [json_name = "slot-id"];
         uint32 value = 3 [json_name = "value"];
      }
      repeated BoardAlarmThreshold board_alarm_threshold = 1 [json_name = "board-alarm-threshold"];
   }
   BoardAlarmThresholds board_alarm_thresholds = 1 [json_name = "board-alarm-thresholds"];
   message TmSfuInformations {
      message TmSfuInformation {
         string slot_id = 1 [json_name = "slot-id"];
         message SfuStatistics {
            message SfuStatistic {
               uint32 chip_id = 1 [json_name = "chip-id"];
               uint64 pass_cells = 2 [json_name = "pass-cells"];
               uint64 discard_cells = 3 [json_name = "discard-cells"];
               uint64 send_cells = 4 [json_name = "send-cells"];
            }
            repeated SfuStatistic sfu_statistic = 1 [json_name = "sfu-statistic"];
         }
         SfuStatistics sfu_statistics = 2 [json_name = "sfu-statistics"];
         message InboundSwitchPortStatuss {
            message InboundSwitchPortStatus {
               uint32 chip_number = 1 [json_name = "chip-number"];
               uint32 port = 2 [json_name = "port"];
               enum Status {
                  Status_CLOSE = 0;
                  Status_OPEN = 1;
                  Status_INIT = 2;
                  Status_LINKX_LOSTX_ERROR = 3;
                  Status_CRCX_ERROR = 4;
                  Status_PACKETX_ERROR = 5;
                  Status_UNSTABLEX_ERROR = 6;
                  Status_ISOSWFX_ERROR = 11;
                  Status_ISOTMX_ERROR = 26;
                  Status_LINKV = 42;
                  Status_TXX_OFF = 49;
               };
               Status status = 3 [json_name = "status"];
            }
            repeated InboundSwitchPortStatus inbound_switch_port_status = 1 [json_name = "inbound-switch-port-status"];
         }
         InboundSwitchPortStatuss inbound_switch_port_statuss = 3 [json_name = "inbound-switch-port-statuss"];
         message OutboundSwitchPortStatuss {
            message OutboundSwitchPortStatus {
               uint32 chip_number = 1 [json_name = "chip-number"];
               uint32 port = 2 [json_name = "port"];
               enum Status {
                  Status_CLOSE = 0;
                  Status_OPEN = 1;
                  Status_INIT = 2;
                  Status_LINKX_LOSTX_ERROR = 3;
                  Status_CRCX_ERROR = 4;
                  Status_PACKETX_ERROR = 5;
                  Status_UNSTABLEX_ERROR = 6;
                  Status_ISOSWFX_ERROR = 11;
                  Status_ISOTMX_ERROR = 26;
                  Status_LINKV = 42;
                  Status_TXX_OFF = 49;
               };
               Status status = 3 [json_name = "status"];
            }
            repeated OutboundSwitchPortStatus outbound_switch_port_status = 1 [json_name = "outbound-switch-port-status"];
         }
         OutboundSwitchPortStatuss outbound_switch_port_statuss = 4 [json_name = "outbound-switch-port-statuss"];
      }
      repeated TmSfuInformation tm_sfu_information = 1 [json_name = "tm-sfu-information"];
   }
   TmSfuInformations tm_sfu_informations = 2 [json_name = "tm-sfu-informations"];
   message BoardAlarmSfuThresholds {
      message BoardAlarmSfuThreshold {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 value = 2 [json_name = "value"];
      }
      repeated BoardAlarmSfuThreshold board_alarm_sfu_threshold = 1 [json_name = "board-alarm-sfu-threshold"];
   }
   BoardAlarmSfuThresholds board_alarm_sfu_thresholds = 3 [json_name = "board-alarm-sfu-thresholds"];
   message BoardAlarmLpuThresholds {
      message BoardAlarmLpuThreshold {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 value = 2 [json_name = "value"];
      }
      repeated BoardAlarmLpuThreshold board_alarm_lpu_threshold = 1 [json_name = "board-alarm-lpu-threshold"];
   }
   BoardAlarmLpuThresholds board_alarm_lpu_thresholds = 4 [json_name = "board-alarm-lpu-thresholds"];
   message SfuWarmBackupSwitch {
      enum Enable {
         Enable_ENABLE = 0;
      };
      Enable enable = 1 [json_name = "enable"];
   }
   SfuWarmBackupSwitch sfu_warm_backup_switch = 5 [json_name = "sfu-warm-backup-switch"];
   message PacketLossAlarms {
      message PacketLossAlarm {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 packets = 2 [json_name = "packets"];
         uint32 seconds = 3 [json_name = "seconds"];
      }
      repeated PacketLossAlarm packet_loss_alarm = 1 [json_name = "packet-loss-alarm"];
   }
   PacketLossAlarms packet_loss_alarms = 6 [json_name = "packet-loss-alarms"];
   message LpuBackpressureSwitch {
      enum Enable {
         Enable_ENABLE = 0;
      };
      Enable enable = 1 [json_name = "enable"];
   }
   LpuBackpressureSwitch lpu_backpressure_switch = 7 [json_name = "lpu-backpressure-switch"];
   message TmLpuStatuss {
      message TmLpuStatus {
         string slot_id = 1 [json_name = "slot-id"];
         message InboundSwitchPortStatuss {
            message InboundSwitchPortStatus {
               uint32 chip_number = 1 [json_name = "chip-number"];
               uint32 port = 2 [json_name = "port"];
               enum Status {
                  Status_CLOSE = 0;
                  Status_OPEN = 1;
                  Status_INIT = 2;
                  Status_LINKX_LOSTX_ERROR = 3;
                  Status_CRCX_ERROR = 4;
                  Status_PACKETX_ERROR = 5;
                  Status_UNSTABLEX_ERROR = 6;
                  Status_ISOSWFX_ERROR = 11;
                  Status_ISOTMX_ERROR = 26;
                  Status_LINKV = 42;
                  Status_TXX_OFF = 49;
               };
               Status status = 3 [json_name = "status"];
            }
            repeated InboundSwitchPortStatus inbound_switch_port_status = 1 [json_name = "inbound-switch-port-status"];
         }
         InboundSwitchPortStatuss inbound_switch_port_statuss = 2 [json_name = "inbound-switch-port-statuss"];
         message OutboundSwitchPortStatuss {
            message OutboundSwitchPortStatus {
               uint32 chip_number = 1 [json_name = "chip-number"];
               uint32 port = 2 [json_name = "port"];
               enum Status {
                  Status_CLOSE = 0;
                  Status_OPEN = 1;
                  Status_INIT = 2;
                  Status_LINKX_LOSTX_ERROR = 3;
                  Status_CRCX_ERROR = 4;
                  Status_PACKETX_ERROR = 5;
                  Status_UNSTABLEX_ERROR = 6;
                  Status_ISOSWFX_ERROR = 11;
                  Status_ISOTMX_ERROR = 26;
                  Status_LINKV = 42;
                  Status_TXX_OFF = 49;
               };
               Status status = 3 [json_name = "status"];
            }
            repeated OutboundSwitchPortStatus outbound_switch_port_status = 1 [json_name = "outbound-switch-port-status"];
         }
         OutboundSwitchPortStatuss outbound_switch_port_statuss = 3 [json_name = "outbound-switch-port-statuss"];
         message TmStatisticss {
            message TmStatistics {
               uint32 chip_id = 1 [json_name = "chip-id"];
               uint64 pass_packets_in = 2 [json_name = "pass-packets-in"];
               uint64 discard_packets_in = 3 [json_name = "discard-packets-in"];
               uint64 send_cells_in = 4 [json_name = "send-cells-in"];
               uint64 pass_cells_out = 5 [json_name = "pass-cells-out"];
               uint64 pass_packets_out = 6 [json_name = "pass-packets-out"];
               uint64 discard_packets_out = 7 [json_name = "discard-packets-out"];
               uint64 send_packets_out = 8 [json_name = "send-packets-out"];
            }
            repeated TmStatistics tm_statistics = 1 [json_name = "tm-statistics"];
         }
         TmStatisticss tm_statisticss = 4 [json_name = "tm-statisticss"];
      }
      repeated TmLpuStatus tm_lpu_status = 1 [json_name = "tm-lpu-status"];
   }
   TmLpuStatuss tm_lpu_statuss = 8 [json_name = "tm-lpu-statuss"];
}
